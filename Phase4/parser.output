Nonterminals useless in grammar

    break_statement
    continue_statement
    whileblock
    forblock


Rules useless in grammar

  103 whileblock: TOK_L_CURLY_BR statements TOK_R_CURLY_BR

  104 forblock: TOK_L_CURLY_BR statements TOK_R_CURLY_BR


State 104 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statements statement
    2        | ε

    3 statement: expression TOK_SEMICOLON
    4          | if_statement
    5          | ifelse_statement
    6          | while_statement
    7          | for_statement
    8          | return_statement
    9          | TOK_BREAK TOK_SEMICOLON
   10          | TOK_CONTINUE TOK_SEMICOLON
   11          | block
   12          | funcdef
   13          | TOK_SEMICOLON
   14          | error TOK_SEMICOLON

   15 statements: statements statement
   16           | ε

   17 M: ε

   18 assignexpr: lvalue TOK_ASSIGN expression

   19 expression: assignexpr
   20           | expression TOK_PLUS expression
   21           | expression TOK_MINUS expression
   22           | expression TOK_MULTIPLY expression
   23           | expression TOK_DIVIDE expression
   24           | expression TOK_MODULO expression
   25           | expression TOK_GREATER expression
   26           | expression TOK_LESS expression
   27           | expression TOK_GR_EQUAL expression
   28           | expression TOK_LS_EQUAL expression
   29           | expression TOK_EQUAL expression
   30           | expression TOK_N_EQUAL expression

   31 $@1: ε

   32 expression: expression TOK_AND $@1 M expression

   33 $@2: ε

   34 expression: expression TOK_OR $@2 M expression
   35           | term

   36 term: TOK_L_PARENTH expression TOK_R_PARENTH
   37     | TOK_MINUS expression
   38     | TOK_NOT expression
   39     | TOK_DBL_PLUS lvalue
   40     | lvalue TOK_DBL_PLUS
   41     | TOK_DBL_MINUS lvalue
   42     | lvalue TOK_DBL_MINUS
   43     | primary

   44 primary: lvalue
   45        | call
   46        | objectdef
   47        | TOK_L_PARENTH funcdef TOK_R_PARENTH
   48        | const

   49 lvalue: TOK_ID
   50       | TOK_LOCAL TOK_ID
   51       | TOK_DBL_COLON TOK_ID
   52       | member

   53 member: lvalue TOK_DOT TOK_ID
   54       | lvalue TOK_L_BR expression TOK_R_BR
   55       | call TOK_DOT TOK_ID
   56       | call TOK_L_BR expression TOK_R_BR

   57 call: call normcall
   58     | lvalue callsuffix
   59     | TOK_L_PARENTH funcdef TOK_R_PARENTH normcall

   60 callsuffix: normcall
   61           | methodcall

   62 normcall: TOK_L_PARENTH elist TOK_R_PARENTH

   63 methodcall: TOK_DBL_DOT TOK_ID normcall

   64 elist: elist TOK_COMMA expression
   65      | expression
   66      | ε

   67 indexedelem: TOK_L_CURLY_BR expression TOK_COLON expression TOK_R_CURLY_BR

   68 indexed: indexedelem
   69        | indexed TOK_COMMA indexedelem

   70 objectdef: TOK_L_BR elist TOK_R_BR
   71          | TOK_L_BR indexed TOK_R_BR

   72 $@3: ε

   73 block: TOK_L_CURLY_BR $@3 statements TOK_R_CURLY_BR

   74 funcdef_block: TOK_L_CURLY_BR statements TOK_R_CURLY_BR

   75 funcname: TOK_ID

   76 funcprefix: TOK_FUNCTION funcname
   77           | TOK_FUNCTION

   78 funcargs: TOK_L_PARENTH idlist TOK_R_PARENTH

   79 funcbody: funcdef_block

   80 funcdef: funcprefix funcargs funcbody

   81 const: TOK_INT
   82      | TOK_FLOAT
   83      | TOK_STRING
   84      | TOK_NIL
   85      | TOK_TRUE
   86      | TOK_FALSE

   87 idlist: TOK_ID
   88       | idlist TOK_COMMA TOK_ID
   89       | ε

   90 ifprefix: TOK_IF TOK_L_PARENTH expression TOK_R_PARENTH

   91 elseprefix: TOK_ELSE

   92 if_statement: ifprefix statement

   93 ifelse_statement: ifprefix statement elseprefix statement

   94 whilestart: TOK_WHILE

   95 whilecond: TOK_L_PARENTH expression TOK_R_PARENTH

   96 while_statement: whilestart whilecond statement

   97 N: ε

   98 M1: ε

   99 forprefix: TOK_FOR TOK_L_PARENTH elist TOK_SEMICOLON M1 expression TOK_SEMICOLON

  100 for_statement: forprefix N elist TOK_R_PARENTH N statement N

  101 return_statement: TOK_RETURN TOK_SEMICOLON
  102                 | TOK_RETURN expression TOK_SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256) 14
    TOK_IF (258) 90
    TOK_ELSE (259) 91
    TOK_WHILE (260) 94
    TOK_FOR (261) 99
    TOK_FUNCTION (262) 76 77
    TOK_RETURN (263) 101 102
    TOK_BREAK (264) 9
    TOK_CONTINUE (265) 10
    TOK_AND (266) 32
    TOK_NOT (267) 38
    TOK_OR (268) 34
    TOK_LOCAL (269) 50
    TOK_TRUE <intVal> (270) 85
    TOK_FALSE <intVal> (271) 86
    TOK_NIL <strVal> (272) 84
    TOK_ASSIGN (273) 18
    TOK_PLUS (274) 20
    TOK_MINUS (275) 21 37
    TOK_MULTIPLY (276) 22
    TOK_DIVIDE (277) 23
    TOK_MODULO (278) 24
    TOK_EQUAL (279) 29
    TOK_N_EQUAL (280) 30
    TOK_DBL_PLUS (281) 39 40
    TOK_DBL_MINUS (282) 41 42
    TOK_GREATER (283) 25
    TOK_LESS (284) 26
    TOK_GR_EQUAL (285) 27
    TOK_LS_EQUAL (286) 28
    TOK_L_CURLY_BR (287) 67 73 74
    TOK_R_CURLY_BR (288) 67 73 74
    TOK_L_BR (289) 54 56 70 71
    TOK_R_BR (290) 54 56 70 71
    TOK_L_PARENTH (291) 36 47 59 62 78 90 95 99
    TOK_R_PARENTH (292) 36 47 59 62 78 90 95 100
    TOK_SEMICOLON (293) 3 9 10 13 14 99 101 102
    TOK_COMMA (294) 64 69 88
    TOK_COLON (295) 67
    TOK_DBL_COLON (296) 51
    TOK_DOT (297) 53 55
    TOK_DBL_DOT (298) 63
    TOK_ID <strVal> (299) 49 50 51 53 55 63 75 87 88
    TOK_INT <intVal> (300) 81
    TOK_FLOAT <floatVal> (301) 82
    TOK_STRING <strVal> (302) 83
    TOK_UMINUS (303)


Nonterminals, with rules where they appear

    $accept (49)
        on left: 0
    program (50)
        on left: 1 2
        on right: 0
    statement <stmt_struct> (51)
        on left: 3 4 5 6 7 8 9 10 11 12 13 14
        on right: 1 15 92 93 96 100
    statements <stmt_struct> (52)
        on left: 15 16
        on right: 1 15 73 74
    M <unsignedVal> (53)
        on left: 17
        on right: 32 34
    assignexpr <expr> (54)
        on left: 18
        on right: 19
    expression <expr> (55)
        on left: 19 20 21 22 23 24 25 26 27 28 29 30 32 34 35
        on right: 3 18 20 21 22 23 24 25 26 27 28 29 30 32 34 36 37 38 54 56 64 65 67 90 95 99 102
    $@1 (56)
        on left: 31
        on right: 32
    $@2 (57)
        on left: 33
        on right: 34
    term <expr> (58)
        on left: 36 37 38 39 40 41 42 43
        on right: 35
    primary <expr> (59)
        on left: 44 45 46 47 48
        on right: 43
    lvalue <expr> (60)
        on left: 49 50 51 52
        on right: 18 39 40 41 42 44 53 54 58
    member <expr> (61)
        on left: 53 54 55 56
        on right: 52
    call <expr> (62)
        on left: 57 58 59
        on right: 45 55 56 57
    callsuffix <call_struct> (63)
        on left: 60 61
        on right: 58
    normcall <call_struct> (64)
        on left: 62
        on right: 57 59 60 63
    methodcall <call_struct> (65)
        on left: 63
        on right: 61
    elist <expr> (66)
        on left: 64 65 66
        on right: 62 64 70 99 100
    indexedelem <indexed> (67)
        on left: 67
        on right: 68 69
    indexed <indexed> (68)
        on left: 68 69
        on right: 69 71
    objectdef <expr> (69)
        on left: 70 71
        on right: 46
    block (70)
        on left: 73
        on right: 11
    $@3 (71)
        on left: 72
        on right: 73
    funcdef_block (72)
        on left: 74
        on right: 79
    funcname <strVal> (73)
        on left: 75
        on right: 76
    funcprefix <symbol> (74)
        on left: 76 77
        on right: 80
    funcargs (75)
        on left: 78
        on right: 80
    funcbody <unsignedVal> (76)
        on left: 79
        on right: 80
    funcdef <expr> (77)
        on left: 80
        on right: 12 47 59
    const <expr> (78)
        on left: 81 82 83 84 85 86
        on right: 48
    idlist <strVal> (79)
        on left: 87 88 89
        on right: 78 88
    ifprefix <unsignedVal> (80)
        on left: 90
        on right: 92 93
    elseprefix <unsignedVal> (81)
        on left: 91
        on right: 93
    if_statement <unsignedVal> (82)
        on left: 92
        on right: 4
    ifelse_statement <unsignedVal> (83)
        on left: 93
        on right: 5
    whilestart <unsignedVal> (84)
        on left: 94
        on right: 96
    whilecond <unsignedVal> (85)
        on left: 95
        on right: 96
    while_statement (86)
        on left: 96
        on right: 6
    N <unsignedVal> (87)
        on left: 97
        on right: 100
    M1 <unsignedVal> (88)
        on left: 98
        on right: 99
    forprefix <forprefix_struct> (89)
        on left: 99
        on right: 100
    for_statement (90)
        on left: 100
        on right: 7
    return_statement <stmt_struct> (91)
        on left: 101 102
        on right: 8


State 0

    0 $accept: • program $end
    1 program: • statements statement
    2        | ε •  [$end]
   15 statements: • statements statement
   16           | ε •  [error, TOK_IF, TOK_WHILE, TOK_FOR, TOK_FUNCTION, TOK_RETURN, TOK_BREAK, TOK_CONTINUE, TOK_NOT, TOK_LOCAL, TOK_TRUE, TOK_FALSE, TOK_NIL, TOK_MINUS, TOK_DBL_PLUS, TOK_DBL_MINUS, TOK_L_CURLY_BR, TOK_L_BR, TOK_L_PARENTH, TOK_SEMICOLON, TOK_DBL_COLON, TOK_ID, TOK_INT, TOK_FLOAT, TOK_STRING]

    $end      reduce using rule 2 (program)
    $default  reduce using rule 16 (statements)

    program     go to state 1
    statements  go to state 2


State 1

    0 $accept: program • $end

    $end  shift, and go to state 3


State 2

    1 program: statements • statement
    3 statement: • expression TOK_SEMICOLON
    4          | • if_statement
    5          | • ifelse_statement
    6          | • while_statement
    7          | • for_statement
    8          | • return_statement
    9          | • TOK_BREAK TOK_SEMICOLON
   10          | • TOK_CONTINUE TOK_SEMICOLON
   11          | • block
   12          | • funcdef
   13          | • TOK_SEMICOLON
   14          | • error TOK_SEMICOLON
   15 statements: statements • statement
   18 assignexpr: • lvalue TOK_ASSIGN expression
   19 expression: • assignexpr
   20           | • expression TOK_PLUS expression
   21           | • expression TOK_MINUS expression
   22           | • expression TOK_MULTIPLY expression
   23           | • expression TOK_DIVIDE expression
   24           | • expression TOK_MODULO expression
   25           | • expression TOK_GREATER expression
   26           | • expression TOK_LESS expression
   27           | • expression TOK_GR_EQUAL expression
   28           | • expression TOK_LS_EQUAL expression
   29           | • expression TOK_EQUAL expression
   30           | • expression TOK_N_EQUAL expression
   32           | • expression TOK_AND $@1 M expression
   34           | • expression TOK_OR $@2 M expression
   35           | • term
   36 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   37     | • TOK_MINUS expression
   38     | • TOK_NOT expression
   39     | • TOK_DBL_PLUS lvalue
   40     | • lvalue TOK_DBL_PLUS
   41     | • TOK_DBL_MINUS lvalue
   42     | • lvalue TOK_DBL_MINUS
   43     | • primary
   44 primary: • lvalue
   45        | • call
   46        | • objectdef
   47        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   48        | • const
   49 lvalue: • TOK_ID
   50       | • TOK_LOCAL TOK_ID
   51       | • TOK_DBL_COLON TOK_ID
   52       | • member
   53 member: • lvalue TOK_DOT TOK_ID
   54       | • lvalue TOK_L_BR expression TOK_R_BR
   55       | • call TOK_DOT TOK_ID
   56       | • call TOK_L_BR expression TOK_R_BR
   57 call: • call normcall
   58     | • lvalue callsuffix
   59     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   70 objectdef: • TOK_L_BR elist TOK_R_BR
   71          | • TOK_L_BR indexed TOK_R_BR
   73 block: • TOK_L_CURLY_BR $@3 statements TOK_R_CURLY_BR
   76 funcprefix: • TOK_FUNCTION funcname
   77           | • TOK_FUNCTION
   80 funcdef: • funcprefix funcargs funcbody
   81 const: • TOK_INT
   82      | • TOK_FLOAT
   83      | • TOK_STRING
   84      | • TOK_NIL
   85      | • TOK_TRUE
   86      | • TOK_FALSE
   90 ifprefix: • TOK_IF TOK_L_PARENTH expression TOK_R_PARENTH
   92 if_statement: • ifprefix statement
   93 ifelse_statement: • ifprefix statement elseprefix statement
   94 whilestart: • TOK_WHILE
   96 while_statement: • whilestart whilecond statement
   99 forprefix: • TOK_FOR TOK_L_PARENTH elist TOK_SEMICOLON M1 expression TOK_SEMICOLON
  100 for_statement: • forprefix N elist TOK_R_PARENTH N statement N
  101 return_statement: • TOK_RETURN TOK_SEMICOLON
  102                 | • TOK_RETURN expression TOK_SEMICOLON

    error           shift, and go to state 4
    TOK_IF          shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_FOR         shift, and go to state 7
    TOK_FUNCTION    shift, and go to state 8
    TOK_RETURN      shift, and go to state 9
    TOK_BREAK       shift, and go to state 10
    TOK_CONTINUE    shift, and go to state 11
    TOK_NOT         shift, and go to state 12
    TOK_LOCAL       shift, and go to state 13
    TOK_TRUE        shift, and go to state 14
    TOK_FALSE       shift, and go to state 15
    TOK_NIL         shift, and go to state 16
    TOK_MINUS       shift, and go to state 17
    TOK_DBL_PLUS    shift, and go to state 18
    TOK_DBL_MINUS   shift, and go to state 19
    TOK_L_CURLY_BR  shift, and go to state 20
    TOK_L_BR        shift, and go to state 21
    TOK_L_PARENTH   shift, and go to state 22
    TOK_SEMICOLON   shift, and go to state 23
    TOK_DBL_COLON   shift, and go to state 24
    TOK_ID          shift, and go to state 25
    TOK_INT         shift, and go to state 26
    TOK_FLOAT       shift, and go to state 27
    TOK_STRING      shift, and go to state 28

    statement         go to state 29
    assignexpr        go to state 30
    expression        go to state 31
    term              go to state 32
    primary           go to state 33
    lvalue            go to state 34
    member            go to state 35
    call              go to state 36
    objectdef         go to state 37
    block             go to state 38
    funcprefix        go to state 39
    funcdef           go to state 40
    const             go to state 41
    ifprefix          go to state 42
    if_statement      go to state 43
    ifelse_statement  go to state 44
    whilestart        go to state 45
    while_statement   go to state 46
    forprefix         go to state 47
    for_statement     go to state 48
    return_statement  go to state 49


State 3

    0 $accept: program $end •

    $default  accept


State 4

   14 statement: error • TOK_SEMICOLON

    TOK_SEMICOLON  shift, and go to state 50


State 5

   90 ifprefix: TOK_IF • TOK_L_PARENTH expression TOK_R_PARENTH

    TOK_L_PARENTH  shift, and go to state 51


State 6

   94 whilestart: TOK_WHILE •

    $default  reduce using rule 94 (whilestart)


State 7

   99 forprefix: TOK_FOR • TOK_L_PARENTH elist TOK_SEMICOLON M1 expression TOK_SEMICOLON

    TOK_L_PARENTH  shift, and go to state 52


State 8

   75 funcname: • TOK_ID
   76 funcprefix: TOK_FUNCTION • funcname
   77           | TOK_FUNCTION •  [TOK_L_PARENTH]

    TOK_ID  shift, and go to state 53

    $default  reduce using rule 77 (funcprefix)

    funcname  go to state 54


State 9

   18 assignexpr: • lvalue TOK_ASSIGN expression
   19 expression: • assignexpr
   20           | • expression TOK_PLUS expression
   21           | • expression TOK_MINUS expression
   22           | • expression TOK_MULTIPLY expression
   23           | • expression TOK_DIVIDE expression
   24           | • expression TOK_MODULO expression
   25           | • expression TOK_GREATER expression
   26           | • expression TOK_LESS expression
   27           | • expression TOK_GR_EQUAL expression
   28           | • expression TOK_LS_EQUAL expression
   29           | • expression TOK_EQUAL expression
   30           | • expression TOK_N_EQUAL expression
   32           | • expression TOK_AND $@1 M expression
   34           | • expression TOK_OR $@2 M expression
   35           | • term
   36 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   37     | • TOK_MINUS expression
   38     | • TOK_NOT expression
   39     | • TOK_DBL_PLUS lvalue
   40     | • lvalue TOK_DBL_PLUS
   41     | • TOK_DBL_MINUS lvalue
   42     | • lvalue TOK_DBL_MINUS
   43     | • primary
   44 primary: • lvalue
   45        | • call
   46        | • objectdef
   47        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   48        | • const
   49 lvalue: • TOK_ID
   50       | • TOK_LOCAL TOK_ID
   51       | • TOK_DBL_COLON TOK_ID
   52       | • member
   53 member: • lvalue TOK_DOT TOK_ID
   54       | • lvalue TOK_L_BR expression TOK_R_BR
   55       | • call TOK_DOT TOK_ID
   56       | • call TOK_L_BR expression TOK_R_BR
   57 call: • call normcall
   58     | • lvalue callsuffix
   59     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   70 objectdef: • TOK_L_BR elist TOK_R_BR
   71          | • TOK_L_BR indexed TOK_R_BR
   81 const: • TOK_INT
   82      | • TOK_FLOAT
   83      | • TOK_STRING
   84      | • TOK_NIL
   85      | • TOK_TRUE
   86      | • TOK_FALSE
  101 return_statement: TOK_RETURN • TOK_SEMICOLON
  102                 | TOK_RETURN • expression TOK_SEMICOLON

    TOK_NOT        shift, and go to state 12
    TOK_LOCAL      shift, and go to state 13
    TOK_TRUE       shift, and go to state 14
    TOK_FALSE      shift, and go to state 15
    TOK_NIL        shift, and go to state 16
    TOK_MINUS      shift, and go to state 17
    TOK_DBL_PLUS   shift, and go to state 18
    TOK_DBL_MINUS  shift, and go to state 19
    TOK_L_BR       shift, and go to state 21
    TOK_L_PARENTH  shift, and go to state 22
    TOK_SEMICOLON  shift, and go to state 55
    TOK_DBL_COLON  shift, and go to state 24
    TOK_ID         shift, and go to state 25
    TOK_INT        shift, and go to state 26
    TOK_FLOAT      shift, and go to state 27
    TOK_STRING     shift, and go to state 28

    assignexpr  go to state 30
    expression  go to state 56
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 10

    9 statement: TOK_BREAK • TOK_SEMICOLON

    TOK_SEMICOLON  shift, and go to state 57


State 11

   10 statement: TOK_CONTINUE • TOK_SEMICOLON

    TOK_SEMICOLON  shift, and go to state 58


State 12

   18 assignexpr: • lvalue TOK_ASSIGN expression
   19 expression: • assignexpr
   20           | • expression TOK_PLUS expression
   21           | • expression TOK_MINUS expression
   22           | • expression TOK_MULTIPLY expression
   23           | • expression TOK_DIVIDE expression
   24           | • expression TOK_MODULO expression
   25           | • expression TOK_GREATER expression
   26           | • expression TOK_LESS expression
   27           | • expression TOK_GR_EQUAL expression
   28           | • expression TOK_LS_EQUAL expression
   29           | • expression TOK_EQUAL expression
   30           | • expression TOK_N_EQUAL expression
   32           | • expression TOK_AND $@1 M expression
   34           | • expression TOK_OR $@2 M expression
   35           | • term
   36 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   37     | • TOK_MINUS expression
   38     | • TOK_NOT expression
   38     | TOK_NOT • expression
   39     | • TOK_DBL_PLUS lvalue
   40     | • lvalue TOK_DBL_PLUS
   41     | • TOK_DBL_MINUS lvalue
   42     | • lvalue TOK_DBL_MINUS
   43     | • primary
   44 primary: • lvalue
   45        | • call
   46        | • objectdef
   47        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   48        | • const
   49 lvalue: • TOK_ID
   50       | • TOK_LOCAL TOK_ID
   51       | • TOK_DBL_COLON TOK_ID
   52       | • member
   53 member: • lvalue TOK_DOT TOK_ID
   54       | • lvalue TOK_L_BR expression TOK_R_BR
   55       | • call TOK_DOT TOK_ID
   56       | • call TOK_L_BR expression TOK_R_BR
   57 call: • call normcall
   58     | • lvalue callsuffix
   59     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   70 objectdef: • TOK_L_BR elist TOK_R_BR
   71          | • TOK_L_BR indexed TOK_R_BR
   81 const: • TOK_INT
   82      | • TOK_FLOAT
   83      | • TOK_STRING
   84      | • TOK_NIL
   85      | • TOK_TRUE
   86      | • TOK_FALSE

    TOK_NOT        shift, and go to state 12
    TOK_LOCAL      shift, and go to state 13
    TOK_TRUE       shift, and go to state 14
    TOK_FALSE      shift, and go to state 15
    TOK_NIL        shift, and go to state 16
    TOK_MINUS      shift, and go to state 17
    TOK_DBL_PLUS   shift, and go to state 18
    TOK_DBL_MINUS  shift, and go to state 19
    TOK_L_BR       shift, and go to state 21
    TOK_L_PARENTH  shift, and go to state 22
    TOK_DBL_COLON  shift, and go to state 24
    TOK_ID         shift, and go to state 25
    TOK_INT        shift, and go to state 26
    TOK_FLOAT      shift, and go to state 27
    TOK_STRING     shift, and go to state 28

    assignexpr  go to state 30
    expression  go to state 59
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 13

   50 lvalue: TOK_LOCAL • TOK_ID

    TOK_ID  shift, and go to state 60


State 14

   85 const: TOK_TRUE •

    $default  reduce using rule 85 (const)


State 15

   86 const: TOK_FALSE •

    $default  reduce using rule 86 (const)


State 16

   84 const: TOK_NIL •

    $default  reduce using rule 84 (const)


State 17

   18 assignexpr: • lvalue TOK_ASSIGN expression
   19 expression: • assignexpr
   20           | • expression TOK_PLUS expression
   21           | • expression TOK_MINUS expression
   22           | • expression TOK_MULTIPLY expression
   23           | • expression TOK_DIVIDE expression
   24           | • expression TOK_MODULO expression
   25           | • expression TOK_GREATER expression
   26           | • expression TOK_LESS expression
   27           | • expression TOK_GR_EQUAL expression
   28           | • expression TOK_LS_EQUAL expression
   29           | • expression TOK_EQUAL expression
   30           | • expression TOK_N_EQUAL expression
   32           | • expression TOK_AND $@1 M expression
   34           | • expression TOK_OR $@2 M expression
   35           | • term
   36 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   37     | • TOK_MINUS expression
   37     | TOK_MINUS • expression
   38     | • TOK_NOT expression
   39     | • TOK_DBL_PLUS lvalue
   40     | • lvalue TOK_DBL_PLUS
   41     | • TOK_DBL_MINUS lvalue
   42     | • lvalue TOK_DBL_MINUS
   43     | • primary
   44 primary: • lvalue
   45        | • call
   46        | • objectdef
   47        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   48        | • const
   49 lvalue: • TOK_ID
   50       | • TOK_LOCAL TOK_ID
   51       | • TOK_DBL_COLON TOK_ID
   52       | • member
   53 member: • lvalue TOK_DOT TOK_ID
   54       | • lvalue TOK_L_BR expression TOK_R_BR
   55       | • call TOK_DOT TOK_ID
   56       | • call TOK_L_BR expression TOK_R_BR
   57 call: • call normcall
   58     | • lvalue callsuffix
   59     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   70 objectdef: • TOK_L_BR elist TOK_R_BR
   71          | • TOK_L_BR indexed TOK_R_BR
   81 const: • TOK_INT
   82      | • TOK_FLOAT
   83      | • TOK_STRING
   84      | • TOK_NIL
   85      | • TOK_TRUE
   86      | • TOK_FALSE

    TOK_NOT        shift, and go to state 12
    TOK_LOCAL      shift, and go to state 13
    TOK_TRUE       shift, and go to state 14
    TOK_FALSE      shift, and go to state 15
    TOK_NIL        shift, and go to state 16
    TOK_MINUS      shift, and go to state 17
    TOK_DBL_PLUS   shift, and go to state 18
    TOK_DBL_MINUS  shift, and go to state 19
    TOK_L_BR       shift, and go to state 21
    TOK_L_PARENTH  shift, and go to state 22
    TOK_DBL_COLON  shift, and go to state 24
    TOK_ID         shift, and go to state 25
    TOK_INT        shift, and go to state 26
    TOK_FLOAT      shift, and go to state 27
    TOK_STRING     shift, and go to state 28

    assignexpr  go to state 30
    expression  go to state 61
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 18

   39 term: TOK_DBL_PLUS • lvalue
   49 lvalue: • TOK_ID
   50       | • TOK_LOCAL TOK_ID
   51       | • TOK_DBL_COLON TOK_ID
   52       | • member
   53 member: • lvalue TOK_DOT TOK_ID
   54       | • lvalue TOK_L_BR expression TOK_R_BR
   55       | • call TOK_DOT TOK_ID
   56       | • call TOK_L_BR expression TOK_R_BR
   57 call: • call normcall
   58     | • lvalue callsuffix
   59     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall

    TOK_LOCAL      shift, and go to state 13
    TOK_L_PARENTH  shift, and go to state 62
    TOK_DBL_COLON  shift, and go to state 24
    TOK_ID         shift, and go to state 25

    lvalue  go to state 63
    member  go to state 35
    call    go to state 64


State 19

   41 term: TOK_DBL_MINUS • lvalue
   49 lvalue: • TOK_ID
   50       | • TOK_LOCAL TOK_ID
   51       | • TOK_DBL_COLON TOK_ID
   52       | • member
   53 member: • lvalue TOK_DOT TOK_ID
   54       | • lvalue TOK_L_BR expression TOK_R_BR
   55       | • call TOK_DOT TOK_ID
   56       | • call TOK_L_BR expression TOK_R_BR
   57 call: • call normcall
   58     | • lvalue callsuffix
   59     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall

    TOK_LOCAL      shift, and go to state 13
    TOK_L_PARENTH  shift, and go to state 62
    TOK_DBL_COLON  shift, and go to state 24
    TOK_ID         shift, and go to state 25

    lvalue  go to state 65
    member  go to state 35
    call    go to state 64


State 20

   72 $@3: ε •
   73 block: TOK_L_CURLY_BR • $@3 statements TOK_R_CURLY_BR

    $default  reduce using rule 72 ($@3)

    $@3  go to state 66


State 21

   18 assignexpr: • lvalue TOK_ASSIGN expression
   19 expression: • assignexpr
   20           | • expression TOK_PLUS expression
   21           | • expression TOK_MINUS expression
   22           | • expression TOK_MULTIPLY expression
   23           | • expression TOK_DIVIDE expression
   24           | • expression TOK_MODULO expression
   25           | • expression TOK_GREATER expression
   26           | • expression TOK_LESS expression
   27           | • expression TOK_GR_EQUAL expression
   28           | • expression TOK_LS_EQUAL expression
   29           | • expression TOK_EQUAL expression
   30           | • expression TOK_N_EQUAL expression
   32           | • expression TOK_AND $@1 M expression
   34           | • expression TOK_OR $@2 M expression
   35           | • term
   36 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   37     | • TOK_MINUS expression
   38     | • TOK_NOT expression
   39     | • TOK_DBL_PLUS lvalue
   40     | • lvalue TOK_DBL_PLUS
   41     | • TOK_DBL_MINUS lvalue
   42     | • lvalue TOK_DBL_MINUS
   43     | • primary
   44 primary: • lvalue
   45        | • call
   46        | • objectdef
   47        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   48        | • const
   49 lvalue: • TOK_ID
   50       | • TOK_LOCAL TOK_ID
   51       | • TOK_DBL_COLON TOK_ID
   52       | • member
   53 member: • lvalue TOK_DOT TOK_ID
   54       | • lvalue TOK_L_BR expression TOK_R_BR
   55       | • call TOK_DOT TOK_ID
   56       | • call TOK_L_BR expression TOK_R_BR
   57 call: • call normcall
   58     | • lvalue callsuffix
   59     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   64 elist: • elist TOK_COMMA expression
   65      | • expression
   66      | ε •  [TOK_R_BR, TOK_COMMA]
   67 indexedelem: • TOK_L_CURLY_BR expression TOK_COLON expression TOK_R_CURLY_BR
   68 indexed: • indexedelem
   69        | • indexed TOK_COMMA indexedelem
   70 objectdef: • TOK_L_BR elist TOK_R_BR
   70          | TOK_L_BR • elist TOK_R_BR
   71          | • TOK_L_BR indexed TOK_R_BR
   71          | TOK_L_BR • indexed TOK_R_BR
   81 const: • TOK_INT
   82      | • TOK_FLOAT
   83      | • TOK_STRING
   84      | • TOK_NIL
   85      | • TOK_TRUE
   86      | • TOK_FALSE

    TOK_NOT         shift, and go to state 12
    TOK_LOCAL       shift, and go to state 13
    TOK_TRUE        shift, and go to state 14
    TOK_FALSE       shift, and go to state 15
    TOK_NIL         shift, and go to state 16
    TOK_MINUS       shift, and go to state 17
    TOK_DBL_PLUS    shift, and go to state 18
    TOK_DBL_MINUS   shift, and go to state 19
    TOK_L_CURLY_BR  shift, and go to state 67
    TOK_L_BR        shift, and go to state 21
    TOK_L_PARENTH   shift, and go to state 22
    TOK_DBL_COLON   shift, and go to state 24
    TOK_ID          shift, and go to state 25
    TOK_INT         shift, and go to state 26
    TOK_FLOAT       shift, and go to state 27
    TOK_STRING      shift, and go to state 28

    $default  reduce using rule 66 (elist)

    assignexpr   go to state 30
    expression   go to state 68
    term         go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    elist        go to state 69
    indexedelem  go to state 70
    indexed      go to state 71
    objectdef    go to state 37
    const        go to state 41


State 22

   18 assignexpr: • lvalue TOK_ASSIGN expression
   19 expression: • assignexpr
   20           | • expression TOK_PLUS expression
   21           | • expression TOK_MINUS expression
   22           | • expression TOK_MULTIPLY expression
   23           | • expression TOK_DIVIDE expression
   24           | • expression TOK_MODULO expression
   25           | • expression TOK_GREATER expression
   26           | • expression TOK_LESS expression
   27           | • expression TOK_GR_EQUAL expression
   28           | • expression TOK_LS_EQUAL expression
   29           | • expression TOK_EQUAL expression
   30           | • expression TOK_N_EQUAL expression
   32           | • expression TOK_AND $@1 M expression
   34           | • expression TOK_OR $@2 M expression
   35           | • term
   36 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   36     | TOK_L_PARENTH • expression TOK_R_PARENTH
   37     | • TOK_MINUS expression
   38     | • TOK_NOT expression
   39     | • TOK_DBL_PLUS lvalue
   40     | • lvalue TOK_DBL_PLUS
   41     | • TOK_DBL_MINUS lvalue
   42     | • lvalue TOK_DBL_MINUS
   43     | • primary
   44 primary: • lvalue
   45        | • call
   46        | • objectdef
   47        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   47        | TOK_L_PARENTH • funcdef TOK_R_PARENTH
   48        | • const
   49 lvalue: • TOK_ID
   50       | • TOK_LOCAL TOK_ID
   51       | • TOK_DBL_COLON TOK_ID
   52       | • member
   53 member: • lvalue TOK_DOT TOK_ID
   54       | • lvalue TOK_L_BR expression TOK_R_BR
   55       | • call TOK_DOT TOK_ID
   56       | • call TOK_L_BR expression TOK_R_BR
   57 call: • call normcall
   58     | • lvalue callsuffix
   59     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   59     | TOK_L_PARENTH • funcdef TOK_R_PARENTH normcall
   70 objectdef: • TOK_L_BR elist TOK_R_BR
   71          | • TOK_L_BR indexed TOK_R_BR
   76 funcprefix: • TOK_FUNCTION funcname
   77           | • TOK_FUNCTION
   80 funcdef: • funcprefix funcargs funcbody
   81 const: • TOK_INT
   82      | • TOK_FLOAT
   83      | • TOK_STRING
   84      | • TOK_NIL
   85      | • TOK_TRUE
   86      | • TOK_FALSE

    TOK_FUNCTION   shift, and go to state 8
    TOK_NOT        shift, and go to state 12
    TOK_LOCAL      shift, and go to state 13
    TOK_TRUE       shift, and go to state 14
    TOK_FALSE      shift, and go to state 15
    TOK_NIL        shift, and go to state 16
    TOK_MINUS      shift, and go to state 17
    TOK_DBL_PLUS   shift, and go to state 18
    TOK_DBL_MINUS  shift, and go to state 19
    TOK_L_BR       shift, and go to state 21
    TOK_L_PARENTH  shift, and go to state 22
    TOK_DBL_COLON  shift, and go to state 24
    TOK_ID         shift, and go to state 25
    TOK_INT        shift, and go to state 26
    TOK_FLOAT      shift, and go to state 27
    TOK_STRING     shift, and go to state 28

    assignexpr  go to state 30
    expression  go to state 72
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    funcprefix  go to state 39
    funcdef     go to state 73
    const       go to state 41


State 23

   13 statement: TOK_SEMICOLON •

    $default  reduce using rule 13 (statement)


State 24

   51 lvalue: TOK_DBL_COLON • TOK_ID

    TOK_ID  shift, and go to state 74


State 25

   49 lvalue: TOK_ID •

    $default  reduce using rule 49 (lvalue)


State 26

   81 const: TOK_INT •

    $default  reduce using rule 81 (const)


State 27

   82 const: TOK_FLOAT •

    $default  reduce using rule 82 (const)


State 28

   83 const: TOK_STRING •

    $default  reduce using rule 83 (const)


State 29

    1 program: statements statement •  [$end]
   15 statements: statements statement •  [error, TOK_IF, TOK_WHILE, TOK_FOR, TOK_FUNCTION, TOK_RETURN, TOK_BREAK, TOK_CONTINUE, TOK_NOT, TOK_LOCAL, TOK_TRUE, TOK_FALSE, TOK_NIL, TOK_MINUS, TOK_DBL_PLUS, TOK_DBL_MINUS, TOK_L_CURLY_BR, TOK_L_BR, TOK_L_PARENTH, TOK_SEMICOLON, TOK_DBL_COLON, TOK_ID, TOK_INT, TOK_FLOAT, TOK_STRING]

    $end      reduce using rule 1 (program)
    $default  reduce using rule 15 (statements)


State 30

   19 expression: assignexpr •

    $default  reduce using rule 19 (expression)


State 31

    3 statement: expression • TOK_SEMICOLON
   20 expression: expression • TOK_PLUS expression
   21           | expression • TOK_MINUS expression
   22           | expression • TOK_MULTIPLY expression
   23           | expression • TOK_DIVIDE expression
   24           | expression • TOK_MODULO expression
   25           | expression • TOK_GREATER expression
   26           | expression • TOK_LESS expression
   27           | expression • TOK_GR_EQUAL expression
   28           | expression • TOK_LS_EQUAL expression
   29           | expression • TOK_EQUAL expression
   30           | expression • TOK_N_EQUAL expression
   32           | expression • TOK_AND $@1 M expression
   34           | expression • TOK_OR $@2 M expression

    TOK_AND        shift, and go to state 75
    TOK_OR         shift, and go to state 76
    TOK_PLUS       shift, and go to state 77
    TOK_MINUS      shift, and go to state 78
    TOK_MULTIPLY   shift, and go to state 79
    TOK_DIVIDE     shift, and go to state 80
    TOK_MODULO     shift, and go to state 81
    TOK_EQUAL      shift, and go to state 82
    TOK_N_EQUAL    shift, and go to state 83
    TOK_GREATER    shift, and go to state 84
    TOK_LESS       shift, and go to state 85
    TOK_GR_EQUAL   shift, and go to state 86
    TOK_LS_EQUAL   shift, and go to state 87
    TOK_SEMICOLON  shift, and go to state 88


State 32

   35 expression: term •

    $default  reduce using rule 35 (expression)


State 33

   43 term: primary •

    $default  reduce using rule 43 (term)


State 34

   18 assignexpr: lvalue • TOK_ASSIGN expression
   40 term: lvalue • TOK_DBL_PLUS
   42     | lvalue • TOK_DBL_MINUS
   44 primary: lvalue •  [TOK_AND, TOK_OR, TOK_PLUS, TOK_MINUS, TOK_MULTIPLY, TOK_DIVIDE, TOK_MODULO, TOK_EQUAL, TOK_N_EQUAL, TOK_GREATER, TOK_LESS, TOK_GR_EQUAL, TOK_LS_EQUAL, TOK_R_CURLY_BR, TOK_R_BR, TOK_R_PARENTH, TOK_SEMICOLON, TOK_COMMA, TOK_COLON]
   53 member: lvalue • TOK_DOT TOK_ID
   54       | lvalue • TOK_L_BR expression TOK_R_BR
   58 call: lvalue • callsuffix
   60 callsuffix: • normcall
   61           | • methodcall
   62 normcall: • TOK_L_PARENTH elist TOK_R_PARENTH
   63 methodcall: • TOK_DBL_DOT TOK_ID normcall

    TOK_ASSIGN     shift, and go to state 89
    TOK_DBL_PLUS   shift, and go to state 90
    TOK_DBL_MINUS  shift, and go to state 91
    TOK_L_BR       shift, and go to state 92
    TOK_L_PARENTH  shift, and go to state 93
    TOK_DOT        shift, and go to state 94
    TOK_DBL_DOT    shift, and go to state 95

    $default  reduce using rule 44 (primary)

    callsuffix  go to state 96
    normcall    go to state 97
    methodcall  go to state 98


State 35

   52 lvalue: member •

    $default  reduce using rule 52 (lvalue)


State 36

   45 primary: call •  [TOK_AND, TOK_OR, TOK_PLUS, TOK_MINUS, TOK_MULTIPLY, TOK_DIVIDE, TOK_MODULO, TOK_EQUAL, TOK_N_EQUAL, TOK_GREATER, TOK_LESS, TOK_GR_EQUAL, TOK_LS_EQUAL, TOK_R_CURLY_BR, TOK_R_BR, TOK_R_PARENTH, TOK_SEMICOLON, TOK_COMMA, TOK_COLON]
   55 member: call • TOK_DOT TOK_ID
   56       | call • TOK_L_BR expression TOK_R_BR
   57 call: call • normcall
   62 normcall: • TOK_L_PARENTH elist TOK_R_PARENTH

    TOK_L_BR       shift, and go to state 99
    TOK_L_PARENTH  shift, and go to state 93
    TOK_DOT        shift, and go to state 100

    $default  reduce using rule 45 (primary)

    normcall  go to state 101


State 37

   46 primary: objectdef •

    $default  reduce using rule 46 (primary)


State 38

   11 statement: block •

    $default  reduce using rule 11 (statement)


State 39

   78 funcargs: • TOK_L_PARENTH idlist TOK_R_PARENTH
   80 funcdef: funcprefix • funcargs funcbody

    TOK_L_PARENTH  shift, and go to state 102

    funcargs  go to state 103


State 40

   12 statement: funcdef •

    $default  reduce using rule 12 (statement)


State 41

   48 primary: const •

    $default  reduce using rule 48 (primary)


State 42

    3 statement: • expression TOK_SEMICOLON
    4          | • if_statement
    5          | • ifelse_statement
    6          | • while_statement
    7          | • for_statement
    8          | • return_statement
    9          | • TOK_BREAK TOK_SEMICOLON
   10          | • TOK_CONTINUE TOK_SEMICOLON
   11          | • block
   12          | • funcdef
   13          | • TOK_SEMICOLON
   14          | • error TOK_SEMICOLON
   18 assignexpr: • lvalue TOK_ASSIGN expression
   19 expression: • assignexpr
   20           | • expression TOK_PLUS expression
   21           | • expression TOK_MINUS expression
   22           | • expression TOK_MULTIPLY expression
   23           | • expression TOK_DIVIDE expression
   24           | • expression TOK_MODULO expression
   25           | • expression TOK_GREATER expression
   26           | • expression TOK_LESS expression
   27           | • expression TOK_GR_EQUAL expression
   28           | • expression TOK_LS_EQUAL expression
   29           | • expression TOK_EQUAL expression
   30           | • expression TOK_N_EQUAL expression
   32           | • expression TOK_AND $@1 M expression
   34           | • expression TOK_OR $@2 M expression
   35           | • term
   36 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   37     | • TOK_MINUS expression
   38     | • TOK_NOT expression
   39     | • TOK_DBL_PLUS lvalue
   40     | • lvalue TOK_DBL_PLUS
   41     | • TOK_DBL_MINUS lvalue
   42     | • lvalue TOK_DBL_MINUS
   43     | • primary
   44 primary: • lvalue
   45        | • call
   46        | • objectdef
   47        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   48        | • const
   49 lvalue: • TOK_ID
   50       | • TOK_LOCAL TOK_ID
   51       | • TOK_DBL_COLON TOK_ID
   52       | • member
   53 member: • lvalue TOK_DOT TOK_ID
   54       | • lvalue TOK_L_BR expression TOK_R_BR
   55       | • call TOK_DOT TOK_ID
   56       | • call TOK_L_BR expression TOK_R_BR
   57 call: • call normcall
   58     | • lvalue callsuffix
   59     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   70 objectdef: • TOK_L_BR elist TOK_R_BR
   71          | • TOK_L_BR indexed TOK_R_BR
   73 block: • TOK_L_CURLY_BR $@3 statements TOK_R_CURLY_BR
   76 funcprefix: • TOK_FUNCTION funcname
   77           | • TOK_FUNCTION
   80 funcdef: • funcprefix funcargs funcbody
   81 const: • TOK_INT
   82      | • TOK_FLOAT
   83      | • TOK_STRING
   84      | • TOK_NIL
   85      | • TOK_TRUE
   86      | • TOK_FALSE
   90 ifprefix: • TOK_IF TOK_L_PARENTH expression TOK_R_PARENTH
   92 if_statement: • ifprefix statement
   92             | ifprefix • statement
   93 ifelse_statement: • ifprefix statement elseprefix statement
   93                 | ifprefix • statement elseprefix statement
   94 whilestart: • TOK_WHILE
   96 while_statement: • whilestart whilecond statement
   99 forprefix: • TOK_FOR TOK_L_PARENTH elist TOK_SEMICOLON M1 expression TOK_SEMICOLON
  100 for_statement: • forprefix N elist TOK_R_PARENTH N statement N
  101 return_statement: • TOK_RETURN TOK_SEMICOLON
  102                 | • TOK_RETURN expression TOK_SEMICOLON

    error           shift, and go to state 4
    TOK_IF          shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_FOR         shift, and go to state 7
    TOK_FUNCTION    shift, and go to state 8
    TOK_RETURN      shift, and go to state 9
    TOK_BREAK       shift, and go to state 10
    TOK_CONTINUE    shift, and go to state 11
    TOK_NOT         shift, and go to state 12
    TOK_LOCAL       shift, and go to state 13
    TOK_TRUE        shift, and go to state 14
    TOK_FALSE       shift, and go to state 15
    TOK_NIL         shift, and go to state 16
    TOK_MINUS       shift, and go to state 17
    TOK_DBL_PLUS    shift, and go to state 18
    TOK_DBL_MINUS   shift, and go to state 19
    TOK_L_CURLY_BR  shift, and go to state 20
    TOK_L_BR        shift, and go to state 21
    TOK_L_PARENTH   shift, and go to state 22
    TOK_SEMICOLON   shift, and go to state 23
    TOK_DBL_COLON   shift, and go to state 24
    TOK_ID          shift, and go to state 25
    TOK_INT         shift, and go to state 26
    TOK_FLOAT       shift, and go to state 27
    TOK_STRING      shift, and go to state 28

    statement         go to state 104
    assignexpr        go to state 30
    expression        go to state 31
    term              go to state 32
    primary           go to state 33
    lvalue            go to state 34
    member            go to state 35
    call              go to state 36
    objectdef         go to state 37
    block             go to state 38
    funcprefix        go to state 39
    funcdef           go to state 40
    const             go to state 41
    ifprefix          go to state 42
    if_statement      go to state 43
    ifelse_statement  go to state 44
    whilestart        go to state 45
    while_statement   go to state 46
    forprefix         go to state 47
    for_statement     go to state 48
    return_statement  go to state 49


State 43

    4 statement: if_statement •

    $default  reduce using rule 4 (statement)


State 44

    5 statement: ifelse_statement •

    $default  reduce using rule 5 (statement)


State 45

   95 whilecond: • TOK_L_PARENTH expression TOK_R_PARENTH
   96 while_statement: whilestart • whilecond statement

    TOK_L_PARENTH  shift, and go to state 105

    whilecond  go to state 106


State 46

    6 statement: while_statement •

    $default  reduce using rule 6 (statement)


State 47

   97 N: ε •
  100 for_statement: forprefix • N elist TOK_R_PARENTH N statement N

    $default  reduce using rule 97 (N)

    N  go to state 107


State 48

    7 statement: for_statement •

    $default  reduce using rule 7 (statement)


State 49

    8 statement: return_statement •

    $default  reduce using rule 8 (statement)


State 50

   14 statement: error TOK_SEMICOLON •

    $default  reduce using rule 14 (statement)


State 51

   18 assignexpr: • lvalue TOK_ASSIGN expression
   19 expression: • assignexpr
   20           | • expression TOK_PLUS expression
   21           | • expression TOK_MINUS expression
   22           | • expression TOK_MULTIPLY expression
   23           | • expression TOK_DIVIDE expression
   24           | • expression TOK_MODULO expression
   25           | • expression TOK_GREATER expression
   26           | • expression TOK_LESS expression
   27           | • expression TOK_GR_EQUAL expression
   28           | • expression TOK_LS_EQUAL expression
   29           | • expression TOK_EQUAL expression
   30           | • expression TOK_N_EQUAL expression
   32           | • expression TOK_AND $@1 M expression
   34           | • expression TOK_OR $@2 M expression
   35           | • term
   36 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   37     | • TOK_MINUS expression
   38     | • TOK_NOT expression
   39     | • TOK_DBL_PLUS lvalue
   40     | • lvalue TOK_DBL_PLUS
   41     | • TOK_DBL_MINUS lvalue
   42     | • lvalue TOK_DBL_MINUS
   43     | • primary
   44 primary: • lvalue
   45        | • call
   46        | • objectdef
   47        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   48        | • const
   49 lvalue: • TOK_ID
   50       | • TOK_LOCAL TOK_ID
   51       | • TOK_DBL_COLON TOK_ID
   52       | • member
   53 member: • lvalue TOK_DOT TOK_ID
   54       | • lvalue TOK_L_BR expression TOK_R_BR
   55       | • call TOK_DOT TOK_ID
   56       | • call TOK_L_BR expression TOK_R_BR
   57 call: • call normcall
   58     | • lvalue callsuffix
   59     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   70 objectdef: • TOK_L_BR elist TOK_R_BR
   71          | • TOK_L_BR indexed TOK_R_BR
   81 const: • TOK_INT
   82      | • TOK_FLOAT
   83      | • TOK_STRING
   84      | • TOK_NIL
   85      | • TOK_TRUE
   86      | • TOK_FALSE
   90 ifprefix: TOK_IF TOK_L_PARENTH • expression TOK_R_PARENTH

    TOK_NOT        shift, and go to state 12
    TOK_LOCAL      shift, and go to state 13
    TOK_TRUE       shift, and go to state 14
    TOK_FALSE      shift, and go to state 15
    TOK_NIL        shift, and go to state 16
    TOK_MINUS      shift, and go to state 17
    TOK_DBL_PLUS   shift, and go to state 18
    TOK_DBL_MINUS  shift, and go to state 19
    TOK_L_BR       shift, and go to state 21
    TOK_L_PARENTH  shift, and go to state 22
    TOK_DBL_COLON  shift, and go to state 24
    TOK_ID         shift, and go to state 25
    TOK_INT        shift, and go to state 26
    TOK_FLOAT      shift, and go to state 27
    TOK_STRING     shift, and go to state 28

    assignexpr  go to state 30
    expression  go to state 108
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 52

   18 assignexpr: • lvalue TOK_ASSIGN expression
   19 expression: • assignexpr
   20           | • expression TOK_PLUS expression
   21           | • expression TOK_MINUS expression
   22           | • expression TOK_MULTIPLY expression
   23           | • expression TOK_DIVIDE expression
   24           | • expression TOK_MODULO expression
   25           | • expression TOK_GREATER expression
   26           | • expression TOK_LESS expression
   27           | • expression TOK_GR_EQUAL expression
   28           | • expression TOK_LS_EQUAL expression
   29           | • expression TOK_EQUAL expression
   30           | • expression TOK_N_EQUAL expression
   32           | • expression TOK_AND $@1 M expression
   34           | • expression TOK_OR $@2 M expression
   35           | • term
   36 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   37     | • TOK_MINUS expression
   38     | • TOK_NOT expression
   39     | • TOK_DBL_PLUS lvalue
   40     | • lvalue TOK_DBL_PLUS
   41     | • TOK_DBL_MINUS lvalue
   42     | • lvalue TOK_DBL_MINUS
   43     | • primary
   44 primary: • lvalue
   45        | • call
   46        | • objectdef
   47        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   48        | • const
   49 lvalue: • TOK_ID
   50       | • TOK_LOCAL TOK_ID
   51       | • TOK_DBL_COLON TOK_ID
   52       | • member
   53 member: • lvalue TOK_DOT TOK_ID
   54       | • lvalue TOK_L_BR expression TOK_R_BR
   55       | • call TOK_DOT TOK_ID
   56       | • call TOK_L_BR expression TOK_R_BR
   57 call: • call normcall
   58     | • lvalue callsuffix
   59     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   64 elist: • elist TOK_COMMA expression
   65      | • expression
   66      | ε •  [TOK_SEMICOLON, TOK_COMMA]
   70 objectdef: • TOK_L_BR elist TOK_R_BR
   71          | • TOK_L_BR indexed TOK_R_BR
   81 const: • TOK_INT
   82      | • TOK_FLOAT
   83      | • TOK_STRING
   84      | • TOK_NIL
   85      | • TOK_TRUE
   86      | • TOK_FALSE
   99 forprefix: TOK_FOR TOK_L_PARENTH • elist TOK_SEMICOLON M1 expression TOK_SEMICOLON

    TOK_NOT        shift, and go to state 12
    TOK_LOCAL      shift, and go to state 13
    TOK_TRUE       shift, and go to state 14
    TOK_FALSE      shift, and go to state 15
    TOK_NIL        shift, and go to state 16
    TOK_MINUS      shift, and go to state 17
    TOK_DBL_PLUS   shift, and go to state 18
    TOK_DBL_MINUS  shift, and go to state 19
    TOK_L_BR       shift, and go to state 21
    TOK_L_PARENTH  shift, and go to state 22
    TOK_DBL_COLON  shift, and go to state 24
    TOK_ID         shift, and go to state 25
    TOK_INT        shift, and go to state 26
    TOK_FLOAT      shift, and go to state 27
    TOK_STRING     shift, and go to state 28

    $default  reduce using rule 66 (elist)

    assignexpr  go to state 30
    expression  go to state 68
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    elist       go to state 109
    objectdef   go to state 37
    const       go to state 41


State 53

   75 funcname: TOK_ID •

    $default  reduce using rule 75 (funcname)


State 54

   76 funcprefix: TOK_FUNCTION funcname •

    $default  reduce using rule 76 (funcprefix)


State 55

  101 return_statement: TOK_RETURN TOK_SEMICOLON •

    $default  reduce using rule 101 (return_statement)


State 56

   20 expression: expression • TOK_PLUS expression
   21           | expression • TOK_MINUS expression
   22           | expression • TOK_MULTIPLY expression
   23           | expression • TOK_DIVIDE expression
   24           | expression • TOK_MODULO expression
   25           | expression • TOK_GREATER expression
   26           | expression • TOK_LESS expression
   27           | expression • TOK_GR_EQUAL expression
   28           | expression • TOK_LS_EQUAL expression
   29           | expression • TOK_EQUAL expression
   30           | expression • TOK_N_EQUAL expression
   32           | expression • TOK_AND $@1 M expression
   34           | expression • TOK_OR $@2 M expression
  102 return_statement: TOK_RETURN expression • TOK_SEMICOLON

    TOK_AND        shift, and go to state 75
    TOK_OR         shift, and go to state 76
    TOK_PLUS       shift, and go to state 77
    TOK_MINUS      shift, and go to state 78
    TOK_MULTIPLY   shift, and go to state 79
    TOK_DIVIDE     shift, and go to state 80
    TOK_MODULO     shift, and go to state 81
    TOK_EQUAL      shift, and go to state 82
    TOK_N_EQUAL    shift, and go to state 83
    TOK_GREATER    shift, and go to state 84
    TOK_LESS       shift, and go to state 85
    TOK_GR_EQUAL   shift, and go to state 86
    TOK_LS_EQUAL   shift, and go to state 87
    TOK_SEMICOLON  shift, and go to state 110


State 57

    9 statement: TOK_BREAK TOK_SEMICOLON •

    $default  reduce using rule 9 (statement)


State 58

   10 statement: TOK_CONTINUE TOK_SEMICOLON •

    $default  reduce using rule 10 (statement)


State 59

   20 expression: expression • TOK_PLUS expression
   21           | expression • TOK_MINUS expression
   22           | expression • TOK_MULTIPLY expression
   23           | expression • TOK_DIVIDE expression
   24           | expression • TOK_MODULO expression
   25           | expression • TOK_GREATER expression
   26           | expression • TOK_LESS expression
   27           | expression • TOK_GR_EQUAL expression
   28           | expression • TOK_LS_EQUAL expression
   29           | expression • TOK_EQUAL expression
   30           | expression • TOK_N_EQUAL expression
   32           | expression • TOK_AND $@1 M expression
   34           | expression • TOK_OR $@2 M expression
   38 term: TOK_NOT expression •  [TOK_AND, TOK_OR, TOK_PLUS, TOK_MINUS, TOK_MULTIPLY, TOK_DIVIDE, TOK_MODULO, TOK_EQUAL, TOK_N_EQUAL, TOK_GREATER, TOK_LESS, TOK_GR_EQUAL, TOK_LS_EQUAL, TOK_R_CURLY_BR, TOK_R_BR, TOK_R_PARENTH, TOK_SEMICOLON, TOK_COMMA, TOK_COLON]

    $default  reduce using rule 38 (term)

    Conflict between rule 38 and token TOK_AND resolved as reduce (TOK_AND < TOK_NOT).
    Conflict between rule 38 and token TOK_OR resolved as reduce (TOK_OR < TOK_NOT).
    Conflict between rule 38 and token TOK_PLUS resolved as reduce (TOK_PLUS < TOK_NOT).
    Conflict between rule 38 and token TOK_MINUS resolved as reduce (TOK_MINUS < TOK_NOT).
    Conflict between rule 38 and token TOK_MULTIPLY resolved as reduce (TOK_MULTIPLY < TOK_NOT).
    Conflict between rule 38 and token TOK_DIVIDE resolved as reduce (TOK_DIVIDE < TOK_NOT).
    Conflict between rule 38 and token TOK_MODULO resolved as reduce (TOK_MODULO < TOK_NOT).
    Conflict between rule 38 and token TOK_EQUAL resolved as reduce (TOK_EQUAL < TOK_NOT).
    Conflict between rule 38 and token TOK_N_EQUAL resolved as reduce (TOK_N_EQUAL < TOK_NOT).
    Conflict between rule 38 and token TOK_GREATER resolved as reduce (TOK_GREATER < TOK_NOT).
    Conflict between rule 38 and token TOK_LESS resolved as reduce (TOK_LESS < TOK_NOT).
    Conflict between rule 38 and token TOK_GR_EQUAL resolved as reduce (TOK_GR_EQUAL < TOK_NOT).
    Conflict between rule 38 and token TOK_LS_EQUAL resolved as reduce (TOK_LS_EQUAL < TOK_NOT).


State 60

   50 lvalue: TOK_LOCAL TOK_ID •

    $default  reduce using rule 50 (lvalue)


State 61

   20 expression: expression • TOK_PLUS expression
   21           | expression • TOK_MINUS expression
   22           | expression • TOK_MULTIPLY expression
   23           | expression • TOK_DIVIDE expression
   24           | expression • TOK_MODULO expression
   25           | expression • TOK_GREATER expression
   26           | expression • TOK_LESS expression
   27           | expression • TOK_GR_EQUAL expression
   28           | expression • TOK_LS_EQUAL expression
   29           | expression • TOK_EQUAL expression
   30           | expression • TOK_N_EQUAL expression
   32           | expression • TOK_AND $@1 M expression
   34           | expression • TOK_OR $@2 M expression
   37 term: TOK_MINUS expression •  [TOK_AND, TOK_OR, TOK_PLUS, TOK_MINUS, TOK_MULTIPLY, TOK_DIVIDE, TOK_MODULO, TOK_EQUAL, TOK_N_EQUAL, TOK_GREATER, TOK_LESS, TOK_GR_EQUAL, TOK_LS_EQUAL, TOK_R_CURLY_BR, TOK_R_BR, TOK_R_PARENTH, TOK_SEMICOLON, TOK_COMMA, TOK_COLON]

    $default  reduce using rule 37 (term)

    Conflict between rule 37 and token TOK_AND resolved as reduce (TOK_AND < TOK_UMINUS).
    Conflict between rule 37 and token TOK_OR resolved as reduce (TOK_OR < TOK_UMINUS).
    Conflict between rule 37 and token TOK_PLUS resolved as reduce (TOK_PLUS < TOK_UMINUS).
    Conflict between rule 37 and token TOK_MINUS resolved as reduce (TOK_MINUS < TOK_UMINUS).
    Conflict between rule 37 and token TOK_MULTIPLY resolved as reduce (TOK_MULTIPLY < TOK_UMINUS).
    Conflict between rule 37 and token TOK_DIVIDE resolved as reduce (TOK_DIVIDE < TOK_UMINUS).
    Conflict between rule 37 and token TOK_MODULO resolved as reduce (TOK_MODULO < TOK_UMINUS).
    Conflict between rule 37 and token TOK_EQUAL resolved as reduce (TOK_EQUAL < TOK_UMINUS).
    Conflict between rule 37 and token TOK_N_EQUAL resolved as reduce (TOK_N_EQUAL < TOK_UMINUS).
    Conflict between rule 37 and token TOK_GREATER resolved as reduce (TOK_GREATER < TOK_UMINUS).
    Conflict between rule 37 and token TOK_LESS resolved as reduce (TOK_LESS < TOK_UMINUS).
    Conflict between rule 37 and token TOK_GR_EQUAL resolved as reduce (TOK_GR_EQUAL < TOK_UMINUS).
    Conflict between rule 37 and token TOK_LS_EQUAL resolved as reduce (TOK_LS_EQUAL < TOK_UMINUS).


State 62

   59 call: TOK_L_PARENTH • funcdef TOK_R_PARENTH normcall
   76 funcprefix: • TOK_FUNCTION funcname
   77           | • TOK_FUNCTION
   80 funcdef: • funcprefix funcargs funcbody

    TOK_FUNCTION  shift, and go to state 8

    funcprefix  go to state 39
    funcdef     go to state 111


State 63

   39 term: TOK_DBL_PLUS lvalue •  [TOK_AND, TOK_OR, TOK_PLUS, TOK_MINUS, TOK_MULTIPLY, TOK_DIVIDE, TOK_MODULO, TOK_EQUAL, TOK_N_EQUAL, TOK_GREATER, TOK_LESS, TOK_GR_EQUAL, TOK_LS_EQUAL, TOK_R_CURLY_BR, TOK_R_BR, TOK_R_PARENTH, TOK_SEMICOLON, TOK_COMMA, TOK_COLON]
   53 member: lvalue • TOK_DOT TOK_ID
   54       | lvalue • TOK_L_BR expression TOK_R_BR
   58 call: lvalue • callsuffix
   60 callsuffix: • normcall
   61           | • methodcall
   62 normcall: • TOK_L_PARENTH elist TOK_R_PARENTH
   63 methodcall: • TOK_DBL_DOT TOK_ID normcall

    TOK_L_BR       shift, and go to state 92
    TOK_L_PARENTH  shift, and go to state 93
    TOK_DOT        shift, and go to state 94
    TOK_DBL_DOT    shift, and go to state 95

    $default  reduce using rule 39 (term)

    callsuffix  go to state 96
    normcall    go to state 97
    methodcall  go to state 98


State 64

   55 member: call • TOK_DOT TOK_ID
   56       | call • TOK_L_BR expression TOK_R_BR
   57 call: call • normcall
   62 normcall: • TOK_L_PARENTH elist TOK_R_PARENTH

    TOK_L_BR       shift, and go to state 99
    TOK_L_PARENTH  shift, and go to state 93
    TOK_DOT        shift, and go to state 100

    normcall  go to state 101


State 65

   41 term: TOK_DBL_MINUS lvalue •  [TOK_AND, TOK_OR, TOK_PLUS, TOK_MINUS, TOK_MULTIPLY, TOK_DIVIDE, TOK_MODULO, TOK_EQUAL, TOK_N_EQUAL, TOK_GREATER, TOK_LESS, TOK_GR_EQUAL, TOK_LS_EQUAL, TOK_R_CURLY_BR, TOK_R_BR, TOK_R_PARENTH, TOK_SEMICOLON, TOK_COMMA, TOK_COLON]
   53 member: lvalue • TOK_DOT TOK_ID
   54       | lvalue • TOK_L_BR expression TOK_R_BR
   58 call: lvalue • callsuffix
   60 callsuffix: • normcall
   61           | • methodcall
   62 normcall: • TOK_L_PARENTH elist TOK_R_PARENTH
   63 methodcall: • TOK_DBL_DOT TOK_ID normcall

    TOK_L_BR       shift, and go to state 92
    TOK_L_PARENTH  shift, and go to state 93
    TOK_DOT        shift, and go to state 94
    TOK_DBL_DOT    shift, and go to state 95

    $default  reduce using rule 41 (term)

    callsuffix  go to state 96
    normcall    go to state 97
    methodcall  go to state 98


State 66

   15 statements: • statements statement
   16           | ε •
   73 block: TOK_L_CURLY_BR $@3 • statements TOK_R_CURLY_BR

    $default  reduce using rule 16 (statements)

    statements  go to state 112


State 67

   18 assignexpr: • lvalue TOK_ASSIGN expression
   19 expression: • assignexpr
   20           | • expression TOK_PLUS expression
   21           | • expression TOK_MINUS expression
   22           | • expression TOK_MULTIPLY expression
   23           | • expression TOK_DIVIDE expression
   24           | • expression TOK_MODULO expression
   25           | • expression TOK_GREATER expression
   26           | • expression TOK_LESS expression
   27           | • expression TOK_GR_EQUAL expression
   28           | • expression TOK_LS_EQUAL expression
   29           | • expression TOK_EQUAL expression
   30           | • expression TOK_N_EQUAL expression
   32           | • expression TOK_AND $@1 M expression
   34           | • expression TOK_OR $@2 M expression
   35           | • term
   36 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   37     | • TOK_MINUS expression
   38     | • TOK_NOT expression
   39     | • TOK_DBL_PLUS lvalue
   40     | • lvalue TOK_DBL_PLUS
   41     | • TOK_DBL_MINUS lvalue
   42     | • lvalue TOK_DBL_MINUS
   43     | • primary
   44 primary: • lvalue
   45        | • call
   46        | • objectdef
   47        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   48        | • const
   49 lvalue: • TOK_ID
   50       | • TOK_LOCAL TOK_ID
   51       | • TOK_DBL_COLON TOK_ID
   52       | • member
   53 member: • lvalue TOK_DOT TOK_ID
   54       | • lvalue TOK_L_BR expression TOK_R_BR
   55       | • call TOK_DOT TOK_ID
   56       | • call TOK_L_BR expression TOK_R_BR
   57 call: • call normcall
   58     | • lvalue callsuffix
   59     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   67 indexedelem: TOK_L_CURLY_BR • expression TOK_COLON expression TOK_R_CURLY_BR
   70 objectdef: • TOK_L_BR elist TOK_R_BR
   71          | • TOK_L_BR indexed TOK_R_BR
   81 const: • TOK_INT
   82      | • TOK_FLOAT
   83      | • TOK_STRING
   84      | • TOK_NIL
   85      | • TOK_TRUE
   86      | • TOK_FALSE

    TOK_NOT        shift, and go to state 12
    TOK_LOCAL      shift, and go to state 13
    TOK_TRUE       shift, and go to state 14
    TOK_FALSE      shift, and go to state 15
    TOK_NIL        shift, and go to state 16
    TOK_MINUS      shift, and go to state 17
    TOK_DBL_PLUS   shift, and go to state 18
    TOK_DBL_MINUS  shift, and go to state 19
    TOK_L_BR       shift, and go to state 21
    TOK_L_PARENTH  shift, and go to state 22
    TOK_DBL_COLON  shift, and go to state 24
    TOK_ID         shift, and go to state 25
    TOK_INT        shift, and go to state 26
    TOK_FLOAT      shift, and go to state 27
    TOK_STRING     shift, and go to state 28

    assignexpr  go to state 30
    expression  go to state 113
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 68

   20 expression: expression • TOK_PLUS expression
   21           | expression • TOK_MINUS expression
   22           | expression • TOK_MULTIPLY expression
   23           | expression • TOK_DIVIDE expression
   24           | expression • TOK_MODULO expression
   25           | expression • TOK_GREATER expression
   26           | expression • TOK_LESS expression
   27           | expression • TOK_GR_EQUAL expression
   28           | expression • TOK_LS_EQUAL expression
   29           | expression • TOK_EQUAL expression
   30           | expression • TOK_N_EQUAL expression
   32           | expression • TOK_AND $@1 M expression
   34           | expression • TOK_OR $@2 M expression
   65 elist: expression •  [TOK_R_BR, TOK_R_PARENTH, TOK_SEMICOLON, TOK_COMMA]

    TOK_AND       shift, and go to state 75
    TOK_OR        shift, and go to state 76
    TOK_PLUS      shift, and go to state 77
    TOK_MINUS     shift, and go to state 78
    TOK_MULTIPLY  shift, and go to state 79
    TOK_DIVIDE    shift, and go to state 80
    TOK_MODULO    shift, and go to state 81
    TOK_EQUAL     shift, and go to state 82
    TOK_N_EQUAL   shift, and go to state 83
    TOK_GREATER   shift, and go to state 84
    TOK_LESS      shift, and go to state 85
    TOK_GR_EQUAL  shift, and go to state 86
    TOK_LS_EQUAL  shift, and go to state 87

    $default  reduce using rule 65 (elist)


State 69

   64 elist: elist • TOK_COMMA expression
   70 objectdef: TOK_L_BR elist • TOK_R_BR

    TOK_R_BR   shift, and go to state 114
    TOK_COMMA  shift, and go to state 115


State 70

   68 indexed: indexedelem •

    $default  reduce using rule 68 (indexed)


State 71

   69 indexed: indexed • TOK_COMMA indexedelem
   71 objectdef: TOK_L_BR indexed • TOK_R_BR

    TOK_R_BR   shift, and go to state 116
    TOK_COMMA  shift, and go to state 117


State 72

   20 expression: expression • TOK_PLUS expression
   21           | expression • TOK_MINUS expression
   22           | expression • TOK_MULTIPLY expression
   23           | expression • TOK_DIVIDE expression
   24           | expression • TOK_MODULO expression
   25           | expression • TOK_GREATER expression
   26           | expression • TOK_LESS expression
   27           | expression • TOK_GR_EQUAL expression
   28           | expression • TOK_LS_EQUAL expression
   29           | expression • TOK_EQUAL expression
   30           | expression • TOK_N_EQUAL expression
   32           | expression • TOK_AND $@1 M expression
   34           | expression • TOK_OR $@2 M expression
   36 term: TOK_L_PARENTH expression • TOK_R_PARENTH

    TOK_AND        shift, and go to state 75
    TOK_OR         shift, and go to state 76
    TOK_PLUS       shift, and go to state 77
    TOK_MINUS      shift, and go to state 78
    TOK_MULTIPLY   shift, and go to state 79
    TOK_DIVIDE     shift, and go to state 80
    TOK_MODULO     shift, and go to state 81
    TOK_EQUAL      shift, and go to state 82
    TOK_N_EQUAL    shift, and go to state 83
    TOK_GREATER    shift, and go to state 84
    TOK_LESS       shift, and go to state 85
    TOK_GR_EQUAL   shift, and go to state 86
    TOK_LS_EQUAL   shift, and go to state 87
    TOK_R_PARENTH  shift, and go to state 118


State 73

   47 primary: TOK_L_PARENTH funcdef • TOK_R_PARENTH
   59 call: TOK_L_PARENTH funcdef • TOK_R_PARENTH normcall

    TOK_R_PARENTH  shift, and go to state 119


State 74

   51 lvalue: TOK_DBL_COLON TOK_ID •

    $default  reduce using rule 51 (lvalue)


State 75

   31 $@1: ε •
   32 expression: expression TOK_AND • $@1 M expression

    $default  reduce using rule 31 ($@1)

    $@1  go to state 120


State 76

   33 $@2: ε •
   34 expression: expression TOK_OR • $@2 M expression

    $default  reduce using rule 33 ($@2)

    $@2  go to state 121


State 77

   18 assignexpr: • lvalue TOK_ASSIGN expression
   19 expression: • assignexpr
   20           | • expression TOK_PLUS expression
   20           | expression TOK_PLUS • expression
   21           | • expression TOK_MINUS expression
   22           | • expression TOK_MULTIPLY expression
   23           | • expression TOK_DIVIDE expression
   24           | • expression TOK_MODULO expression
   25           | • expression TOK_GREATER expression
   26           | • expression TOK_LESS expression
   27           | • expression TOK_GR_EQUAL expression
   28           | • expression TOK_LS_EQUAL expression
   29           | • expression TOK_EQUAL expression
   30           | • expression TOK_N_EQUAL expression
   32           | • expression TOK_AND $@1 M expression
   34           | • expression TOK_OR $@2 M expression
   35           | • term
   36 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   37     | • TOK_MINUS expression
   38     | • TOK_NOT expression
   39     | • TOK_DBL_PLUS lvalue
   40     | • lvalue TOK_DBL_PLUS
   41     | • TOK_DBL_MINUS lvalue
   42     | • lvalue TOK_DBL_MINUS
   43     | • primary
   44 primary: • lvalue
   45        | • call
   46        | • objectdef
   47        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   48        | • const
   49 lvalue: • TOK_ID
   50       | • TOK_LOCAL TOK_ID
   51       | • TOK_DBL_COLON TOK_ID
   52       | • member
   53 member: • lvalue TOK_DOT TOK_ID
   54       | • lvalue TOK_L_BR expression TOK_R_BR
   55       | • call TOK_DOT TOK_ID
   56       | • call TOK_L_BR expression TOK_R_BR
   57 call: • call normcall
   58     | • lvalue callsuffix
   59     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   70 objectdef: • TOK_L_BR elist TOK_R_BR
   71          | • TOK_L_BR indexed TOK_R_BR
   81 const: • TOK_INT
   82      | • TOK_FLOAT
   83      | • TOK_STRING
   84      | • TOK_NIL
   85      | • TOK_TRUE
   86      | • TOK_FALSE

    TOK_NOT        shift, and go to state 12
    TOK_LOCAL      shift, and go to state 13
    TOK_TRUE       shift, and go to state 14
    TOK_FALSE      shift, and go to state 15
    TOK_NIL        shift, and go to state 16
    TOK_MINUS      shift, and go to state 17
    TOK_DBL_PLUS   shift, and go to state 18
    TOK_DBL_MINUS  shift, and go to state 19
    TOK_L_BR       shift, and go to state 21
    TOK_L_PARENTH  shift, and go to state 22
    TOK_DBL_COLON  shift, and go to state 24
    TOK_ID         shift, and go to state 25
    TOK_INT        shift, and go to state 26
    TOK_FLOAT      shift, and go to state 27
    TOK_STRING     shift, and go to state 28

    assignexpr  go to state 30
    expression  go to state 122
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 78

   18 assignexpr: • lvalue TOK_ASSIGN expression
   19 expression: • assignexpr
   20           | • expression TOK_PLUS expression
   21           | • expression TOK_MINUS expression
   21           | expression TOK_MINUS • expression
   22           | • expression TOK_MULTIPLY expression
   23           | • expression TOK_DIVIDE expression
   24           | • expression TOK_MODULO expression
   25           | • expression TOK_GREATER expression
   26           | • expression TOK_LESS expression
   27           | • expression TOK_GR_EQUAL expression
   28           | • expression TOK_LS_EQUAL expression
   29           | • expression TOK_EQUAL expression
   30           | • expression TOK_N_EQUAL expression
   32           | • expression TOK_AND $@1 M expression
   34           | • expression TOK_OR $@2 M expression
   35           | • term
   36 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   37     | • TOK_MINUS expression
   38     | • TOK_NOT expression
   39     | • TOK_DBL_PLUS lvalue
   40     | • lvalue TOK_DBL_PLUS
   41     | • TOK_DBL_MINUS lvalue
   42     | • lvalue TOK_DBL_MINUS
   43     | • primary
   44 primary: • lvalue
   45        | • call
   46        | • objectdef
   47        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   48        | • const
   49 lvalue: • TOK_ID
   50       | • TOK_LOCAL TOK_ID
   51       | • TOK_DBL_COLON TOK_ID
   52       | • member
   53 member: • lvalue TOK_DOT TOK_ID
   54       | • lvalue TOK_L_BR expression TOK_R_BR
   55       | • call TOK_DOT TOK_ID
   56       | • call TOK_L_BR expression TOK_R_BR
   57 call: • call normcall
   58     | • lvalue callsuffix
   59     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   70 objectdef: • TOK_L_BR elist TOK_R_BR
   71          | • TOK_L_BR indexed TOK_R_BR
   81 const: • TOK_INT
   82      | • TOK_FLOAT
   83      | • TOK_STRING
   84      | • TOK_NIL
   85      | • TOK_TRUE
   86      | • TOK_FALSE

    TOK_NOT        shift, and go to state 12
    TOK_LOCAL      shift, and go to state 13
    TOK_TRUE       shift, and go to state 14
    TOK_FALSE      shift, and go to state 15
    TOK_NIL        shift, and go to state 16
    TOK_MINUS      shift, and go to state 17
    TOK_DBL_PLUS   shift, and go to state 18
    TOK_DBL_MINUS  shift, and go to state 19
    TOK_L_BR       shift, and go to state 21
    TOK_L_PARENTH  shift, and go to state 22
    TOK_DBL_COLON  shift, and go to state 24
    TOK_ID         shift, and go to state 25
    TOK_INT        shift, and go to state 26
    TOK_FLOAT      shift, and go to state 27
    TOK_STRING     shift, and go to state 28

    assignexpr  go to state 30
    expression  go to state 123
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 79

   18 assignexpr: • lvalue TOK_ASSIGN expression
   19 expression: • assignexpr
   20           | • expression TOK_PLUS expression
   21           | • expression TOK_MINUS expression
   22           | • expression TOK_MULTIPLY expression
   22           | expression TOK_MULTIPLY • expression
   23           | • expression TOK_DIVIDE expression
   24           | • expression TOK_MODULO expression
   25           | • expression TOK_GREATER expression
   26           | • expression TOK_LESS expression
   27           | • expression TOK_GR_EQUAL expression
   28           | • expression TOK_LS_EQUAL expression
   29           | • expression TOK_EQUAL expression
   30           | • expression TOK_N_EQUAL expression
   32           | • expression TOK_AND $@1 M expression
   34           | • expression TOK_OR $@2 M expression
   35           | • term
   36 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   37     | • TOK_MINUS expression
   38     | • TOK_NOT expression
   39     | • TOK_DBL_PLUS lvalue
   40     | • lvalue TOK_DBL_PLUS
   41     | • TOK_DBL_MINUS lvalue
   42     | • lvalue TOK_DBL_MINUS
   43     | • primary
   44 primary: • lvalue
   45        | • call
   46        | • objectdef
   47        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   48        | • const
   49 lvalue: • TOK_ID
   50       | • TOK_LOCAL TOK_ID
   51       | • TOK_DBL_COLON TOK_ID
   52       | • member
   53 member: • lvalue TOK_DOT TOK_ID
   54       | • lvalue TOK_L_BR expression TOK_R_BR
   55       | • call TOK_DOT TOK_ID
   56       | • call TOK_L_BR expression TOK_R_BR
   57 call: • call normcall
   58     | • lvalue callsuffix
   59     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   70 objectdef: • TOK_L_BR elist TOK_R_BR
   71          | • TOK_L_BR indexed TOK_R_BR
   81 const: • TOK_INT
   82      | • TOK_FLOAT
   83      | • TOK_STRING
   84      | • TOK_NIL
   85      | • TOK_TRUE
   86      | • TOK_FALSE

    TOK_NOT        shift, and go to state 12
    TOK_LOCAL      shift, and go to state 13
    TOK_TRUE       shift, and go to state 14
    TOK_FALSE      shift, and go to state 15
    TOK_NIL        shift, and go to state 16
    TOK_MINUS      shift, and go to state 17
    TOK_DBL_PLUS   shift, and go to state 18
    TOK_DBL_MINUS  shift, and go to state 19
    TOK_L_BR       shift, and go to state 21
    TOK_L_PARENTH  shift, and go to state 22
    TOK_DBL_COLON  shift, and go to state 24
    TOK_ID         shift, and go to state 25
    TOK_INT        shift, and go to state 26
    TOK_FLOAT      shift, and go to state 27
    TOK_STRING     shift, and go to state 28

    assignexpr  go to state 30
    expression  go to state 124
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 80

   18 assignexpr: • lvalue TOK_ASSIGN expression
   19 expression: • assignexpr
   20           | • expression TOK_PLUS expression
   21           | • expression TOK_MINUS expression
   22           | • expression TOK_MULTIPLY expression
   23           | • expression TOK_DIVIDE expression
   23           | expression TOK_DIVIDE • expression
   24           | • expression TOK_MODULO expression
   25           | • expression TOK_GREATER expression
   26           | • expression TOK_LESS expression
   27           | • expression TOK_GR_EQUAL expression
   28           | • expression TOK_LS_EQUAL expression
   29           | • expression TOK_EQUAL expression
   30           | • expression TOK_N_EQUAL expression
   32           | • expression TOK_AND $@1 M expression
   34           | • expression TOK_OR $@2 M expression
   35           | • term
   36 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   37     | • TOK_MINUS expression
   38     | • TOK_NOT expression
   39     | • TOK_DBL_PLUS lvalue
   40     | • lvalue TOK_DBL_PLUS
   41     | • TOK_DBL_MINUS lvalue
   42     | • lvalue TOK_DBL_MINUS
   43     | • primary
   44 primary: • lvalue
   45        | • call
   46        | • objectdef
   47        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   48        | • const
   49 lvalue: • TOK_ID
   50       | • TOK_LOCAL TOK_ID
   51       | • TOK_DBL_COLON TOK_ID
   52       | • member
   53 member: • lvalue TOK_DOT TOK_ID
   54       | • lvalue TOK_L_BR expression TOK_R_BR
   55       | • call TOK_DOT TOK_ID
   56       | • call TOK_L_BR expression TOK_R_BR
   57 call: • call normcall
   58     | • lvalue callsuffix
   59     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   70 objectdef: • TOK_L_BR elist TOK_R_BR
   71          | • TOK_L_BR indexed TOK_R_BR
   81 const: • TOK_INT
   82      | • TOK_FLOAT
   83      | • TOK_STRING
   84      | • TOK_NIL
   85      | • TOK_TRUE
   86      | • TOK_FALSE

    TOK_NOT        shift, and go to state 12
    TOK_LOCAL      shift, and go to state 13
    TOK_TRUE       shift, and go to state 14
    TOK_FALSE      shift, and go to state 15
    TOK_NIL        shift, and go to state 16
    TOK_MINUS      shift, and go to state 17
    TOK_DBL_PLUS   shift, and go to state 18
    TOK_DBL_MINUS  shift, and go to state 19
    TOK_L_BR       shift, and go to state 21
    TOK_L_PARENTH  shift, and go to state 22
    TOK_DBL_COLON  shift, and go to state 24
    TOK_ID         shift, and go to state 25
    TOK_INT        shift, and go to state 26
    TOK_FLOAT      shift, and go to state 27
    TOK_STRING     shift, and go to state 28

    assignexpr  go to state 30
    expression  go to state 125
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 81

   18 assignexpr: • lvalue TOK_ASSIGN expression
   19 expression: • assignexpr
   20           | • expression TOK_PLUS expression
   21           | • expression TOK_MINUS expression
   22           | • expression TOK_MULTIPLY expression
   23           | • expression TOK_DIVIDE expression
   24           | • expression TOK_MODULO expression
   24           | expression TOK_MODULO • expression
   25           | • expression TOK_GREATER expression
   26           | • expression TOK_LESS expression
   27           | • expression TOK_GR_EQUAL expression
   28           | • expression TOK_LS_EQUAL expression
   29           | • expression TOK_EQUAL expression
   30           | • expression TOK_N_EQUAL expression
   32           | • expression TOK_AND $@1 M expression
   34           | • expression TOK_OR $@2 M expression
   35           | • term
   36 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   37     | • TOK_MINUS expression
   38     | • TOK_NOT expression
   39     | • TOK_DBL_PLUS lvalue
   40     | • lvalue TOK_DBL_PLUS
   41     | • TOK_DBL_MINUS lvalue
   42     | • lvalue TOK_DBL_MINUS
   43     | • primary
   44 primary: • lvalue
   45        | • call
   46        | • objectdef
   47        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   48        | • const
   49 lvalue: • TOK_ID
   50       | • TOK_LOCAL TOK_ID
   51       | • TOK_DBL_COLON TOK_ID
   52       | • member
   53 member: • lvalue TOK_DOT TOK_ID
   54       | • lvalue TOK_L_BR expression TOK_R_BR
   55       | • call TOK_DOT TOK_ID
   56       | • call TOK_L_BR expression TOK_R_BR
   57 call: • call normcall
   58     | • lvalue callsuffix
   59     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   70 objectdef: • TOK_L_BR elist TOK_R_BR
   71          | • TOK_L_BR indexed TOK_R_BR
   81 const: • TOK_INT
   82      | • TOK_FLOAT
   83      | • TOK_STRING
   84      | • TOK_NIL
   85      | • TOK_TRUE
   86      | • TOK_FALSE

    TOK_NOT        shift, and go to state 12
    TOK_LOCAL      shift, and go to state 13
    TOK_TRUE       shift, and go to state 14
    TOK_FALSE      shift, and go to state 15
    TOK_NIL        shift, and go to state 16
    TOK_MINUS      shift, and go to state 17
    TOK_DBL_PLUS   shift, and go to state 18
    TOK_DBL_MINUS  shift, and go to state 19
    TOK_L_BR       shift, and go to state 21
    TOK_L_PARENTH  shift, and go to state 22
    TOK_DBL_COLON  shift, and go to state 24
    TOK_ID         shift, and go to state 25
    TOK_INT        shift, and go to state 26
    TOK_FLOAT      shift, and go to state 27
    TOK_STRING     shift, and go to state 28

    assignexpr  go to state 30
    expression  go to state 126
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 82

   18 assignexpr: • lvalue TOK_ASSIGN expression
   19 expression: • assignexpr
   20           | • expression TOK_PLUS expression
   21           | • expression TOK_MINUS expression
   22           | • expression TOK_MULTIPLY expression
   23           | • expression TOK_DIVIDE expression
   24           | • expression TOK_MODULO expression
   25           | • expression TOK_GREATER expression
   26           | • expression TOK_LESS expression
   27           | • expression TOK_GR_EQUAL expression
   28           | • expression TOK_LS_EQUAL expression
   29           | • expression TOK_EQUAL expression
   29           | expression TOK_EQUAL • expression
   30           | • expression TOK_N_EQUAL expression
   32           | • expression TOK_AND $@1 M expression
   34           | • expression TOK_OR $@2 M expression
   35           | • term
   36 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   37     | • TOK_MINUS expression
   38     | • TOK_NOT expression
   39     | • TOK_DBL_PLUS lvalue
   40     | • lvalue TOK_DBL_PLUS
   41     | • TOK_DBL_MINUS lvalue
   42     | • lvalue TOK_DBL_MINUS
   43     | • primary
   44 primary: • lvalue
   45        | • call
   46        | • objectdef
   47        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   48        | • const
   49 lvalue: • TOK_ID
   50       | • TOK_LOCAL TOK_ID
   51       | • TOK_DBL_COLON TOK_ID
   52       | • member
   53 member: • lvalue TOK_DOT TOK_ID
   54       | • lvalue TOK_L_BR expression TOK_R_BR
   55       | • call TOK_DOT TOK_ID
   56       | • call TOK_L_BR expression TOK_R_BR
   57 call: • call normcall
   58     | • lvalue callsuffix
   59     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   70 objectdef: • TOK_L_BR elist TOK_R_BR
   71          | • TOK_L_BR indexed TOK_R_BR
   81 const: • TOK_INT
   82      | • TOK_FLOAT
   83      | • TOK_STRING
   84      | • TOK_NIL
   85      | • TOK_TRUE
   86      | • TOK_FALSE

    TOK_NOT        shift, and go to state 12
    TOK_LOCAL      shift, and go to state 13
    TOK_TRUE       shift, and go to state 14
    TOK_FALSE      shift, and go to state 15
    TOK_NIL        shift, and go to state 16
    TOK_MINUS      shift, and go to state 17
    TOK_DBL_PLUS   shift, and go to state 18
    TOK_DBL_MINUS  shift, and go to state 19
    TOK_L_BR       shift, and go to state 21
    TOK_L_PARENTH  shift, and go to state 22
    TOK_DBL_COLON  shift, and go to state 24
    TOK_ID         shift, and go to state 25
    TOK_INT        shift, and go to state 26
    TOK_FLOAT      shift, and go to state 27
    TOK_STRING     shift, and go to state 28

    assignexpr  go to state 30
    expression  go to state 127
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 83

   18 assignexpr: • lvalue TOK_ASSIGN expression
   19 expression: • assignexpr
   20           | • expression TOK_PLUS expression
   21           | • expression TOK_MINUS expression
   22           | • expression TOK_MULTIPLY expression
   23           | • expression TOK_DIVIDE expression
   24           | • expression TOK_MODULO expression
   25           | • expression TOK_GREATER expression
   26           | • expression TOK_LESS expression
   27           | • expression TOK_GR_EQUAL expression
   28           | • expression TOK_LS_EQUAL expression
   29           | • expression TOK_EQUAL expression
   30           | • expression TOK_N_EQUAL expression
   30           | expression TOK_N_EQUAL • expression
   32           | • expression TOK_AND $@1 M expression
   34           | • expression TOK_OR $@2 M expression
   35           | • term
   36 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   37     | • TOK_MINUS expression
   38     | • TOK_NOT expression
   39     | • TOK_DBL_PLUS lvalue
   40     | • lvalue TOK_DBL_PLUS
   41     | • TOK_DBL_MINUS lvalue
   42     | • lvalue TOK_DBL_MINUS
   43     | • primary
   44 primary: • lvalue
   45        | • call
   46        | • objectdef
   47        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   48        | • const
   49 lvalue: • TOK_ID
   50       | • TOK_LOCAL TOK_ID
   51       | • TOK_DBL_COLON TOK_ID
   52       | • member
   53 member: • lvalue TOK_DOT TOK_ID
   54       | • lvalue TOK_L_BR expression TOK_R_BR
   55       | • call TOK_DOT TOK_ID
   56       | • call TOK_L_BR expression TOK_R_BR
   57 call: • call normcall
   58     | • lvalue callsuffix
   59     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   70 objectdef: • TOK_L_BR elist TOK_R_BR
   71          | • TOK_L_BR indexed TOK_R_BR
   81 const: • TOK_INT
   82      | • TOK_FLOAT
   83      | • TOK_STRING
   84      | • TOK_NIL
   85      | • TOK_TRUE
   86      | • TOK_FALSE

    TOK_NOT        shift, and go to state 12
    TOK_LOCAL      shift, and go to state 13
    TOK_TRUE       shift, and go to state 14
    TOK_FALSE      shift, and go to state 15
    TOK_NIL        shift, and go to state 16
    TOK_MINUS      shift, and go to state 17
    TOK_DBL_PLUS   shift, and go to state 18
    TOK_DBL_MINUS  shift, and go to state 19
    TOK_L_BR       shift, and go to state 21
    TOK_L_PARENTH  shift, and go to state 22
    TOK_DBL_COLON  shift, and go to state 24
    TOK_ID         shift, and go to state 25
    TOK_INT        shift, and go to state 26
    TOK_FLOAT      shift, and go to state 27
    TOK_STRING     shift, and go to state 28

    assignexpr  go to state 30
    expression  go to state 128
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 84

   18 assignexpr: • lvalue TOK_ASSIGN expression
   19 expression: • assignexpr
   20           | • expression TOK_PLUS expression
   21           | • expression TOK_MINUS expression
   22           | • expression TOK_MULTIPLY expression
   23           | • expression TOK_DIVIDE expression
   24           | • expression TOK_MODULO expression
   25           | • expression TOK_GREATER expression
   25           | expression TOK_GREATER • expression
   26           | • expression TOK_LESS expression
   27           | • expression TOK_GR_EQUAL expression
   28           | • expression TOK_LS_EQUAL expression
   29           | • expression TOK_EQUAL expression
   30           | • expression TOK_N_EQUAL expression
   32           | • expression TOK_AND $@1 M expression
   34           | • expression TOK_OR $@2 M expression
   35           | • term
   36 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   37     | • TOK_MINUS expression
   38     | • TOK_NOT expression
   39     | • TOK_DBL_PLUS lvalue
   40     | • lvalue TOK_DBL_PLUS
   41     | • TOK_DBL_MINUS lvalue
   42     | • lvalue TOK_DBL_MINUS
   43     | • primary
   44 primary: • lvalue
   45        | • call
   46        | • objectdef
   47        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   48        | • const
   49 lvalue: • TOK_ID
   50       | • TOK_LOCAL TOK_ID
   51       | • TOK_DBL_COLON TOK_ID
   52       | • member
   53 member: • lvalue TOK_DOT TOK_ID
   54       | • lvalue TOK_L_BR expression TOK_R_BR
   55       | • call TOK_DOT TOK_ID
   56       | • call TOK_L_BR expression TOK_R_BR
   57 call: • call normcall
   58     | • lvalue callsuffix
   59     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   70 objectdef: • TOK_L_BR elist TOK_R_BR
   71          | • TOK_L_BR indexed TOK_R_BR
   81 const: • TOK_INT
   82      | • TOK_FLOAT
   83      | • TOK_STRING
   84      | • TOK_NIL
   85      | • TOK_TRUE
   86      | • TOK_FALSE

    TOK_NOT        shift, and go to state 12
    TOK_LOCAL      shift, and go to state 13
    TOK_TRUE       shift, and go to state 14
    TOK_FALSE      shift, and go to state 15
    TOK_NIL        shift, and go to state 16
    TOK_MINUS      shift, and go to state 17
    TOK_DBL_PLUS   shift, and go to state 18
    TOK_DBL_MINUS  shift, and go to state 19
    TOK_L_BR       shift, and go to state 21
    TOK_L_PARENTH  shift, and go to state 22
    TOK_DBL_COLON  shift, and go to state 24
    TOK_ID         shift, and go to state 25
    TOK_INT        shift, and go to state 26
    TOK_FLOAT      shift, and go to state 27
    TOK_STRING     shift, and go to state 28

    assignexpr  go to state 30
    expression  go to state 129
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 85

   18 assignexpr: • lvalue TOK_ASSIGN expression
   19 expression: • assignexpr
   20           | • expression TOK_PLUS expression
   21           | • expression TOK_MINUS expression
   22           | • expression TOK_MULTIPLY expression
   23           | • expression TOK_DIVIDE expression
   24           | • expression TOK_MODULO expression
   25           | • expression TOK_GREATER expression
   26           | • expression TOK_LESS expression
   26           | expression TOK_LESS • expression
   27           | • expression TOK_GR_EQUAL expression
   28           | • expression TOK_LS_EQUAL expression
   29           | • expression TOK_EQUAL expression
   30           | • expression TOK_N_EQUAL expression
   32           | • expression TOK_AND $@1 M expression
   34           | • expression TOK_OR $@2 M expression
   35           | • term
   36 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   37     | • TOK_MINUS expression
   38     | • TOK_NOT expression
   39     | • TOK_DBL_PLUS lvalue
   40     | • lvalue TOK_DBL_PLUS
   41     | • TOK_DBL_MINUS lvalue
   42     | • lvalue TOK_DBL_MINUS
   43     | • primary
   44 primary: • lvalue
   45        | • call
   46        | • objectdef
   47        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   48        | • const
   49 lvalue: • TOK_ID
   50       | • TOK_LOCAL TOK_ID
   51       | • TOK_DBL_COLON TOK_ID
   52       | • member
   53 member: • lvalue TOK_DOT TOK_ID
   54       | • lvalue TOK_L_BR expression TOK_R_BR
   55       | • call TOK_DOT TOK_ID
   56       | • call TOK_L_BR expression TOK_R_BR
   57 call: • call normcall
   58     | • lvalue callsuffix
   59     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   70 objectdef: • TOK_L_BR elist TOK_R_BR
   71          | • TOK_L_BR indexed TOK_R_BR
   81 const: • TOK_INT
   82      | • TOK_FLOAT
   83      | • TOK_STRING
   84      | • TOK_NIL
   85      | • TOK_TRUE
   86      | • TOK_FALSE

    TOK_NOT        shift, and go to state 12
    TOK_LOCAL      shift, and go to state 13
    TOK_TRUE       shift, and go to state 14
    TOK_FALSE      shift, and go to state 15
    TOK_NIL        shift, and go to state 16
    TOK_MINUS      shift, and go to state 17
    TOK_DBL_PLUS   shift, and go to state 18
    TOK_DBL_MINUS  shift, and go to state 19
    TOK_L_BR       shift, and go to state 21
    TOK_L_PARENTH  shift, and go to state 22
    TOK_DBL_COLON  shift, and go to state 24
    TOK_ID         shift, and go to state 25
    TOK_INT        shift, and go to state 26
    TOK_FLOAT      shift, and go to state 27
    TOK_STRING     shift, and go to state 28

    assignexpr  go to state 30
    expression  go to state 130
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 86

   18 assignexpr: • lvalue TOK_ASSIGN expression
   19 expression: • assignexpr
   20           | • expression TOK_PLUS expression
   21           | • expression TOK_MINUS expression
   22           | • expression TOK_MULTIPLY expression
   23           | • expression TOK_DIVIDE expression
   24           | • expression TOK_MODULO expression
   25           | • expression TOK_GREATER expression
   26           | • expression TOK_LESS expression
   27           | • expression TOK_GR_EQUAL expression
   27           | expression TOK_GR_EQUAL • expression
   28           | • expression TOK_LS_EQUAL expression
   29           | • expression TOK_EQUAL expression
   30           | • expression TOK_N_EQUAL expression
   32           | • expression TOK_AND $@1 M expression
   34           | • expression TOK_OR $@2 M expression
   35           | • term
   36 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   37     | • TOK_MINUS expression
   38     | • TOK_NOT expression
   39     | • TOK_DBL_PLUS lvalue
   40     | • lvalue TOK_DBL_PLUS
   41     | • TOK_DBL_MINUS lvalue
   42     | • lvalue TOK_DBL_MINUS
   43     | • primary
   44 primary: • lvalue
   45        | • call
   46        | • objectdef
   47        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   48        | • const
   49 lvalue: • TOK_ID
   50       | • TOK_LOCAL TOK_ID
   51       | • TOK_DBL_COLON TOK_ID
   52       | • member
   53 member: • lvalue TOK_DOT TOK_ID
   54       | • lvalue TOK_L_BR expression TOK_R_BR
   55       | • call TOK_DOT TOK_ID
   56       | • call TOK_L_BR expression TOK_R_BR
   57 call: • call normcall
   58     | • lvalue callsuffix
   59     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   70 objectdef: • TOK_L_BR elist TOK_R_BR
   71          | • TOK_L_BR indexed TOK_R_BR
   81 const: • TOK_INT
   82      | • TOK_FLOAT
   83      | • TOK_STRING
   84      | • TOK_NIL
   85      | • TOK_TRUE
   86      | • TOK_FALSE

    TOK_NOT        shift, and go to state 12
    TOK_LOCAL      shift, and go to state 13
    TOK_TRUE       shift, and go to state 14
    TOK_FALSE      shift, and go to state 15
    TOK_NIL        shift, and go to state 16
    TOK_MINUS      shift, and go to state 17
    TOK_DBL_PLUS   shift, and go to state 18
    TOK_DBL_MINUS  shift, and go to state 19
    TOK_L_BR       shift, and go to state 21
    TOK_L_PARENTH  shift, and go to state 22
    TOK_DBL_COLON  shift, and go to state 24
    TOK_ID         shift, and go to state 25
    TOK_INT        shift, and go to state 26
    TOK_FLOAT      shift, and go to state 27
    TOK_STRING     shift, and go to state 28

    assignexpr  go to state 30
    expression  go to state 131
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 87

   18 assignexpr: • lvalue TOK_ASSIGN expression
   19 expression: • assignexpr
   20           | • expression TOK_PLUS expression
   21           | • expression TOK_MINUS expression
   22           | • expression TOK_MULTIPLY expression
   23           | • expression TOK_DIVIDE expression
   24           | • expression TOK_MODULO expression
   25           | • expression TOK_GREATER expression
   26           | • expression TOK_LESS expression
   27           | • expression TOK_GR_EQUAL expression
   28           | • expression TOK_LS_EQUAL expression
   28           | expression TOK_LS_EQUAL • expression
   29           | • expression TOK_EQUAL expression
   30           | • expression TOK_N_EQUAL expression
   32           | • expression TOK_AND $@1 M expression
   34           | • expression TOK_OR $@2 M expression
   35           | • term
   36 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   37     | • TOK_MINUS expression
   38     | • TOK_NOT expression
   39     | • TOK_DBL_PLUS lvalue
   40     | • lvalue TOK_DBL_PLUS
   41     | • TOK_DBL_MINUS lvalue
   42     | • lvalue TOK_DBL_MINUS
   43     | • primary
   44 primary: • lvalue
   45        | • call
   46        | • objectdef
   47        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   48        | • const
   49 lvalue: • TOK_ID
   50       | • TOK_LOCAL TOK_ID
   51       | • TOK_DBL_COLON TOK_ID
   52       | • member
   53 member: • lvalue TOK_DOT TOK_ID
   54       | • lvalue TOK_L_BR expression TOK_R_BR
   55       | • call TOK_DOT TOK_ID
   56       | • call TOK_L_BR expression TOK_R_BR
   57 call: • call normcall
   58     | • lvalue callsuffix
   59     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   70 objectdef: • TOK_L_BR elist TOK_R_BR
   71          | • TOK_L_BR indexed TOK_R_BR
   81 const: • TOK_INT
   82      | • TOK_FLOAT
   83      | • TOK_STRING
   84      | • TOK_NIL
   85      | • TOK_TRUE
   86      | • TOK_FALSE

    TOK_NOT        shift, and go to state 12
    TOK_LOCAL      shift, and go to state 13
    TOK_TRUE       shift, and go to state 14
    TOK_FALSE      shift, and go to state 15
    TOK_NIL        shift, and go to state 16
    TOK_MINUS      shift, and go to state 17
    TOK_DBL_PLUS   shift, and go to state 18
    TOK_DBL_MINUS  shift, and go to state 19
    TOK_L_BR       shift, and go to state 21
    TOK_L_PARENTH  shift, and go to state 22
    TOK_DBL_COLON  shift, and go to state 24
    TOK_ID         shift, and go to state 25
    TOK_INT        shift, and go to state 26
    TOK_FLOAT      shift, and go to state 27
    TOK_STRING     shift, and go to state 28

    assignexpr  go to state 30
    expression  go to state 132
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 88

    3 statement: expression TOK_SEMICOLON •

    $default  reduce using rule 3 (statement)


State 89

   18 assignexpr: • lvalue TOK_ASSIGN expression
   18           | lvalue TOK_ASSIGN • expression
   19 expression: • assignexpr
   20           | • expression TOK_PLUS expression
   21           | • expression TOK_MINUS expression
   22           | • expression TOK_MULTIPLY expression
   23           | • expression TOK_DIVIDE expression
   24           | • expression TOK_MODULO expression
   25           | • expression TOK_GREATER expression
   26           | • expression TOK_LESS expression
   27           | • expression TOK_GR_EQUAL expression
   28           | • expression TOK_LS_EQUAL expression
   29           | • expression TOK_EQUAL expression
   30           | • expression TOK_N_EQUAL expression
   32           | • expression TOK_AND $@1 M expression
   34           | • expression TOK_OR $@2 M expression
   35           | • term
   36 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   37     | • TOK_MINUS expression
   38     | • TOK_NOT expression
   39     | • TOK_DBL_PLUS lvalue
   40     | • lvalue TOK_DBL_PLUS
   41     | • TOK_DBL_MINUS lvalue
   42     | • lvalue TOK_DBL_MINUS
   43     | • primary
   44 primary: • lvalue
   45        | • call
   46        | • objectdef
   47        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   48        | • const
   49 lvalue: • TOK_ID
   50       | • TOK_LOCAL TOK_ID
   51       | • TOK_DBL_COLON TOK_ID
   52       | • member
   53 member: • lvalue TOK_DOT TOK_ID
   54       | • lvalue TOK_L_BR expression TOK_R_BR
   55       | • call TOK_DOT TOK_ID
   56       | • call TOK_L_BR expression TOK_R_BR
   57 call: • call normcall
   58     | • lvalue callsuffix
   59     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   70 objectdef: • TOK_L_BR elist TOK_R_BR
   71          | • TOK_L_BR indexed TOK_R_BR
   81 const: • TOK_INT
   82      | • TOK_FLOAT
   83      | • TOK_STRING
   84      | • TOK_NIL
   85      | • TOK_TRUE
   86      | • TOK_FALSE

    TOK_NOT        shift, and go to state 12
    TOK_LOCAL      shift, and go to state 13
    TOK_TRUE       shift, and go to state 14
    TOK_FALSE      shift, and go to state 15
    TOK_NIL        shift, and go to state 16
    TOK_MINUS      shift, and go to state 17
    TOK_DBL_PLUS   shift, and go to state 18
    TOK_DBL_MINUS  shift, and go to state 19
    TOK_L_BR       shift, and go to state 21
    TOK_L_PARENTH  shift, and go to state 22
    TOK_DBL_COLON  shift, and go to state 24
    TOK_ID         shift, and go to state 25
    TOK_INT        shift, and go to state 26
    TOK_FLOAT      shift, and go to state 27
    TOK_STRING     shift, and go to state 28

    assignexpr  go to state 30
    expression  go to state 133
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 90

   40 term: lvalue TOK_DBL_PLUS •

    $default  reduce using rule 40 (term)


State 91

   42 term: lvalue TOK_DBL_MINUS •

    $default  reduce using rule 42 (term)


State 92

   18 assignexpr: • lvalue TOK_ASSIGN expression
   19 expression: • assignexpr
   20           | • expression TOK_PLUS expression
   21           | • expression TOK_MINUS expression
   22           | • expression TOK_MULTIPLY expression
   23           | • expression TOK_DIVIDE expression
   24           | • expression TOK_MODULO expression
   25           | • expression TOK_GREATER expression
   26           | • expression TOK_LESS expression
   27           | • expression TOK_GR_EQUAL expression
   28           | • expression TOK_LS_EQUAL expression
   29           | • expression TOK_EQUAL expression
   30           | • expression TOK_N_EQUAL expression
   32           | • expression TOK_AND $@1 M expression
   34           | • expression TOK_OR $@2 M expression
   35           | • term
   36 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   37     | • TOK_MINUS expression
   38     | • TOK_NOT expression
   39     | • TOK_DBL_PLUS lvalue
   40     | • lvalue TOK_DBL_PLUS
   41     | • TOK_DBL_MINUS lvalue
   42     | • lvalue TOK_DBL_MINUS
   43     | • primary
   44 primary: • lvalue
   45        | • call
   46        | • objectdef
   47        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   48        | • const
   49 lvalue: • TOK_ID
   50       | • TOK_LOCAL TOK_ID
   51       | • TOK_DBL_COLON TOK_ID
   52       | • member
   53 member: • lvalue TOK_DOT TOK_ID
   54       | • lvalue TOK_L_BR expression TOK_R_BR
   54       | lvalue TOK_L_BR • expression TOK_R_BR
   55       | • call TOK_DOT TOK_ID
   56       | • call TOK_L_BR expression TOK_R_BR
   57 call: • call normcall
   58     | • lvalue callsuffix
   59     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   70 objectdef: • TOK_L_BR elist TOK_R_BR
   71          | • TOK_L_BR indexed TOK_R_BR
   81 const: • TOK_INT
   82      | • TOK_FLOAT
   83      | • TOK_STRING
   84      | • TOK_NIL
   85      | • TOK_TRUE
   86      | • TOK_FALSE

    TOK_NOT        shift, and go to state 12
    TOK_LOCAL      shift, and go to state 13
    TOK_TRUE       shift, and go to state 14
    TOK_FALSE      shift, and go to state 15
    TOK_NIL        shift, and go to state 16
    TOK_MINUS      shift, and go to state 17
    TOK_DBL_PLUS   shift, and go to state 18
    TOK_DBL_MINUS  shift, and go to state 19
    TOK_L_BR       shift, and go to state 21
    TOK_L_PARENTH  shift, and go to state 22
    TOK_DBL_COLON  shift, and go to state 24
    TOK_ID         shift, and go to state 25
    TOK_INT        shift, and go to state 26
    TOK_FLOAT      shift, and go to state 27
    TOK_STRING     shift, and go to state 28

    assignexpr  go to state 30
    expression  go to state 134
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 93

   18 assignexpr: • lvalue TOK_ASSIGN expression
   19 expression: • assignexpr
   20           | • expression TOK_PLUS expression
   21           | • expression TOK_MINUS expression
   22           | • expression TOK_MULTIPLY expression
   23           | • expression TOK_DIVIDE expression
   24           | • expression TOK_MODULO expression
   25           | • expression TOK_GREATER expression
   26           | • expression TOK_LESS expression
   27           | • expression TOK_GR_EQUAL expression
   28           | • expression TOK_LS_EQUAL expression
   29           | • expression TOK_EQUAL expression
   30           | • expression TOK_N_EQUAL expression
   32           | • expression TOK_AND $@1 M expression
   34           | • expression TOK_OR $@2 M expression
   35           | • term
   36 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   37     | • TOK_MINUS expression
   38     | • TOK_NOT expression
   39     | • TOK_DBL_PLUS lvalue
   40     | • lvalue TOK_DBL_PLUS
   41     | • TOK_DBL_MINUS lvalue
   42     | • lvalue TOK_DBL_MINUS
   43     | • primary
   44 primary: • lvalue
   45        | • call
   46        | • objectdef
   47        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   48        | • const
   49 lvalue: • TOK_ID
   50       | • TOK_LOCAL TOK_ID
   51       | • TOK_DBL_COLON TOK_ID
   52       | • member
   53 member: • lvalue TOK_DOT TOK_ID
   54       | • lvalue TOK_L_BR expression TOK_R_BR
   55       | • call TOK_DOT TOK_ID
   56       | • call TOK_L_BR expression TOK_R_BR
   57 call: • call normcall
   58     | • lvalue callsuffix
   59     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   62 normcall: TOK_L_PARENTH • elist TOK_R_PARENTH
   64 elist: • elist TOK_COMMA expression
   65      | • expression
   66      | ε •  [TOK_R_PARENTH, TOK_COMMA]
   70 objectdef: • TOK_L_BR elist TOK_R_BR
   71          | • TOK_L_BR indexed TOK_R_BR
   81 const: • TOK_INT
   82      | • TOK_FLOAT
   83      | • TOK_STRING
   84      | • TOK_NIL
   85      | • TOK_TRUE
   86      | • TOK_FALSE

    TOK_NOT        shift, and go to state 12
    TOK_LOCAL      shift, and go to state 13
    TOK_TRUE       shift, and go to state 14
    TOK_FALSE      shift, and go to state 15
    TOK_NIL        shift, and go to state 16
    TOK_MINUS      shift, and go to state 17
    TOK_DBL_PLUS   shift, and go to state 18
    TOK_DBL_MINUS  shift, and go to state 19
    TOK_L_BR       shift, and go to state 21
    TOK_L_PARENTH  shift, and go to state 22
    TOK_DBL_COLON  shift, and go to state 24
    TOK_ID         shift, and go to state 25
    TOK_INT        shift, and go to state 26
    TOK_FLOAT      shift, and go to state 27
    TOK_STRING     shift, and go to state 28

    $default  reduce using rule 66 (elist)

    assignexpr  go to state 30
    expression  go to state 68
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    elist       go to state 135
    objectdef   go to state 37
    const       go to state 41


State 94

   53 member: lvalue TOK_DOT • TOK_ID

    TOK_ID  shift, and go to state 136


State 95

   63 methodcall: TOK_DBL_DOT • TOK_ID normcall

    TOK_ID  shift, and go to state 137


State 96

   58 call: lvalue callsuffix •

    $default  reduce using rule 58 (call)


State 97

   60 callsuffix: normcall •

    $default  reduce using rule 60 (callsuffix)


State 98

   61 callsuffix: methodcall •

    $default  reduce using rule 61 (callsuffix)


State 99

   18 assignexpr: • lvalue TOK_ASSIGN expression
   19 expression: • assignexpr
   20           | • expression TOK_PLUS expression
   21           | • expression TOK_MINUS expression
   22           | • expression TOK_MULTIPLY expression
   23           | • expression TOK_DIVIDE expression
   24           | • expression TOK_MODULO expression
   25           | • expression TOK_GREATER expression
   26           | • expression TOK_LESS expression
   27           | • expression TOK_GR_EQUAL expression
   28           | • expression TOK_LS_EQUAL expression
   29           | • expression TOK_EQUAL expression
   30           | • expression TOK_N_EQUAL expression
   32           | • expression TOK_AND $@1 M expression
   34           | • expression TOK_OR $@2 M expression
   35           | • term
   36 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   37     | • TOK_MINUS expression
   38     | • TOK_NOT expression
   39     | • TOK_DBL_PLUS lvalue
   40     | • lvalue TOK_DBL_PLUS
   41     | • TOK_DBL_MINUS lvalue
   42     | • lvalue TOK_DBL_MINUS
   43     | • primary
   44 primary: • lvalue
   45        | • call
   46        | • objectdef
   47        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   48        | • const
   49 lvalue: • TOK_ID
   50       | • TOK_LOCAL TOK_ID
   51       | • TOK_DBL_COLON TOK_ID
   52       | • member
   53 member: • lvalue TOK_DOT TOK_ID
   54       | • lvalue TOK_L_BR expression TOK_R_BR
   55       | • call TOK_DOT TOK_ID
   56       | • call TOK_L_BR expression TOK_R_BR
   56       | call TOK_L_BR • expression TOK_R_BR
   57 call: • call normcall
   58     | • lvalue callsuffix
   59     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   70 objectdef: • TOK_L_BR elist TOK_R_BR
   71          | • TOK_L_BR indexed TOK_R_BR
   81 const: • TOK_INT
   82      | • TOK_FLOAT
   83      | • TOK_STRING
   84      | • TOK_NIL
   85      | • TOK_TRUE
   86      | • TOK_FALSE

    TOK_NOT        shift, and go to state 12
    TOK_LOCAL      shift, and go to state 13
    TOK_TRUE       shift, and go to state 14
    TOK_FALSE      shift, and go to state 15
    TOK_NIL        shift, and go to state 16
    TOK_MINUS      shift, and go to state 17
    TOK_DBL_PLUS   shift, and go to state 18
    TOK_DBL_MINUS  shift, and go to state 19
    TOK_L_BR       shift, and go to state 21
    TOK_L_PARENTH  shift, and go to state 22
    TOK_DBL_COLON  shift, and go to state 24
    TOK_ID         shift, and go to state 25
    TOK_INT        shift, and go to state 26
    TOK_FLOAT      shift, and go to state 27
    TOK_STRING     shift, and go to state 28

    assignexpr  go to state 30
    expression  go to state 138
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 100

   55 member: call TOK_DOT • TOK_ID

    TOK_ID  shift, and go to state 139


State 101

   57 call: call normcall •

    $default  reduce using rule 57 (call)


State 102

   78 funcargs: TOK_L_PARENTH • idlist TOK_R_PARENTH
   87 idlist: • TOK_ID
   88       | • idlist TOK_COMMA TOK_ID
   89       | ε •  [TOK_R_PARENTH, TOK_COMMA]

    TOK_ID  shift, and go to state 140

    $default  reduce using rule 89 (idlist)

    idlist  go to state 141


State 103

   74 funcdef_block: • TOK_L_CURLY_BR statements TOK_R_CURLY_BR
   79 funcbody: • funcdef_block
   80 funcdef: funcprefix funcargs • funcbody

    TOK_L_CURLY_BR  shift, and go to state 142

    funcdef_block  go to state 143
    funcbody       go to state 144


State 104

   91 elseprefix: • TOK_ELSE
   92 if_statement: ifprefix statement •  [$end, error, TOK_IF, TOK_ELSE, TOK_WHILE, TOK_FOR, TOK_FUNCTION, TOK_RETURN, TOK_BREAK, TOK_CONTINUE, TOK_NOT, TOK_LOCAL, TOK_TRUE, TOK_FALSE, TOK_NIL, TOK_MINUS, TOK_DBL_PLUS, TOK_DBL_MINUS, TOK_L_CURLY_BR, TOK_R_CURLY_BR, TOK_L_BR, TOK_L_PARENTH, TOK_SEMICOLON, TOK_DBL_COLON, TOK_ID, TOK_INT, TOK_FLOAT, TOK_STRING]
   93 ifelse_statement: ifprefix statement • elseprefix statement

    TOK_ELSE  shift, and go to state 145

    TOK_ELSE  [reduce using rule 92 (if_statement)]
    $default  reduce using rule 92 (if_statement)

    elseprefix  go to state 146

    shift/reduce conflict on token TOK_ELSE:
       92 if_statement: ifprefix statement •
       91 elseprefix: • TOK_ELSE
      Example: ifprefix ifprefix statement • TOK_ELSE statement
      Shift derivation
        statement
        ↳ 4: if_statement
             ↳ 92: ifprefix statement
                            ↳ 5: ifelse_statement
                                 ↳ 93: ifprefix statement elseprefix       statement
                                                          ↳ 91: • TOK_ELSE
      Reduce derivation
        statement
        ↳ 5: ifelse_statement
             ↳ 93: ifprefix statement                       elseprefix     statement
                            ↳ 4: if_statement               ↳ 91: TOK_ELSE
                                 ↳ 92: ifprefix statement •



State 105

   18 assignexpr: • lvalue TOK_ASSIGN expression
   19 expression: • assignexpr
   20           | • expression TOK_PLUS expression
   21           | • expression TOK_MINUS expression
   22           | • expression TOK_MULTIPLY expression
   23           | • expression TOK_DIVIDE expression
   24           | • expression TOK_MODULO expression
   25           | • expression TOK_GREATER expression
   26           | • expression TOK_LESS expression
   27           | • expression TOK_GR_EQUAL expression
   28           | • expression TOK_LS_EQUAL expression
   29           | • expression TOK_EQUAL expression
   30           | • expression TOK_N_EQUAL expression
   32           | • expression TOK_AND $@1 M expression
   34           | • expression TOK_OR $@2 M expression
   35           | • term
   36 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   37     | • TOK_MINUS expression
   38     | • TOK_NOT expression
   39     | • TOK_DBL_PLUS lvalue
   40     | • lvalue TOK_DBL_PLUS
   41     | • TOK_DBL_MINUS lvalue
   42     | • lvalue TOK_DBL_MINUS
   43     | • primary
   44 primary: • lvalue
   45        | • call
   46        | • objectdef
   47        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   48        | • const
   49 lvalue: • TOK_ID
   50       | • TOK_LOCAL TOK_ID
   51       | • TOK_DBL_COLON TOK_ID
   52       | • member
   53 member: • lvalue TOK_DOT TOK_ID
   54       | • lvalue TOK_L_BR expression TOK_R_BR
   55       | • call TOK_DOT TOK_ID
   56       | • call TOK_L_BR expression TOK_R_BR
   57 call: • call normcall
   58     | • lvalue callsuffix
   59     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   70 objectdef: • TOK_L_BR elist TOK_R_BR
   71          | • TOK_L_BR indexed TOK_R_BR
   81 const: • TOK_INT
   82      | • TOK_FLOAT
   83      | • TOK_STRING
   84      | • TOK_NIL
   85      | • TOK_TRUE
   86      | • TOK_FALSE
   95 whilecond: TOK_L_PARENTH • expression TOK_R_PARENTH

    TOK_NOT        shift, and go to state 12
    TOK_LOCAL      shift, and go to state 13
    TOK_TRUE       shift, and go to state 14
    TOK_FALSE      shift, and go to state 15
    TOK_NIL        shift, and go to state 16
    TOK_MINUS      shift, and go to state 17
    TOK_DBL_PLUS   shift, and go to state 18
    TOK_DBL_MINUS  shift, and go to state 19
    TOK_L_BR       shift, and go to state 21
    TOK_L_PARENTH  shift, and go to state 22
    TOK_DBL_COLON  shift, and go to state 24
    TOK_ID         shift, and go to state 25
    TOK_INT        shift, and go to state 26
    TOK_FLOAT      shift, and go to state 27
    TOK_STRING     shift, and go to state 28

    assignexpr  go to state 30
    expression  go to state 147
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 106

    3 statement: • expression TOK_SEMICOLON
    4          | • if_statement
    5          | • ifelse_statement
    6          | • while_statement
    7          | • for_statement
    8          | • return_statement
    9          | • TOK_BREAK TOK_SEMICOLON
   10          | • TOK_CONTINUE TOK_SEMICOLON
   11          | • block
   12          | • funcdef
   13          | • TOK_SEMICOLON
   14          | • error TOK_SEMICOLON
   18 assignexpr: • lvalue TOK_ASSIGN expression
   19 expression: • assignexpr
   20           | • expression TOK_PLUS expression
   21           | • expression TOK_MINUS expression
   22           | • expression TOK_MULTIPLY expression
   23           | • expression TOK_DIVIDE expression
   24           | • expression TOK_MODULO expression
   25           | • expression TOK_GREATER expression
   26           | • expression TOK_LESS expression
   27           | • expression TOK_GR_EQUAL expression
   28           | • expression TOK_LS_EQUAL expression
   29           | • expression TOK_EQUAL expression
   30           | • expression TOK_N_EQUAL expression
   32           | • expression TOK_AND $@1 M expression
   34           | • expression TOK_OR $@2 M expression
   35           | • term
   36 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   37     | • TOK_MINUS expression
   38     | • TOK_NOT expression
   39     | • TOK_DBL_PLUS lvalue
   40     | • lvalue TOK_DBL_PLUS
   41     | • TOK_DBL_MINUS lvalue
   42     | • lvalue TOK_DBL_MINUS
   43     | • primary
   44 primary: • lvalue
   45        | • call
   46        | • objectdef
   47        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   48        | • const
   49 lvalue: • TOK_ID
   50       | • TOK_LOCAL TOK_ID
   51       | • TOK_DBL_COLON TOK_ID
   52       | • member
   53 member: • lvalue TOK_DOT TOK_ID
   54       | • lvalue TOK_L_BR expression TOK_R_BR
   55       | • call TOK_DOT TOK_ID
   56       | • call TOK_L_BR expression TOK_R_BR
   57 call: • call normcall
   58     | • lvalue callsuffix
   59     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   70 objectdef: • TOK_L_BR elist TOK_R_BR
   71          | • TOK_L_BR indexed TOK_R_BR
   73 block: • TOK_L_CURLY_BR $@3 statements TOK_R_CURLY_BR
   76 funcprefix: • TOK_FUNCTION funcname
   77           | • TOK_FUNCTION
   80 funcdef: • funcprefix funcargs funcbody
   81 const: • TOK_INT
   82      | • TOK_FLOAT
   83      | • TOK_STRING
   84      | • TOK_NIL
   85      | • TOK_TRUE
   86      | • TOK_FALSE
   90 ifprefix: • TOK_IF TOK_L_PARENTH expression TOK_R_PARENTH
   92 if_statement: • ifprefix statement
   93 ifelse_statement: • ifprefix statement elseprefix statement
   94 whilestart: • TOK_WHILE
   96 while_statement: • whilestart whilecond statement
   96                | whilestart whilecond • statement
   99 forprefix: • TOK_FOR TOK_L_PARENTH elist TOK_SEMICOLON M1 expression TOK_SEMICOLON
  100 for_statement: • forprefix N elist TOK_R_PARENTH N statement N
  101 return_statement: • TOK_RETURN TOK_SEMICOLON
  102                 | • TOK_RETURN expression TOK_SEMICOLON

    error           shift, and go to state 4
    TOK_IF          shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_FOR         shift, and go to state 7
    TOK_FUNCTION    shift, and go to state 8
    TOK_RETURN      shift, and go to state 9
    TOK_BREAK       shift, and go to state 10
    TOK_CONTINUE    shift, and go to state 11
    TOK_NOT         shift, and go to state 12
    TOK_LOCAL       shift, and go to state 13
    TOK_TRUE        shift, and go to state 14
    TOK_FALSE       shift, and go to state 15
    TOK_NIL         shift, and go to state 16
    TOK_MINUS       shift, and go to state 17
    TOK_DBL_PLUS    shift, and go to state 18
    TOK_DBL_MINUS   shift, and go to state 19
    TOK_L_CURLY_BR  shift, and go to state 20
    TOK_L_BR        shift, and go to state 21
    TOK_L_PARENTH   shift, and go to state 22
    TOK_SEMICOLON   shift, and go to state 23
    TOK_DBL_COLON   shift, and go to state 24
    TOK_ID          shift, and go to state 25
    TOK_INT         shift, and go to state 26
    TOK_FLOAT       shift, and go to state 27
    TOK_STRING      shift, and go to state 28

    statement         go to state 148
    assignexpr        go to state 30
    expression        go to state 31
    term              go to state 32
    primary           go to state 33
    lvalue            go to state 34
    member            go to state 35
    call              go to state 36
    objectdef         go to state 37
    block             go to state 38
    funcprefix        go to state 39
    funcdef           go to state 40
    const             go to state 41
    ifprefix          go to state 42
    if_statement      go to state 43
    ifelse_statement  go to state 44
    whilestart        go to state 45
    while_statement   go to state 46
    forprefix         go to state 47
    for_statement     go to state 48
    return_statement  go to state 49


State 107

   18 assignexpr: • lvalue TOK_ASSIGN expression
   19 expression: • assignexpr
   20           | • expression TOK_PLUS expression
   21           | • expression TOK_MINUS expression
   22           | • expression TOK_MULTIPLY expression
   23           | • expression TOK_DIVIDE expression
   24           | • expression TOK_MODULO expression
   25           | • expression TOK_GREATER expression
   26           | • expression TOK_LESS expression
   27           | • expression TOK_GR_EQUAL expression
   28           | • expression TOK_LS_EQUAL expression
   29           | • expression TOK_EQUAL expression
   30           | • expression TOK_N_EQUAL expression
   32           | • expression TOK_AND $@1 M expression
   34           | • expression TOK_OR $@2 M expression
   35           | • term
   36 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   37     | • TOK_MINUS expression
   38     | • TOK_NOT expression
   39     | • TOK_DBL_PLUS lvalue
   40     | • lvalue TOK_DBL_PLUS
   41     | • TOK_DBL_MINUS lvalue
   42     | • lvalue TOK_DBL_MINUS
   43     | • primary
   44 primary: • lvalue
   45        | • call
   46        | • objectdef
   47        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   48        | • const
   49 lvalue: • TOK_ID
   50       | • TOK_LOCAL TOK_ID
   51       | • TOK_DBL_COLON TOK_ID
   52       | • member
   53 member: • lvalue TOK_DOT TOK_ID
   54       | • lvalue TOK_L_BR expression TOK_R_BR
   55       | • call TOK_DOT TOK_ID
   56       | • call TOK_L_BR expression TOK_R_BR
   57 call: • call normcall
   58     | • lvalue callsuffix
   59     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   64 elist: • elist TOK_COMMA expression
   65      | • expression
   66      | ε •  [TOK_R_PARENTH, TOK_COMMA]
   70 objectdef: • TOK_L_BR elist TOK_R_BR
   71          | • TOK_L_BR indexed TOK_R_BR
   81 const: • TOK_INT
   82      | • TOK_FLOAT
   83      | • TOK_STRING
   84      | • TOK_NIL
   85      | • TOK_TRUE
   86      | • TOK_FALSE
  100 for_statement: forprefix N • elist TOK_R_PARENTH N statement N

    TOK_NOT        shift, and go to state 12
    TOK_LOCAL      shift, and go to state 13
    TOK_TRUE       shift, and go to state 14
    TOK_FALSE      shift, and go to state 15
    TOK_NIL        shift, and go to state 16
    TOK_MINUS      shift, and go to state 17
    TOK_DBL_PLUS   shift, and go to state 18
    TOK_DBL_MINUS  shift, and go to state 19
    TOK_L_BR       shift, and go to state 21
    TOK_L_PARENTH  shift, and go to state 22
    TOK_DBL_COLON  shift, and go to state 24
    TOK_ID         shift, and go to state 25
    TOK_INT        shift, and go to state 26
    TOK_FLOAT      shift, and go to state 27
    TOK_STRING     shift, and go to state 28

    $default  reduce using rule 66 (elist)

    assignexpr  go to state 30
    expression  go to state 68
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    elist       go to state 149
    objectdef   go to state 37
    const       go to state 41


State 108

   20 expression: expression • TOK_PLUS expression
   21           | expression • TOK_MINUS expression
   22           | expression • TOK_MULTIPLY expression
   23           | expression • TOK_DIVIDE expression
   24           | expression • TOK_MODULO expression
   25           | expression • TOK_GREATER expression
   26           | expression • TOK_LESS expression
   27           | expression • TOK_GR_EQUAL expression
   28           | expression • TOK_LS_EQUAL expression
   29           | expression • TOK_EQUAL expression
   30           | expression • TOK_N_EQUAL expression
   32           | expression • TOK_AND $@1 M expression
   34           | expression • TOK_OR $@2 M expression
   90 ifprefix: TOK_IF TOK_L_PARENTH expression • TOK_R_PARENTH

    TOK_AND        shift, and go to state 75
    TOK_OR         shift, and go to state 76
    TOK_PLUS       shift, and go to state 77
    TOK_MINUS      shift, and go to state 78
    TOK_MULTIPLY   shift, and go to state 79
    TOK_DIVIDE     shift, and go to state 80
    TOK_MODULO     shift, and go to state 81
    TOK_EQUAL      shift, and go to state 82
    TOK_N_EQUAL    shift, and go to state 83
    TOK_GREATER    shift, and go to state 84
    TOK_LESS       shift, and go to state 85
    TOK_GR_EQUAL   shift, and go to state 86
    TOK_LS_EQUAL   shift, and go to state 87
    TOK_R_PARENTH  shift, and go to state 150


State 109

   64 elist: elist • TOK_COMMA expression
   99 forprefix: TOK_FOR TOK_L_PARENTH elist • TOK_SEMICOLON M1 expression TOK_SEMICOLON

    TOK_SEMICOLON  shift, and go to state 151
    TOK_COMMA      shift, and go to state 115


State 110

  102 return_statement: TOK_RETURN expression TOK_SEMICOLON •

    $default  reduce using rule 102 (return_statement)


State 111

   59 call: TOK_L_PARENTH funcdef • TOK_R_PARENTH normcall

    TOK_R_PARENTH  shift, and go to state 152


State 112

    3 statement: • expression TOK_SEMICOLON
    4          | • if_statement
    5          | • ifelse_statement
    6          | • while_statement
    7          | • for_statement
    8          | • return_statement
    9          | • TOK_BREAK TOK_SEMICOLON
   10          | • TOK_CONTINUE TOK_SEMICOLON
   11          | • block
   12          | • funcdef
   13          | • TOK_SEMICOLON
   14          | • error TOK_SEMICOLON
   15 statements: statements • statement
   18 assignexpr: • lvalue TOK_ASSIGN expression
   19 expression: • assignexpr
   20           | • expression TOK_PLUS expression
   21           | • expression TOK_MINUS expression
   22           | • expression TOK_MULTIPLY expression
   23           | • expression TOK_DIVIDE expression
   24           | • expression TOK_MODULO expression
   25           | • expression TOK_GREATER expression
   26           | • expression TOK_LESS expression
   27           | • expression TOK_GR_EQUAL expression
   28           | • expression TOK_LS_EQUAL expression
   29           | • expression TOK_EQUAL expression
   30           | • expression TOK_N_EQUAL expression
   32           | • expression TOK_AND $@1 M expression
   34           | • expression TOK_OR $@2 M expression
   35           | • term
   36 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   37     | • TOK_MINUS expression
   38     | • TOK_NOT expression
   39     | • TOK_DBL_PLUS lvalue
   40     | • lvalue TOK_DBL_PLUS
   41     | • TOK_DBL_MINUS lvalue
   42     | • lvalue TOK_DBL_MINUS
   43     | • primary
   44 primary: • lvalue
   45        | • call
   46        | • objectdef
   47        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   48        | • const
   49 lvalue: • TOK_ID
   50       | • TOK_LOCAL TOK_ID
   51       | • TOK_DBL_COLON TOK_ID
   52       | • member
   53 member: • lvalue TOK_DOT TOK_ID
   54       | • lvalue TOK_L_BR expression TOK_R_BR
   55       | • call TOK_DOT TOK_ID
   56       | • call TOK_L_BR expression TOK_R_BR
   57 call: • call normcall
   58     | • lvalue callsuffix
   59     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   70 objectdef: • TOK_L_BR elist TOK_R_BR
   71          | • TOK_L_BR indexed TOK_R_BR
   73 block: • TOK_L_CURLY_BR $@3 statements TOK_R_CURLY_BR
   73      | TOK_L_CURLY_BR $@3 statements • TOK_R_CURLY_BR
   76 funcprefix: • TOK_FUNCTION funcname
   77           | • TOK_FUNCTION
   80 funcdef: • funcprefix funcargs funcbody
   81 const: • TOK_INT
   82      | • TOK_FLOAT
   83      | • TOK_STRING
   84      | • TOK_NIL
   85      | • TOK_TRUE
   86      | • TOK_FALSE
   90 ifprefix: • TOK_IF TOK_L_PARENTH expression TOK_R_PARENTH
   92 if_statement: • ifprefix statement
   93 ifelse_statement: • ifprefix statement elseprefix statement
   94 whilestart: • TOK_WHILE
   96 while_statement: • whilestart whilecond statement
   99 forprefix: • TOK_FOR TOK_L_PARENTH elist TOK_SEMICOLON M1 expression TOK_SEMICOLON
  100 for_statement: • forprefix N elist TOK_R_PARENTH N statement N
  101 return_statement: • TOK_RETURN TOK_SEMICOLON
  102                 | • TOK_RETURN expression TOK_SEMICOLON

    error           shift, and go to state 4
    TOK_IF          shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_FOR         shift, and go to state 7
    TOK_FUNCTION    shift, and go to state 8
    TOK_RETURN      shift, and go to state 9
    TOK_BREAK       shift, and go to state 10
    TOK_CONTINUE    shift, and go to state 11
    TOK_NOT         shift, and go to state 12
    TOK_LOCAL       shift, and go to state 13
    TOK_TRUE        shift, and go to state 14
    TOK_FALSE       shift, and go to state 15
    TOK_NIL         shift, and go to state 16
    TOK_MINUS       shift, and go to state 17
    TOK_DBL_PLUS    shift, and go to state 18
    TOK_DBL_MINUS   shift, and go to state 19
    TOK_L_CURLY_BR  shift, and go to state 20
    TOK_R_CURLY_BR  shift, and go to state 153
    TOK_L_BR        shift, and go to state 21
    TOK_L_PARENTH   shift, and go to state 22
    TOK_SEMICOLON   shift, and go to state 23
    TOK_DBL_COLON   shift, and go to state 24
    TOK_ID          shift, and go to state 25
    TOK_INT         shift, and go to state 26
    TOK_FLOAT       shift, and go to state 27
    TOK_STRING      shift, and go to state 28

    statement         go to state 154
    assignexpr        go to state 30
    expression        go to state 31
    term              go to state 32
    primary           go to state 33
    lvalue            go to state 34
    member            go to state 35
    call              go to state 36
    objectdef         go to state 37
    block             go to state 38
    funcprefix        go to state 39
    funcdef           go to state 40
    const             go to state 41
    ifprefix          go to state 42
    if_statement      go to state 43
    ifelse_statement  go to state 44
    whilestart        go to state 45
    while_statement   go to state 46
    forprefix         go to state 47
    for_statement     go to state 48
    return_statement  go to state 49


State 113

   20 expression: expression • TOK_PLUS expression
   21           | expression • TOK_MINUS expression
   22           | expression • TOK_MULTIPLY expression
   23           | expression • TOK_DIVIDE expression
   24           | expression • TOK_MODULO expression
   25           | expression • TOK_GREATER expression
   26           | expression • TOK_LESS expression
   27           | expression • TOK_GR_EQUAL expression
   28           | expression • TOK_LS_EQUAL expression
   29           | expression • TOK_EQUAL expression
   30           | expression • TOK_N_EQUAL expression
   32           | expression • TOK_AND $@1 M expression
   34           | expression • TOK_OR $@2 M expression
   67 indexedelem: TOK_L_CURLY_BR expression • TOK_COLON expression TOK_R_CURLY_BR

    TOK_AND       shift, and go to state 75
    TOK_OR        shift, and go to state 76
    TOK_PLUS      shift, and go to state 77
    TOK_MINUS     shift, and go to state 78
    TOK_MULTIPLY  shift, and go to state 79
    TOK_DIVIDE    shift, and go to state 80
    TOK_MODULO    shift, and go to state 81
    TOK_EQUAL     shift, and go to state 82
    TOK_N_EQUAL   shift, and go to state 83
    TOK_GREATER   shift, and go to state 84
    TOK_LESS      shift, and go to state 85
    TOK_GR_EQUAL  shift, and go to state 86
    TOK_LS_EQUAL  shift, and go to state 87
    TOK_COLON     shift, and go to state 155


State 114

   70 objectdef: TOK_L_BR elist TOK_R_BR •

    $default  reduce using rule 70 (objectdef)


State 115

   18 assignexpr: • lvalue TOK_ASSIGN expression
   19 expression: • assignexpr
   20           | • expression TOK_PLUS expression
   21           | • expression TOK_MINUS expression
   22           | • expression TOK_MULTIPLY expression
   23           | • expression TOK_DIVIDE expression
   24           | • expression TOK_MODULO expression
   25           | • expression TOK_GREATER expression
   26           | • expression TOK_LESS expression
   27           | • expression TOK_GR_EQUAL expression
   28           | • expression TOK_LS_EQUAL expression
   29           | • expression TOK_EQUAL expression
   30           | • expression TOK_N_EQUAL expression
   32           | • expression TOK_AND $@1 M expression
   34           | • expression TOK_OR $@2 M expression
   35           | • term
   36 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   37     | • TOK_MINUS expression
   38     | • TOK_NOT expression
   39     | • TOK_DBL_PLUS lvalue
   40     | • lvalue TOK_DBL_PLUS
   41     | • TOK_DBL_MINUS lvalue
   42     | • lvalue TOK_DBL_MINUS
   43     | • primary
   44 primary: • lvalue
   45        | • call
   46        | • objectdef
   47        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   48        | • const
   49 lvalue: • TOK_ID
   50       | • TOK_LOCAL TOK_ID
   51       | • TOK_DBL_COLON TOK_ID
   52       | • member
   53 member: • lvalue TOK_DOT TOK_ID
   54       | • lvalue TOK_L_BR expression TOK_R_BR
   55       | • call TOK_DOT TOK_ID
   56       | • call TOK_L_BR expression TOK_R_BR
   57 call: • call normcall
   58     | • lvalue callsuffix
   59     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   64 elist: elist TOK_COMMA • expression
   70 objectdef: • TOK_L_BR elist TOK_R_BR
   71          | • TOK_L_BR indexed TOK_R_BR
   81 const: • TOK_INT
   82      | • TOK_FLOAT
   83      | • TOK_STRING
   84      | • TOK_NIL
   85      | • TOK_TRUE
   86      | • TOK_FALSE

    TOK_NOT        shift, and go to state 12
    TOK_LOCAL      shift, and go to state 13
    TOK_TRUE       shift, and go to state 14
    TOK_FALSE      shift, and go to state 15
    TOK_NIL        shift, and go to state 16
    TOK_MINUS      shift, and go to state 17
    TOK_DBL_PLUS   shift, and go to state 18
    TOK_DBL_MINUS  shift, and go to state 19
    TOK_L_BR       shift, and go to state 21
    TOK_L_PARENTH  shift, and go to state 22
    TOK_DBL_COLON  shift, and go to state 24
    TOK_ID         shift, and go to state 25
    TOK_INT        shift, and go to state 26
    TOK_FLOAT      shift, and go to state 27
    TOK_STRING     shift, and go to state 28

    assignexpr  go to state 30
    expression  go to state 156
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 116

   71 objectdef: TOK_L_BR indexed TOK_R_BR •

    $default  reduce using rule 71 (objectdef)


State 117

   67 indexedelem: • TOK_L_CURLY_BR expression TOK_COLON expression TOK_R_CURLY_BR
   69 indexed: indexed TOK_COMMA • indexedelem

    TOK_L_CURLY_BR  shift, and go to state 67

    indexedelem  go to state 157


State 118

   36 term: TOK_L_PARENTH expression TOK_R_PARENTH •

    $default  reduce using rule 36 (term)


State 119

   47 primary: TOK_L_PARENTH funcdef TOK_R_PARENTH •  [TOK_AND, TOK_OR, TOK_PLUS, TOK_MINUS, TOK_MULTIPLY, TOK_DIVIDE, TOK_MODULO, TOK_EQUAL, TOK_N_EQUAL, TOK_GREATER, TOK_LESS, TOK_GR_EQUAL, TOK_LS_EQUAL, TOK_R_CURLY_BR, TOK_R_BR, TOK_R_PARENTH, TOK_SEMICOLON, TOK_COMMA, TOK_COLON]
   59 call: TOK_L_PARENTH funcdef TOK_R_PARENTH • normcall
   62 normcall: • TOK_L_PARENTH elist TOK_R_PARENTH

    TOK_L_PARENTH  shift, and go to state 93

    $default  reduce using rule 47 (primary)

    normcall  go to state 158


State 120

   17 M: ε •
   32 expression: expression TOK_AND $@1 • M expression

    $default  reduce using rule 17 (M)

    M  go to state 159


State 121

   17 M: ε •
   34 expression: expression TOK_OR $@2 • M expression

    $default  reduce using rule 17 (M)

    M  go to state 160


State 122

   20 expression: expression • TOK_PLUS expression
   20           | expression TOK_PLUS expression •  [TOK_AND, TOK_OR, TOK_PLUS, TOK_MINUS, TOK_EQUAL, TOK_N_EQUAL, TOK_GREATER, TOK_LESS, TOK_GR_EQUAL, TOK_LS_EQUAL, TOK_R_CURLY_BR, TOK_R_BR, TOK_R_PARENTH, TOK_SEMICOLON, TOK_COMMA, TOK_COLON]
   21           | expression • TOK_MINUS expression
   22           | expression • TOK_MULTIPLY expression
   23           | expression • TOK_DIVIDE expression
   24           | expression • TOK_MODULO expression
   25           | expression • TOK_GREATER expression
   26           | expression • TOK_LESS expression
   27           | expression • TOK_GR_EQUAL expression
   28           | expression • TOK_LS_EQUAL expression
   29           | expression • TOK_EQUAL expression
   30           | expression • TOK_N_EQUAL expression
   32           | expression • TOK_AND $@1 M expression
   34           | expression • TOK_OR $@2 M expression

    TOK_MULTIPLY  shift, and go to state 79
    TOK_DIVIDE    shift, and go to state 80
    TOK_MODULO    shift, and go to state 81

    $default  reduce using rule 20 (expression)

    Conflict between rule 20 and token TOK_AND resolved as reduce (TOK_AND < TOK_PLUS).
    Conflict between rule 20 and token TOK_OR resolved as reduce (TOK_OR < TOK_PLUS).
    Conflict between rule 20 and token TOK_PLUS resolved as reduce (%left TOK_PLUS).
    Conflict between rule 20 and token TOK_MINUS resolved as reduce (%left TOK_MINUS).
    Conflict between rule 20 and token TOK_MULTIPLY resolved as shift (TOK_PLUS < TOK_MULTIPLY).
    Conflict between rule 20 and token TOK_DIVIDE resolved as shift (TOK_PLUS < TOK_DIVIDE).
    Conflict between rule 20 and token TOK_MODULO resolved as shift (TOK_PLUS < TOK_MODULO).
    Conflict between rule 20 and token TOK_EQUAL resolved as reduce (TOK_EQUAL < TOK_PLUS).
    Conflict between rule 20 and token TOK_N_EQUAL resolved as reduce (TOK_N_EQUAL < TOK_PLUS).
    Conflict between rule 20 and token TOK_GREATER resolved as reduce (TOK_GREATER < TOK_PLUS).
    Conflict between rule 20 and token TOK_LESS resolved as reduce (TOK_LESS < TOK_PLUS).
    Conflict between rule 20 and token TOK_GR_EQUAL resolved as reduce (TOK_GR_EQUAL < TOK_PLUS).
    Conflict between rule 20 and token TOK_LS_EQUAL resolved as reduce (TOK_LS_EQUAL < TOK_PLUS).


State 123

   20 expression: expression • TOK_PLUS expression
   21           | expression • TOK_MINUS expression
   21           | expression TOK_MINUS expression •  [TOK_AND, TOK_OR, TOK_PLUS, TOK_MINUS, TOK_EQUAL, TOK_N_EQUAL, TOK_GREATER, TOK_LESS, TOK_GR_EQUAL, TOK_LS_EQUAL, TOK_R_CURLY_BR, TOK_R_BR, TOK_R_PARENTH, TOK_SEMICOLON, TOK_COMMA, TOK_COLON]
   22           | expression • TOK_MULTIPLY expression
   23           | expression • TOK_DIVIDE expression
   24           | expression • TOK_MODULO expression
   25           | expression • TOK_GREATER expression
   26           | expression • TOK_LESS expression
   27           | expression • TOK_GR_EQUAL expression
   28           | expression • TOK_LS_EQUAL expression
   29           | expression • TOK_EQUAL expression
   30           | expression • TOK_N_EQUAL expression
   32           | expression • TOK_AND $@1 M expression
   34           | expression • TOK_OR $@2 M expression

    TOK_MULTIPLY  shift, and go to state 79
    TOK_DIVIDE    shift, and go to state 80
    TOK_MODULO    shift, and go to state 81

    $default  reduce using rule 21 (expression)

    Conflict between rule 21 and token TOK_AND resolved as reduce (TOK_AND < TOK_MINUS).
    Conflict between rule 21 and token TOK_OR resolved as reduce (TOK_OR < TOK_MINUS).
    Conflict between rule 21 and token TOK_PLUS resolved as reduce (%left TOK_PLUS).
    Conflict between rule 21 and token TOK_MINUS resolved as reduce (%left TOK_MINUS).
    Conflict between rule 21 and token TOK_MULTIPLY resolved as shift (TOK_MINUS < TOK_MULTIPLY).
    Conflict between rule 21 and token TOK_DIVIDE resolved as shift (TOK_MINUS < TOK_DIVIDE).
    Conflict between rule 21 and token TOK_MODULO resolved as shift (TOK_MINUS < TOK_MODULO).
    Conflict between rule 21 and token TOK_EQUAL resolved as reduce (TOK_EQUAL < TOK_MINUS).
    Conflict between rule 21 and token TOK_N_EQUAL resolved as reduce (TOK_N_EQUAL < TOK_MINUS).
    Conflict between rule 21 and token TOK_GREATER resolved as reduce (TOK_GREATER < TOK_MINUS).
    Conflict between rule 21 and token TOK_LESS resolved as reduce (TOK_LESS < TOK_MINUS).
    Conflict between rule 21 and token TOK_GR_EQUAL resolved as reduce (TOK_GR_EQUAL < TOK_MINUS).
    Conflict between rule 21 and token TOK_LS_EQUAL resolved as reduce (TOK_LS_EQUAL < TOK_MINUS).


State 124

   20 expression: expression • TOK_PLUS expression
   21           | expression • TOK_MINUS expression
   22           | expression • TOK_MULTIPLY expression
   22           | expression TOK_MULTIPLY expression •  [TOK_AND, TOK_OR, TOK_PLUS, TOK_MINUS, TOK_MULTIPLY, TOK_DIVIDE, TOK_MODULO, TOK_EQUAL, TOK_N_EQUAL, TOK_GREATER, TOK_LESS, TOK_GR_EQUAL, TOK_LS_EQUAL, TOK_R_CURLY_BR, TOK_R_BR, TOK_R_PARENTH, TOK_SEMICOLON, TOK_COMMA, TOK_COLON]
   23           | expression • TOK_DIVIDE expression
   24           | expression • TOK_MODULO expression
   25           | expression • TOK_GREATER expression
   26           | expression • TOK_LESS expression
   27           | expression • TOK_GR_EQUAL expression
   28           | expression • TOK_LS_EQUAL expression
   29           | expression • TOK_EQUAL expression
   30           | expression • TOK_N_EQUAL expression
   32           | expression • TOK_AND $@1 M expression
   34           | expression • TOK_OR $@2 M expression

    $default  reduce using rule 22 (expression)

    Conflict between rule 22 and token TOK_AND resolved as reduce (TOK_AND < TOK_MULTIPLY).
    Conflict between rule 22 and token TOK_OR resolved as reduce (TOK_OR < TOK_MULTIPLY).
    Conflict between rule 22 and token TOK_PLUS resolved as reduce (TOK_PLUS < TOK_MULTIPLY).
    Conflict between rule 22 and token TOK_MINUS resolved as reduce (TOK_MINUS < TOK_MULTIPLY).
    Conflict between rule 22 and token TOK_MULTIPLY resolved as reduce (%left TOK_MULTIPLY).
    Conflict between rule 22 and token TOK_DIVIDE resolved as reduce (%left TOK_DIVIDE).
    Conflict between rule 22 and token TOK_MODULO resolved as reduce (%left TOK_MODULO).
    Conflict between rule 22 and token TOK_EQUAL resolved as reduce (TOK_EQUAL < TOK_MULTIPLY).
    Conflict between rule 22 and token TOK_N_EQUAL resolved as reduce (TOK_N_EQUAL < TOK_MULTIPLY).
    Conflict between rule 22 and token TOK_GREATER resolved as reduce (TOK_GREATER < TOK_MULTIPLY).
    Conflict between rule 22 and token TOK_LESS resolved as reduce (TOK_LESS < TOK_MULTIPLY).
    Conflict between rule 22 and token TOK_GR_EQUAL resolved as reduce (TOK_GR_EQUAL < TOK_MULTIPLY).
    Conflict between rule 22 and token TOK_LS_EQUAL resolved as reduce (TOK_LS_EQUAL < TOK_MULTIPLY).


State 125

   20 expression: expression • TOK_PLUS expression
   21           | expression • TOK_MINUS expression
   22           | expression • TOK_MULTIPLY expression
   23           | expression • TOK_DIVIDE expression
   23           | expression TOK_DIVIDE expression •  [TOK_AND, TOK_OR, TOK_PLUS, TOK_MINUS, TOK_MULTIPLY, TOK_DIVIDE, TOK_MODULO, TOK_EQUAL, TOK_N_EQUAL, TOK_GREATER, TOK_LESS, TOK_GR_EQUAL, TOK_LS_EQUAL, TOK_R_CURLY_BR, TOK_R_BR, TOK_R_PARENTH, TOK_SEMICOLON, TOK_COMMA, TOK_COLON]
   24           | expression • TOK_MODULO expression
   25           | expression • TOK_GREATER expression
   26           | expression • TOK_LESS expression
   27           | expression • TOK_GR_EQUAL expression
   28           | expression • TOK_LS_EQUAL expression
   29           | expression • TOK_EQUAL expression
   30           | expression • TOK_N_EQUAL expression
   32           | expression • TOK_AND $@1 M expression
   34           | expression • TOK_OR $@2 M expression

    $default  reduce using rule 23 (expression)

    Conflict between rule 23 and token TOK_AND resolved as reduce (TOK_AND < TOK_DIVIDE).
    Conflict between rule 23 and token TOK_OR resolved as reduce (TOK_OR < TOK_DIVIDE).
    Conflict between rule 23 and token TOK_PLUS resolved as reduce (TOK_PLUS < TOK_DIVIDE).
    Conflict between rule 23 and token TOK_MINUS resolved as reduce (TOK_MINUS < TOK_DIVIDE).
    Conflict between rule 23 and token TOK_MULTIPLY resolved as reduce (%left TOK_MULTIPLY).
    Conflict between rule 23 and token TOK_DIVIDE resolved as reduce (%left TOK_DIVIDE).
    Conflict between rule 23 and token TOK_MODULO resolved as reduce (%left TOK_MODULO).
    Conflict between rule 23 and token TOK_EQUAL resolved as reduce (TOK_EQUAL < TOK_DIVIDE).
    Conflict between rule 23 and token TOK_N_EQUAL resolved as reduce (TOK_N_EQUAL < TOK_DIVIDE).
    Conflict between rule 23 and token TOK_GREATER resolved as reduce (TOK_GREATER < TOK_DIVIDE).
    Conflict between rule 23 and token TOK_LESS resolved as reduce (TOK_LESS < TOK_DIVIDE).
    Conflict between rule 23 and token TOK_GR_EQUAL resolved as reduce (TOK_GR_EQUAL < TOK_DIVIDE).
    Conflict between rule 23 and token TOK_LS_EQUAL resolved as reduce (TOK_LS_EQUAL < TOK_DIVIDE).


State 126

   20 expression: expression • TOK_PLUS expression
   21           | expression • TOK_MINUS expression
   22           | expression • TOK_MULTIPLY expression
   23           | expression • TOK_DIVIDE expression
   24           | expression • TOK_MODULO expression
   24           | expression TOK_MODULO expression •  [TOK_AND, TOK_OR, TOK_PLUS, TOK_MINUS, TOK_MULTIPLY, TOK_DIVIDE, TOK_MODULO, TOK_EQUAL, TOK_N_EQUAL, TOK_GREATER, TOK_LESS, TOK_GR_EQUAL, TOK_LS_EQUAL, TOK_R_CURLY_BR, TOK_R_BR, TOK_R_PARENTH, TOK_SEMICOLON, TOK_COMMA, TOK_COLON]
   25           | expression • TOK_GREATER expression
   26           | expression • TOK_LESS expression
   27           | expression • TOK_GR_EQUAL expression
   28           | expression • TOK_LS_EQUAL expression
   29           | expression • TOK_EQUAL expression
   30           | expression • TOK_N_EQUAL expression
   32           | expression • TOK_AND $@1 M expression
   34           | expression • TOK_OR $@2 M expression

    $default  reduce using rule 24 (expression)

    Conflict between rule 24 and token TOK_AND resolved as reduce (TOK_AND < TOK_MODULO).
    Conflict between rule 24 and token TOK_OR resolved as reduce (TOK_OR < TOK_MODULO).
    Conflict between rule 24 and token TOK_PLUS resolved as reduce (TOK_PLUS < TOK_MODULO).
    Conflict between rule 24 and token TOK_MINUS resolved as reduce (TOK_MINUS < TOK_MODULO).
    Conflict between rule 24 and token TOK_MULTIPLY resolved as reduce (%left TOK_MULTIPLY).
    Conflict between rule 24 and token TOK_DIVIDE resolved as reduce (%left TOK_DIVIDE).
    Conflict between rule 24 and token TOK_MODULO resolved as reduce (%left TOK_MODULO).
    Conflict between rule 24 and token TOK_EQUAL resolved as reduce (TOK_EQUAL < TOK_MODULO).
    Conflict between rule 24 and token TOK_N_EQUAL resolved as reduce (TOK_N_EQUAL < TOK_MODULO).
    Conflict between rule 24 and token TOK_GREATER resolved as reduce (TOK_GREATER < TOK_MODULO).
    Conflict between rule 24 and token TOK_LESS resolved as reduce (TOK_LESS < TOK_MODULO).
    Conflict between rule 24 and token TOK_GR_EQUAL resolved as reduce (TOK_GR_EQUAL < TOK_MODULO).
    Conflict between rule 24 and token TOK_LS_EQUAL resolved as reduce (TOK_LS_EQUAL < TOK_MODULO).


State 127

   20 expression: expression • TOK_PLUS expression
   21           | expression • TOK_MINUS expression
   22           | expression • TOK_MULTIPLY expression
   23           | expression • TOK_DIVIDE expression
   24           | expression • TOK_MODULO expression
   25           | expression • TOK_GREATER expression
   26           | expression • TOK_LESS expression
   27           | expression • TOK_GR_EQUAL expression
   28           | expression • TOK_LS_EQUAL expression
   29           | expression • TOK_EQUAL expression
   29           | expression TOK_EQUAL expression •  [TOK_AND, TOK_OR, TOK_R_CURLY_BR, TOK_R_BR, TOK_R_PARENTH, TOK_SEMICOLON, TOK_COMMA, TOK_COLON]
   30           | expression • TOK_N_EQUAL expression
   32           | expression • TOK_AND $@1 M expression
   34           | expression • TOK_OR $@2 M expression

    TOK_PLUS      shift, and go to state 77
    TOK_MINUS     shift, and go to state 78
    TOK_MULTIPLY  shift, and go to state 79
    TOK_DIVIDE    shift, and go to state 80
    TOK_MODULO    shift, and go to state 81
    TOK_GREATER   shift, and go to state 84
    TOK_LESS      shift, and go to state 85
    TOK_GR_EQUAL  shift, and go to state 86
    TOK_LS_EQUAL  shift, and go to state 87

    TOK_EQUAL    error (nonassociative)
    TOK_N_EQUAL  error (nonassociative)

    $default  reduce using rule 29 (expression)

    Conflict between rule 29 and token TOK_AND resolved as reduce (TOK_AND < TOK_EQUAL).
    Conflict between rule 29 and token TOK_OR resolved as reduce (TOK_OR < TOK_EQUAL).
    Conflict between rule 29 and token TOK_PLUS resolved as shift (TOK_EQUAL < TOK_PLUS).
    Conflict between rule 29 and token TOK_MINUS resolved as shift (TOK_EQUAL < TOK_MINUS).
    Conflict between rule 29 and token TOK_MULTIPLY resolved as shift (TOK_EQUAL < TOK_MULTIPLY).
    Conflict between rule 29 and token TOK_DIVIDE resolved as shift (TOK_EQUAL < TOK_DIVIDE).
    Conflict between rule 29 and token TOK_MODULO resolved as shift (TOK_EQUAL < TOK_MODULO).
    Conflict between rule 29 and token TOK_EQUAL resolved as an error (%nonassoc TOK_EQUAL).
    Conflict between rule 29 and token TOK_N_EQUAL resolved as an error (%nonassoc TOK_N_EQUAL).
    Conflict between rule 29 and token TOK_GREATER resolved as shift (TOK_EQUAL < TOK_GREATER).
    Conflict between rule 29 and token TOK_LESS resolved as shift (TOK_EQUAL < TOK_LESS).
    Conflict between rule 29 and token TOK_GR_EQUAL resolved as shift (TOK_EQUAL < TOK_GR_EQUAL).
    Conflict between rule 29 and token TOK_LS_EQUAL resolved as shift (TOK_EQUAL < TOK_LS_EQUAL).


State 128

   20 expression: expression • TOK_PLUS expression
   21           | expression • TOK_MINUS expression
   22           | expression • TOK_MULTIPLY expression
   23           | expression • TOK_DIVIDE expression
   24           | expression • TOK_MODULO expression
   25           | expression • TOK_GREATER expression
   26           | expression • TOK_LESS expression
   27           | expression • TOK_GR_EQUAL expression
   28           | expression • TOK_LS_EQUAL expression
   29           | expression • TOK_EQUAL expression
   30           | expression • TOK_N_EQUAL expression
   30           | expression TOK_N_EQUAL expression •  [TOK_AND, TOK_OR, TOK_R_CURLY_BR, TOK_R_BR, TOK_R_PARENTH, TOK_SEMICOLON, TOK_COMMA, TOK_COLON]
   32           | expression • TOK_AND $@1 M expression
   34           | expression • TOK_OR $@2 M expression

    TOK_PLUS      shift, and go to state 77
    TOK_MINUS     shift, and go to state 78
    TOK_MULTIPLY  shift, and go to state 79
    TOK_DIVIDE    shift, and go to state 80
    TOK_MODULO    shift, and go to state 81
    TOK_GREATER   shift, and go to state 84
    TOK_LESS      shift, and go to state 85
    TOK_GR_EQUAL  shift, and go to state 86
    TOK_LS_EQUAL  shift, and go to state 87

    TOK_EQUAL    error (nonassociative)
    TOK_N_EQUAL  error (nonassociative)

    $default  reduce using rule 30 (expression)

    Conflict between rule 30 and token TOK_AND resolved as reduce (TOK_AND < TOK_N_EQUAL).
    Conflict between rule 30 and token TOK_OR resolved as reduce (TOK_OR < TOK_N_EQUAL).
    Conflict between rule 30 and token TOK_PLUS resolved as shift (TOK_N_EQUAL < TOK_PLUS).
    Conflict between rule 30 and token TOK_MINUS resolved as shift (TOK_N_EQUAL < TOK_MINUS).
    Conflict between rule 30 and token TOK_MULTIPLY resolved as shift (TOK_N_EQUAL < TOK_MULTIPLY).
    Conflict between rule 30 and token TOK_DIVIDE resolved as shift (TOK_N_EQUAL < TOK_DIVIDE).
    Conflict between rule 30 and token TOK_MODULO resolved as shift (TOK_N_EQUAL < TOK_MODULO).
    Conflict between rule 30 and token TOK_EQUAL resolved as an error (%nonassoc TOK_EQUAL).
    Conflict between rule 30 and token TOK_N_EQUAL resolved as an error (%nonassoc TOK_N_EQUAL).
    Conflict between rule 30 and token TOK_GREATER resolved as shift (TOK_N_EQUAL < TOK_GREATER).
    Conflict between rule 30 and token TOK_LESS resolved as shift (TOK_N_EQUAL < TOK_LESS).
    Conflict between rule 30 and token TOK_GR_EQUAL resolved as shift (TOK_N_EQUAL < TOK_GR_EQUAL).
    Conflict between rule 30 and token TOK_LS_EQUAL resolved as shift (TOK_N_EQUAL < TOK_LS_EQUAL).


State 129

   20 expression: expression • TOK_PLUS expression
   21           | expression • TOK_MINUS expression
   22           | expression • TOK_MULTIPLY expression
   23           | expression • TOK_DIVIDE expression
   24           | expression • TOK_MODULO expression
   25           | expression • TOK_GREATER expression
   25           | expression TOK_GREATER expression •  [TOK_AND, TOK_OR, TOK_EQUAL, TOK_N_EQUAL, TOK_R_CURLY_BR, TOK_R_BR, TOK_R_PARENTH, TOK_SEMICOLON, TOK_COMMA, TOK_COLON]
   26           | expression • TOK_LESS expression
   27           | expression • TOK_GR_EQUAL expression
   28           | expression • TOK_LS_EQUAL expression
   29           | expression • TOK_EQUAL expression
   30           | expression • TOK_N_EQUAL expression
   32           | expression • TOK_AND $@1 M expression
   34           | expression • TOK_OR $@2 M expression

    TOK_PLUS      shift, and go to state 77
    TOK_MINUS     shift, and go to state 78
    TOK_MULTIPLY  shift, and go to state 79
    TOK_DIVIDE    shift, and go to state 80
    TOK_MODULO    shift, and go to state 81

    TOK_GREATER   error (nonassociative)
    TOK_LESS      error (nonassociative)
    TOK_GR_EQUAL  error (nonassociative)
    TOK_LS_EQUAL  error (nonassociative)

    $default  reduce using rule 25 (expression)

    Conflict between rule 25 and token TOK_AND resolved as reduce (TOK_AND < TOK_GREATER).
    Conflict between rule 25 and token TOK_OR resolved as reduce (TOK_OR < TOK_GREATER).
    Conflict between rule 25 and token TOK_PLUS resolved as shift (TOK_GREATER < TOK_PLUS).
    Conflict between rule 25 and token TOK_MINUS resolved as shift (TOK_GREATER < TOK_MINUS).
    Conflict between rule 25 and token TOK_MULTIPLY resolved as shift (TOK_GREATER < TOK_MULTIPLY).
    Conflict between rule 25 and token TOK_DIVIDE resolved as shift (TOK_GREATER < TOK_DIVIDE).
    Conflict between rule 25 and token TOK_MODULO resolved as shift (TOK_GREATER < TOK_MODULO).
    Conflict between rule 25 and token TOK_EQUAL resolved as reduce (TOK_EQUAL < TOK_GREATER).
    Conflict between rule 25 and token TOK_N_EQUAL resolved as reduce (TOK_N_EQUAL < TOK_GREATER).
    Conflict between rule 25 and token TOK_GREATER resolved as an error (%nonassoc TOK_GREATER).
    Conflict between rule 25 and token TOK_LESS resolved as an error (%nonassoc TOK_LESS).
    Conflict between rule 25 and token TOK_GR_EQUAL resolved as an error (%nonassoc TOK_GR_EQUAL).
    Conflict between rule 25 and token TOK_LS_EQUAL resolved as an error (%nonassoc TOK_LS_EQUAL).


State 130

   20 expression: expression • TOK_PLUS expression
   21           | expression • TOK_MINUS expression
   22           | expression • TOK_MULTIPLY expression
   23           | expression • TOK_DIVIDE expression
   24           | expression • TOK_MODULO expression
   25           | expression • TOK_GREATER expression
   26           | expression • TOK_LESS expression
   26           | expression TOK_LESS expression •  [TOK_AND, TOK_OR, TOK_EQUAL, TOK_N_EQUAL, TOK_R_CURLY_BR, TOK_R_BR, TOK_R_PARENTH, TOK_SEMICOLON, TOK_COMMA, TOK_COLON]
   27           | expression • TOK_GR_EQUAL expression
   28           | expression • TOK_LS_EQUAL expression
   29           | expression • TOK_EQUAL expression
   30           | expression • TOK_N_EQUAL expression
   32           | expression • TOK_AND $@1 M expression
   34           | expression • TOK_OR $@2 M expression

    TOK_PLUS      shift, and go to state 77
    TOK_MINUS     shift, and go to state 78
    TOK_MULTIPLY  shift, and go to state 79
    TOK_DIVIDE    shift, and go to state 80
    TOK_MODULO    shift, and go to state 81

    TOK_GREATER   error (nonassociative)
    TOK_LESS      error (nonassociative)
    TOK_GR_EQUAL  error (nonassociative)
    TOK_LS_EQUAL  error (nonassociative)

    $default  reduce using rule 26 (expression)

    Conflict between rule 26 and token TOK_AND resolved as reduce (TOK_AND < TOK_LESS).
    Conflict between rule 26 and token TOK_OR resolved as reduce (TOK_OR < TOK_LESS).
    Conflict between rule 26 and token TOK_PLUS resolved as shift (TOK_LESS < TOK_PLUS).
    Conflict between rule 26 and token TOK_MINUS resolved as shift (TOK_LESS < TOK_MINUS).
    Conflict between rule 26 and token TOK_MULTIPLY resolved as shift (TOK_LESS < TOK_MULTIPLY).
    Conflict between rule 26 and token TOK_DIVIDE resolved as shift (TOK_LESS < TOK_DIVIDE).
    Conflict between rule 26 and token TOK_MODULO resolved as shift (TOK_LESS < TOK_MODULO).
    Conflict between rule 26 and token TOK_EQUAL resolved as reduce (TOK_EQUAL < TOK_LESS).
    Conflict between rule 26 and token TOK_N_EQUAL resolved as reduce (TOK_N_EQUAL < TOK_LESS).
    Conflict between rule 26 and token TOK_GREATER resolved as an error (%nonassoc TOK_GREATER).
    Conflict between rule 26 and token TOK_LESS resolved as an error (%nonassoc TOK_LESS).
    Conflict between rule 26 and token TOK_GR_EQUAL resolved as an error (%nonassoc TOK_GR_EQUAL).
    Conflict between rule 26 and token TOK_LS_EQUAL resolved as an error (%nonassoc TOK_LS_EQUAL).


State 131

   20 expression: expression • TOK_PLUS expression
   21           | expression • TOK_MINUS expression
   22           | expression • TOK_MULTIPLY expression
   23           | expression • TOK_DIVIDE expression
   24           | expression • TOK_MODULO expression
   25           | expression • TOK_GREATER expression
   26           | expression • TOK_LESS expression
   27           | expression • TOK_GR_EQUAL expression
   27           | expression TOK_GR_EQUAL expression •  [TOK_AND, TOK_OR, TOK_EQUAL, TOK_N_EQUAL, TOK_R_CURLY_BR, TOK_R_BR, TOK_R_PARENTH, TOK_SEMICOLON, TOK_COMMA, TOK_COLON]
   28           | expression • TOK_LS_EQUAL expression
   29           | expression • TOK_EQUAL expression
   30           | expression • TOK_N_EQUAL expression
   32           | expression • TOK_AND $@1 M expression
   34           | expression • TOK_OR $@2 M expression

    TOK_PLUS      shift, and go to state 77
    TOK_MINUS     shift, and go to state 78
    TOK_MULTIPLY  shift, and go to state 79
    TOK_DIVIDE    shift, and go to state 80
    TOK_MODULO    shift, and go to state 81

    TOK_GREATER   error (nonassociative)
    TOK_LESS      error (nonassociative)
    TOK_GR_EQUAL  error (nonassociative)
    TOK_LS_EQUAL  error (nonassociative)

    $default  reduce using rule 27 (expression)

    Conflict between rule 27 and token TOK_AND resolved as reduce (TOK_AND < TOK_GR_EQUAL).
    Conflict between rule 27 and token TOK_OR resolved as reduce (TOK_OR < TOK_GR_EQUAL).
    Conflict between rule 27 and token TOK_PLUS resolved as shift (TOK_GR_EQUAL < TOK_PLUS).
    Conflict between rule 27 and token TOK_MINUS resolved as shift (TOK_GR_EQUAL < TOK_MINUS).
    Conflict between rule 27 and token TOK_MULTIPLY resolved as shift (TOK_GR_EQUAL < TOK_MULTIPLY).
    Conflict between rule 27 and token TOK_DIVIDE resolved as shift (TOK_GR_EQUAL < TOK_DIVIDE).
    Conflict between rule 27 and token TOK_MODULO resolved as shift (TOK_GR_EQUAL < TOK_MODULO).
    Conflict between rule 27 and token TOK_EQUAL resolved as reduce (TOK_EQUAL < TOK_GR_EQUAL).
    Conflict between rule 27 and token TOK_N_EQUAL resolved as reduce (TOK_N_EQUAL < TOK_GR_EQUAL).
    Conflict between rule 27 and token TOK_GREATER resolved as an error (%nonassoc TOK_GREATER).
    Conflict between rule 27 and token TOK_LESS resolved as an error (%nonassoc TOK_LESS).
    Conflict between rule 27 and token TOK_GR_EQUAL resolved as an error (%nonassoc TOK_GR_EQUAL).
    Conflict between rule 27 and token TOK_LS_EQUAL resolved as an error (%nonassoc TOK_LS_EQUAL).


State 132

   20 expression: expression • TOK_PLUS expression
   21           | expression • TOK_MINUS expression
   22           | expression • TOK_MULTIPLY expression
   23           | expression • TOK_DIVIDE expression
   24           | expression • TOK_MODULO expression
   25           | expression • TOK_GREATER expression
   26           | expression • TOK_LESS expression
   27           | expression • TOK_GR_EQUAL expression
   28           | expression • TOK_LS_EQUAL expression
   28           | expression TOK_LS_EQUAL expression •  [TOK_AND, TOK_OR, TOK_EQUAL, TOK_N_EQUAL, TOK_R_CURLY_BR, TOK_R_BR, TOK_R_PARENTH, TOK_SEMICOLON, TOK_COMMA, TOK_COLON]
   29           | expression • TOK_EQUAL expression
   30           | expression • TOK_N_EQUAL expression
   32           | expression • TOK_AND $@1 M expression
   34           | expression • TOK_OR $@2 M expression

    TOK_PLUS      shift, and go to state 77
    TOK_MINUS     shift, and go to state 78
    TOK_MULTIPLY  shift, and go to state 79
    TOK_DIVIDE    shift, and go to state 80
    TOK_MODULO    shift, and go to state 81

    TOK_GREATER   error (nonassociative)
    TOK_LESS      error (nonassociative)
    TOK_GR_EQUAL  error (nonassociative)
    TOK_LS_EQUAL  error (nonassociative)

    $default  reduce using rule 28 (expression)

    Conflict between rule 28 and token TOK_AND resolved as reduce (TOK_AND < TOK_LS_EQUAL).
    Conflict between rule 28 and token TOK_OR resolved as reduce (TOK_OR < TOK_LS_EQUAL).
    Conflict between rule 28 and token TOK_PLUS resolved as shift (TOK_LS_EQUAL < TOK_PLUS).
    Conflict between rule 28 and token TOK_MINUS resolved as shift (TOK_LS_EQUAL < TOK_MINUS).
    Conflict between rule 28 and token TOK_MULTIPLY resolved as shift (TOK_LS_EQUAL < TOK_MULTIPLY).
    Conflict between rule 28 and token TOK_DIVIDE resolved as shift (TOK_LS_EQUAL < TOK_DIVIDE).
    Conflict between rule 28 and token TOK_MODULO resolved as shift (TOK_LS_EQUAL < TOK_MODULO).
    Conflict between rule 28 and token TOK_EQUAL resolved as reduce (TOK_EQUAL < TOK_LS_EQUAL).
    Conflict between rule 28 and token TOK_N_EQUAL resolved as reduce (TOK_N_EQUAL < TOK_LS_EQUAL).
    Conflict between rule 28 and token TOK_GREATER resolved as an error (%nonassoc TOK_GREATER).
    Conflict between rule 28 and token TOK_LESS resolved as an error (%nonassoc TOK_LESS).
    Conflict between rule 28 and token TOK_GR_EQUAL resolved as an error (%nonassoc TOK_GR_EQUAL).
    Conflict between rule 28 and token TOK_LS_EQUAL resolved as an error (%nonassoc TOK_LS_EQUAL).


State 133

   18 assignexpr: lvalue TOK_ASSIGN expression •  [TOK_R_CURLY_BR, TOK_R_BR, TOK_R_PARENTH, TOK_SEMICOLON, TOK_COMMA, TOK_COLON]
   20 expression: expression • TOK_PLUS expression
   21           | expression • TOK_MINUS expression
   22           | expression • TOK_MULTIPLY expression
   23           | expression • TOK_DIVIDE expression
   24           | expression • TOK_MODULO expression
   25           | expression • TOK_GREATER expression
   26           | expression • TOK_LESS expression
   27           | expression • TOK_GR_EQUAL expression
   28           | expression • TOK_LS_EQUAL expression
   29           | expression • TOK_EQUAL expression
   30           | expression • TOK_N_EQUAL expression
   32           | expression • TOK_AND $@1 M expression
   34           | expression • TOK_OR $@2 M expression

    TOK_AND       shift, and go to state 75
    TOK_OR        shift, and go to state 76
    TOK_PLUS      shift, and go to state 77
    TOK_MINUS     shift, and go to state 78
    TOK_MULTIPLY  shift, and go to state 79
    TOK_DIVIDE    shift, and go to state 80
    TOK_MODULO    shift, and go to state 81
    TOK_EQUAL     shift, and go to state 82
    TOK_N_EQUAL   shift, and go to state 83
    TOK_GREATER   shift, and go to state 84
    TOK_LESS      shift, and go to state 85
    TOK_GR_EQUAL  shift, and go to state 86
    TOK_LS_EQUAL  shift, and go to state 87

    $default  reduce using rule 18 (assignexpr)

    Conflict between rule 18 and token TOK_AND resolved as shift (TOK_ASSIGN < TOK_AND).
    Conflict between rule 18 and token TOK_OR resolved as shift (TOK_ASSIGN < TOK_OR).
    Conflict between rule 18 and token TOK_PLUS resolved as shift (TOK_ASSIGN < TOK_PLUS).
    Conflict between rule 18 and token TOK_MINUS resolved as shift (TOK_ASSIGN < TOK_MINUS).
    Conflict between rule 18 and token TOK_MULTIPLY resolved as shift (TOK_ASSIGN < TOK_MULTIPLY).
    Conflict between rule 18 and token TOK_DIVIDE resolved as shift (TOK_ASSIGN < TOK_DIVIDE).
    Conflict between rule 18 and token TOK_MODULO resolved as shift (TOK_ASSIGN < TOK_MODULO).
    Conflict between rule 18 and token TOK_EQUAL resolved as shift (TOK_ASSIGN < TOK_EQUAL).
    Conflict between rule 18 and token TOK_N_EQUAL resolved as shift (TOK_ASSIGN < TOK_N_EQUAL).
    Conflict between rule 18 and token TOK_GREATER resolved as shift (TOK_ASSIGN < TOK_GREATER).
    Conflict between rule 18 and token TOK_LESS resolved as shift (TOK_ASSIGN < TOK_LESS).
    Conflict between rule 18 and token TOK_GR_EQUAL resolved as shift (TOK_ASSIGN < TOK_GR_EQUAL).
    Conflict between rule 18 and token TOK_LS_EQUAL resolved as shift (TOK_ASSIGN < TOK_LS_EQUAL).


State 134

   20 expression: expression • TOK_PLUS expression
   21           | expression • TOK_MINUS expression
   22           | expression • TOK_MULTIPLY expression
   23           | expression • TOK_DIVIDE expression
   24           | expression • TOK_MODULO expression
   25           | expression • TOK_GREATER expression
   26           | expression • TOK_LESS expression
   27           | expression • TOK_GR_EQUAL expression
   28           | expression • TOK_LS_EQUAL expression
   29           | expression • TOK_EQUAL expression
   30           | expression • TOK_N_EQUAL expression
   32           | expression • TOK_AND $@1 M expression
   34           | expression • TOK_OR $@2 M expression
   54 member: lvalue TOK_L_BR expression • TOK_R_BR

    TOK_AND       shift, and go to state 75
    TOK_OR        shift, and go to state 76
    TOK_PLUS      shift, and go to state 77
    TOK_MINUS     shift, and go to state 78
    TOK_MULTIPLY  shift, and go to state 79
    TOK_DIVIDE    shift, and go to state 80
    TOK_MODULO    shift, and go to state 81
    TOK_EQUAL     shift, and go to state 82
    TOK_N_EQUAL   shift, and go to state 83
    TOK_GREATER   shift, and go to state 84
    TOK_LESS      shift, and go to state 85
    TOK_GR_EQUAL  shift, and go to state 86
    TOK_LS_EQUAL  shift, and go to state 87
    TOK_R_BR      shift, and go to state 161


State 135

   62 normcall: TOK_L_PARENTH elist • TOK_R_PARENTH
   64 elist: elist • TOK_COMMA expression

    TOK_R_PARENTH  shift, and go to state 162
    TOK_COMMA      shift, and go to state 115


State 136

   53 member: lvalue TOK_DOT TOK_ID •

    $default  reduce using rule 53 (member)


State 137

   62 normcall: • TOK_L_PARENTH elist TOK_R_PARENTH
   63 methodcall: TOK_DBL_DOT TOK_ID • normcall

    TOK_L_PARENTH  shift, and go to state 93

    normcall  go to state 163


State 138

   20 expression: expression • TOK_PLUS expression
   21           | expression • TOK_MINUS expression
   22           | expression • TOK_MULTIPLY expression
   23           | expression • TOK_DIVIDE expression
   24           | expression • TOK_MODULO expression
   25           | expression • TOK_GREATER expression
   26           | expression • TOK_LESS expression
   27           | expression • TOK_GR_EQUAL expression
   28           | expression • TOK_LS_EQUAL expression
   29           | expression • TOK_EQUAL expression
   30           | expression • TOK_N_EQUAL expression
   32           | expression • TOK_AND $@1 M expression
   34           | expression • TOK_OR $@2 M expression
   56 member: call TOK_L_BR expression • TOK_R_BR

    TOK_AND       shift, and go to state 75
    TOK_OR        shift, and go to state 76
    TOK_PLUS      shift, and go to state 77
    TOK_MINUS     shift, and go to state 78
    TOK_MULTIPLY  shift, and go to state 79
    TOK_DIVIDE    shift, and go to state 80
    TOK_MODULO    shift, and go to state 81
    TOK_EQUAL     shift, and go to state 82
    TOK_N_EQUAL   shift, and go to state 83
    TOK_GREATER   shift, and go to state 84
    TOK_LESS      shift, and go to state 85
    TOK_GR_EQUAL  shift, and go to state 86
    TOK_LS_EQUAL  shift, and go to state 87
    TOK_R_BR      shift, and go to state 164


State 139

   55 member: call TOK_DOT TOK_ID •

    $default  reduce using rule 55 (member)


State 140

   87 idlist: TOK_ID •

    $default  reduce using rule 87 (idlist)


State 141

   78 funcargs: TOK_L_PARENTH idlist • TOK_R_PARENTH
   88 idlist: idlist • TOK_COMMA TOK_ID

    TOK_R_PARENTH  shift, and go to state 165
    TOK_COMMA      shift, and go to state 166


State 142

   15 statements: • statements statement
   16           | ε •
   74 funcdef_block: TOK_L_CURLY_BR • statements TOK_R_CURLY_BR

    $default  reduce using rule 16 (statements)

    statements  go to state 167


State 143

   79 funcbody: funcdef_block •

    $default  reduce using rule 79 (funcbody)


State 144

   80 funcdef: funcprefix funcargs funcbody •

    $default  reduce using rule 80 (funcdef)


State 145

   91 elseprefix: TOK_ELSE •

    $default  reduce using rule 91 (elseprefix)


State 146

    3 statement: • expression TOK_SEMICOLON
    4          | • if_statement
    5          | • ifelse_statement
    6          | • while_statement
    7          | • for_statement
    8          | • return_statement
    9          | • TOK_BREAK TOK_SEMICOLON
   10          | • TOK_CONTINUE TOK_SEMICOLON
   11          | • block
   12          | • funcdef
   13          | • TOK_SEMICOLON
   14          | • error TOK_SEMICOLON
   18 assignexpr: • lvalue TOK_ASSIGN expression
   19 expression: • assignexpr
   20           | • expression TOK_PLUS expression
   21           | • expression TOK_MINUS expression
   22           | • expression TOK_MULTIPLY expression
   23           | • expression TOK_DIVIDE expression
   24           | • expression TOK_MODULO expression
   25           | • expression TOK_GREATER expression
   26           | • expression TOK_LESS expression
   27           | • expression TOK_GR_EQUAL expression
   28           | • expression TOK_LS_EQUAL expression
   29           | • expression TOK_EQUAL expression
   30           | • expression TOK_N_EQUAL expression
   32           | • expression TOK_AND $@1 M expression
   34           | • expression TOK_OR $@2 M expression
   35           | • term
   36 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   37     | • TOK_MINUS expression
   38     | • TOK_NOT expression
   39     | • TOK_DBL_PLUS lvalue
   40     | • lvalue TOK_DBL_PLUS
   41     | • TOK_DBL_MINUS lvalue
   42     | • lvalue TOK_DBL_MINUS
   43     | • primary
   44 primary: • lvalue
   45        | • call
   46        | • objectdef
   47        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   48        | • const
   49 lvalue: • TOK_ID
   50       | • TOK_LOCAL TOK_ID
   51       | • TOK_DBL_COLON TOK_ID
   52       | • member
   53 member: • lvalue TOK_DOT TOK_ID
   54       | • lvalue TOK_L_BR expression TOK_R_BR
   55       | • call TOK_DOT TOK_ID
   56       | • call TOK_L_BR expression TOK_R_BR
   57 call: • call normcall
   58     | • lvalue callsuffix
   59     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   70 objectdef: • TOK_L_BR elist TOK_R_BR
   71          | • TOK_L_BR indexed TOK_R_BR
   73 block: • TOK_L_CURLY_BR $@3 statements TOK_R_CURLY_BR
   76 funcprefix: • TOK_FUNCTION funcname
   77           | • TOK_FUNCTION
   80 funcdef: • funcprefix funcargs funcbody
   81 const: • TOK_INT
   82      | • TOK_FLOAT
   83      | • TOK_STRING
   84      | • TOK_NIL
   85      | • TOK_TRUE
   86      | • TOK_FALSE
   90 ifprefix: • TOK_IF TOK_L_PARENTH expression TOK_R_PARENTH
   92 if_statement: • ifprefix statement
   93 ifelse_statement: • ifprefix statement elseprefix statement
   93                 | ifprefix statement elseprefix • statement
   94 whilestart: • TOK_WHILE
   96 while_statement: • whilestart whilecond statement
   99 forprefix: • TOK_FOR TOK_L_PARENTH elist TOK_SEMICOLON M1 expression TOK_SEMICOLON
  100 for_statement: • forprefix N elist TOK_R_PARENTH N statement N
  101 return_statement: • TOK_RETURN TOK_SEMICOLON
  102                 | • TOK_RETURN expression TOK_SEMICOLON

    error           shift, and go to state 4
    TOK_IF          shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_FOR         shift, and go to state 7
    TOK_FUNCTION    shift, and go to state 8
    TOK_RETURN      shift, and go to state 9
    TOK_BREAK       shift, and go to state 10
    TOK_CONTINUE    shift, and go to state 11
    TOK_NOT         shift, and go to state 12
    TOK_LOCAL       shift, and go to state 13
    TOK_TRUE        shift, and go to state 14
    TOK_FALSE       shift, and go to state 15
    TOK_NIL         shift, and go to state 16
    TOK_MINUS       shift, and go to state 17
    TOK_DBL_PLUS    shift, and go to state 18
    TOK_DBL_MINUS   shift, and go to state 19
    TOK_L_CURLY_BR  shift, and go to state 20
    TOK_L_BR        shift, and go to state 21
    TOK_L_PARENTH   shift, and go to state 22
    TOK_SEMICOLON   shift, and go to state 23
    TOK_DBL_COLON   shift, and go to state 24
    TOK_ID          shift, and go to state 25
    TOK_INT         shift, and go to state 26
    TOK_FLOAT       shift, and go to state 27
    TOK_STRING      shift, and go to state 28

    statement         go to state 168
    assignexpr        go to state 30
    expression        go to state 31
    term              go to state 32
    primary           go to state 33
    lvalue            go to state 34
    member            go to state 35
    call              go to state 36
    objectdef         go to state 37
    block             go to state 38
    funcprefix        go to state 39
    funcdef           go to state 40
    const             go to state 41
    ifprefix          go to state 42
    if_statement      go to state 43
    ifelse_statement  go to state 44
    whilestart        go to state 45
    while_statement   go to state 46
    forprefix         go to state 47
    for_statement     go to state 48
    return_statement  go to state 49


State 147

   20 expression: expression • TOK_PLUS expression
   21           | expression • TOK_MINUS expression
   22           | expression • TOK_MULTIPLY expression
   23           | expression • TOK_DIVIDE expression
   24           | expression • TOK_MODULO expression
   25           | expression • TOK_GREATER expression
   26           | expression • TOK_LESS expression
   27           | expression • TOK_GR_EQUAL expression
   28           | expression • TOK_LS_EQUAL expression
   29           | expression • TOK_EQUAL expression
   30           | expression • TOK_N_EQUAL expression
   32           | expression • TOK_AND $@1 M expression
   34           | expression • TOK_OR $@2 M expression
   95 whilecond: TOK_L_PARENTH expression • TOK_R_PARENTH

    TOK_AND        shift, and go to state 75
    TOK_OR         shift, and go to state 76
    TOK_PLUS       shift, and go to state 77
    TOK_MINUS      shift, and go to state 78
    TOK_MULTIPLY   shift, and go to state 79
    TOK_DIVIDE     shift, and go to state 80
    TOK_MODULO     shift, and go to state 81
    TOK_EQUAL      shift, and go to state 82
    TOK_N_EQUAL    shift, and go to state 83
    TOK_GREATER    shift, and go to state 84
    TOK_LESS       shift, and go to state 85
    TOK_GR_EQUAL   shift, and go to state 86
    TOK_LS_EQUAL   shift, and go to state 87
    TOK_R_PARENTH  shift, and go to state 169


State 148

   96 while_statement: whilestart whilecond statement •

    $default  reduce using rule 96 (while_statement)


State 149

   64 elist: elist • TOK_COMMA expression
  100 for_statement: forprefix N elist • TOK_R_PARENTH N statement N

    TOK_R_PARENTH  shift, and go to state 170
    TOK_COMMA      shift, and go to state 115


State 150

   90 ifprefix: TOK_IF TOK_L_PARENTH expression TOK_R_PARENTH •

    $default  reduce using rule 90 (ifprefix)


State 151

   98 M1: ε •
   99 forprefix: TOK_FOR TOK_L_PARENTH elist TOK_SEMICOLON • M1 expression TOK_SEMICOLON

    $default  reduce using rule 98 (M1)

    M1  go to state 171


State 152

   59 call: TOK_L_PARENTH funcdef TOK_R_PARENTH • normcall
   62 normcall: • TOK_L_PARENTH elist TOK_R_PARENTH

    TOK_L_PARENTH  shift, and go to state 93

    normcall  go to state 158


State 153

   73 block: TOK_L_CURLY_BR $@3 statements TOK_R_CURLY_BR •

    $default  reduce using rule 73 (block)


State 154

   15 statements: statements statement •

    $default  reduce using rule 15 (statements)


State 155

   18 assignexpr: • lvalue TOK_ASSIGN expression
   19 expression: • assignexpr
   20           | • expression TOK_PLUS expression
   21           | • expression TOK_MINUS expression
   22           | • expression TOK_MULTIPLY expression
   23           | • expression TOK_DIVIDE expression
   24           | • expression TOK_MODULO expression
   25           | • expression TOK_GREATER expression
   26           | • expression TOK_LESS expression
   27           | • expression TOK_GR_EQUAL expression
   28           | • expression TOK_LS_EQUAL expression
   29           | • expression TOK_EQUAL expression
   30           | • expression TOK_N_EQUAL expression
   32           | • expression TOK_AND $@1 M expression
   34           | • expression TOK_OR $@2 M expression
   35           | • term
   36 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   37     | • TOK_MINUS expression
   38     | • TOK_NOT expression
   39     | • TOK_DBL_PLUS lvalue
   40     | • lvalue TOK_DBL_PLUS
   41     | • TOK_DBL_MINUS lvalue
   42     | • lvalue TOK_DBL_MINUS
   43     | • primary
   44 primary: • lvalue
   45        | • call
   46        | • objectdef
   47        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   48        | • const
   49 lvalue: • TOK_ID
   50       | • TOK_LOCAL TOK_ID
   51       | • TOK_DBL_COLON TOK_ID
   52       | • member
   53 member: • lvalue TOK_DOT TOK_ID
   54       | • lvalue TOK_L_BR expression TOK_R_BR
   55       | • call TOK_DOT TOK_ID
   56       | • call TOK_L_BR expression TOK_R_BR
   57 call: • call normcall
   58     | • lvalue callsuffix
   59     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   67 indexedelem: TOK_L_CURLY_BR expression TOK_COLON • expression TOK_R_CURLY_BR
   70 objectdef: • TOK_L_BR elist TOK_R_BR
   71          | • TOK_L_BR indexed TOK_R_BR
   81 const: • TOK_INT
   82      | • TOK_FLOAT
   83      | • TOK_STRING
   84      | • TOK_NIL
   85      | • TOK_TRUE
   86      | • TOK_FALSE

    TOK_NOT        shift, and go to state 12
    TOK_LOCAL      shift, and go to state 13
    TOK_TRUE       shift, and go to state 14
    TOK_FALSE      shift, and go to state 15
    TOK_NIL        shift, and go to state 16
    TOK_MINUS      shift, and go to state 17
    TOK_DBL_PLUS   shift, and go to state 18
    TOK_DBL_MINUS  shift, and go to state 19
    TOK_L_BR       shift, and go to state 21
    TOK_L_PARENTH  shift, and go to state 22
    TOK_DBL_COLON  shift, and go to state 24
    TOK_ID         shift, and go to state 25
    TOK_INT        shift, and go to state 26
    TOK_FLOAT      shift, and go to state 27
    TOK_STRING     shift, and go to state 28

    assignexpr  go to state 30
    expression  go to state 172
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 156

   20 expression: expression • TOK_PLUS expression
   21           | expression • TOK_MINUS expression
   22           | expression • TOK_MULTIPLY expression
   23           | expression • TOK_DIVIDE expression
   24           | expression • TOK_MODULO expression
   25           | expression • TOK_GREATER expression
   26           | expression • TOK_LESS expression
   27           | expression • TOK_GR_EQUAL expression
   28           | expression • TOK_LS_EQUAL expression
   29           | expression • TOK_EQUAL expression
   30           | expression • TOK_N_EQUAL expression
   32           | expression • TOK_AND $@1 M expression
   34           | expression • TOK_OR $@2 M expression
   64 elist: elist TOK_COMMA expression •  [TOK_R_BR, TOK_R_PARENTH, TOK_SEMICOLON, TOK_COMMA]

    TOK_AND       shift, and go to state 75
    TOK_OR        shift, and go to state 76
    TOK_PLUS      shift, and go to state 77
    TOK_MINUS     shift, and go to state 78
    TOK_MULTIPLY  shift, and go to state 79
    TOK_DIVIDE    shift, and go to state 80
    TOK_MODULO    shift, and go to state 81
    TOK_EQUAL     shift, and go to state 82
    TOK_N_EQUAL   shift, and go to state 83
    TOK_GREATER   shift, and go to state 84
    TOK_LESS      shift, and go to state 85
    TOK_GR_EQUAL  shift, and go to state 86
    TOK_LS_EQUAL  shift, and go to state 87

    $default  reduce using rule 64 (elist)


State 157

   69 indexed: indexed TOK_COMMA indexedelem •

    $default  reduce using rule 69 (indexed)


State 158

   59 call: TOK_L_PARENTH funcdef TOK_R_PARENTH normcall •

    $default  reduce using rule 59 (call)


State 159

   18 assignexpr: • lvalue TOK_ASSIGN expression
   19 expression: • assignexpr
   20           | • expression TOK_PLUS expression
   21           | • expression TOK_MINUS expression
   22           | • expression TOK_MULTIPLY expression
   23           | • expression TOK_DIVIDE expression
   24           | • expression TOK_MODULO expression
   25           | • expression TOK_GREATER expression
   26           | • expression TOK_LESS expression
   27           | • expression TOK_GR_EQUAL expression
   28           | • expression TOK_LS_EQUAL expression
   29           | • expression TOK_EQUAL expression
   30           | • expression TOK_N_EQUAL expression
   32           | • expression TOK_AND $@1 M expression
   32           | expression TOK_AND $@1 M • expression
   34           | • expression TOK_OR $@2 M expression
   35           | • term
   36 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   37     | • TOK_MINUS expression
   38     | • TOK_NOT expression
   39     | • TOK_DBL_PLUS lvalue
   40     | • lvalue TOK_DBL_PLUS
   41     | • TOK_DBL_MINUS lvalue
   42     | • lvalue TOK_DBL_MINUS
   43     | • primary
   44 primary: • lvalue
   45        | • call
   46        | • objectdef
   47        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   48        | • const
   49 lvalue: • TOK_ID
   50       | • TOK_LOCAL TOK_ID
   51       | • TOK_DBL_COLON TOK_ID
   52       | • member
   53 member: • lvalue TOK_DOT TOK_ID
   54       | • lvalue TOK_L_BR expression TOK_R_BR
   55       | • call TOK_DOT TOK_ID
   56       | • call TOK_L_BR expression TOK_R_BR
   57 call: • call normcall
   58     | • lvalue callsuffix
   59     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   70 objectdef: • TOK_L_BR elist TOK_R_BR
   71          | • TOK_L_BR indexed TOK_R_BR
   81 const: • TOK_INT
   82      | • TOK_FLOAT
   83      | • TOK_STRING
   84      | • TOK_NIL
   85      | • TOK_TRUE
   86      | • TOK_FALSE

    TOK_NOT        shift, and go to state 12
    TOK_LOCAL      shift, and go to state 13
    TOK_TRUE       shift, and go to state 14
    TOK_FALSE      shift, and go to state 15
    TOK_NIL        shift, and go to state 16
    TOK_MINUS      shift, and go to state 17
    TOK_DBL_PLUS   shift, and go to state 18
    TOK_DBL_MINUS  shift, and go to state 19
    TOK_L_BR       shift, and go to state 21
    TOK_L_PARENTH  shift, and go to state 22
    TOK_DBL_COLON  shift, and go to state 24
    TOK_ID         shift, and go to state 25
    TOK_INT        shift, and go to state 26
    TOK_FLOAT      shift, and go to state 27
    TOK_STRING     shift, and go to state 28

    assignexpr  go to state 30
    expression  go to state 173
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 160

   18 assignexpr: • lvalue TOK_ASSIGN expression
   19 expression: • assignexpr
   20           | • expression TOK_PLUS expression
   21           | • expression TOK_MINUS expression
   22           | • expression TOK_MULTIPLY expression
   23           | • expression TOK_DIVIDE expression
   24           | • expression TOK_MODULO expression
   25           | • expression TOK_GREATER expression
   26           | • expression TOK_LESS expression
   27           | • expression TOK_GR_EQUAL expression
   28           | • expression TOK_LS_EQUAL expression
   29           | • expression TOK_EQUAL expression
   30           | • expression TOK_N_EQUAL expression
   32           | • expression TOK_AND $@1 M expression
   34           | • expression TOK_OR $@2 M expression
   34           | expression TOK_OR $@2 M • expression
   35           | • term
   36 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   37     | • TOK_MINUS expression
   38     | • TOK_NOT expression
   39     | • TOK_DBL_PLUS lvalue
   40     | • lvalue TOK_DBL_PLUS
   41     | • TOK_DBL_MINUS lvalue
   42     | • lvalue TOK_DBL_MINUS
   43     | • primary
   44 primary: • lvalue
   45        | • call
   46        | • objectdef
   47        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   48        | • const
   49 lvalue: • TOK_ID
   50       | • TOK_LOCAL TOK_ID
   51       | • TOK_DBL_COLON TOK_ID
   52       | • member
   53 member: • lvalue TOK_DOT TOK_ID
   54       | • lvalue TOK_L_BR expression TOK_R_BR
   55       | • call TOK_DOT TOK_ID
   56       | • call TOK_L_BR expression TOK_R_BR
   57 call: • call normcall
   58     | • lvalue callsuffix
   59     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   70 objectdef: • TOK_L_BR elist TOK_R_BR
   71          | • TOK_L_BR indexed TOK_R_BR
   81 const: • TOK_INT
   82      | • TOK_FLOAT
   83      | • TOK_STRING
   84      | • TOK_NIL
   85      | • TOK_TRUE
   86      | • TOK_FALSE

    TOK_NOT        shift, and go to state 12
    TOK_LOCAL      shift, and go to state 13
    TOK_TRUE       shift, and go to state 14
    TOK_FALSE      shift, and go to state 15
    TOK_NIL        shift, and go to state 16
    TOK_MINUS      shift, and go to state 17
    TOK_DBL_PLUS   shift, and go to state 18
    TOK_DBL_MINUS  shift, and go to state 19
    TOK_L_BR       shift, and go to state 21
    TOK_L_PARENTH  shift, and go to state 22
    TOK_DBL_COLON  shift, and go to state 24
    TOK_ID         shift, and go to state 25
    TOK_INT        shift, and go to state 26
    TOK_FLOAT      shift, and go to state 27
    TOK_STRING     shift, and go to state 28

    assignexpr  go to state 30
    expression  go to state 174
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 161

   54 member: lvalue TOK_L_BR expression TOK_R_BR •

    $default  reduce using rule 54 (member)


State 162

   62 normcall: TOK_L_PARENTH elist TOK_R_PARENTH •

    $default  reduce using rule 62 (normcall)


State 163

   63 methodcall: TOK_DBL_DOT TOK_ID normcall •

    $default  reduce using rule 63 (methodcall)


State 164

   56 member: call TOK_L_BR expression TOK_R_BR •

    $default  reduce using rule 56 (member)


State 165

   78 funcargs: TOK_L_PARENTH idlist TOK_R_PARENTH •

    $default  reduce using rule 78 (funcargs)


State 166

   88 idlist: idlist TOK_COMMA • TOK_ID

    TOK_ID  shift, and go to state 175


State 167

    3 statement: • expression TOK_SEMICOLON
    4          | • if_statement
    5          | • ifelse_statement
    6          | • while_statement
    7          | • for_statement
    8          | • return_statement
    9          | • TOK_BREAK TOK_SEMICOLON
   10          | • TOK_CONTINUE TOK_SEMICOLON
   11          | • block
   12          | • funcdef
   13          | • TOK_SEMICOLON
   14          | • error TOK_SEMICOLON
   15 statements: statements • statement
   18 assignexpr: • lvalue TOK_ASSIGN expression
   19 expression: • assignexpr
   20           | • expression TOK_PLUS expression
   21           | • expression TOK_MINUS expression
   22           | • expression TOK_MULTIPLY expression
   23           | • expression TOK_DIVIDE expression
   24           | • expression TOK_MODULO expression
   25           | • expression TOK_GREATER expression
   26           | • expression TOK_LESS expression
   27           | • expression TOK_GR_EQUAL expression
   28           | • expression TOK_LS_EQUAL expression
   29           | • expression TOK_EQUAL expression
   30           | • expression TOK_N_EQUAL expression
   32           | • expression TOK_AND $@1 M expression
   34           | • expression TOK_OR $@2 M expression
   35           | • term
   36 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   37     | • TOK_MINUS expression
   38     | • TOK_NOT expression
   39     | • TOK_DBL_PLUS lvalue
   40     | • lvalue TOK_DBL_PLUS
   41     | • TOK_DBL_MINUS lvalue
   42     | • lvalue TOK_DBL_MINUS
   43     | • primary
   44 primary: • lvalue
   45        | • call
   46        | • objectdef
   47        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   48        | • const
   49 lvalue: • TOK_ID
   50       | • TOK_LOCAL TOK_ID
   51       | • TOK_DBL_COLON TOK_ID
   52       | • member
   53 member: • lvalue TOK_DOT TOK_ID
   54       | • lvalue TOK_L_BR expression TOK_R_BR
   55       | • call TOK_DOT TOK_ID
   56       | • call TOK_L_BR expression TOK_R_BR
   57 call: • call normcall
   58     | • lvalue callsuffix
   59     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   70 objectdef: • TOK_L_BR elist TOK_R_BR
   71          | • TOK_L_BR indexed TOK_R_BR
   73 block: • TOK_L_CURLY_BR $@3 statements TOK_R_CURLY_BR
   74 funcdef_block: TOK_L_CURLY_BR statements • TOK_R_CURLY_BR
   76 funcprefix: • TOK_FUNCTION funcname
   77           | • TOK_FUNCTION
   80 funcdef: • funcprefix funcargs funcbody
   81 const: • TOK_INT
   82      | • TOK_FLOAT
   83      | • TOK_STRING
   84      | • TOK_NIL
   85      | • TOK_TRUE
   86      | • TOK_FALSE
   90 ifprefix: • TOK_IF TOK_L_PARENTH expression TOK_R_PARENTH
   92 if_statement: • ifprefix statement
   93 ifelse_statement: • ifprefix statement elseprefix statement
   94 whilestart: • TOK_WHILE
   96 while_statement: • whilestart whilecond statement
   99 forprefix: • TOK_FOR TOK_L_PARENTH elist TOK_SEMICOLON M1 expression TOK_SEMICOLON
  100 for_statement: • forprefix N elist TOK_R_PARENTH N statement N
  101 return_statement: • TOK_RETURN TOK_SEMICOLON
  102                 | • TOK_RETURN expression TOK_SEMICOLON

    error           shift, and go to state 4
    TOK_IF          shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_FOR         shift, and go to state 7
    TOK_FUNCTION    shift, and go to state 8
    TOK_RETURN      shift, and go to state 9
    TOK_BREAK       shift, and go to state 10
    TOK_CONTINUE    shift, and go to state 11
    TOK_NOT         shift, and go to state 12
    TOK_LOCAL       shift, and go to state 13
    TOK_TRUE        shift, and go to state 14
    TOK_FALSE       shift, and go to state 15
    TOK_NIL         shift, and go to state 16
    TOK_MINUS       shift, and go to state 17
    TOK_DBL_PLUS    shift, and go to state 18
    TOK_DBL_MINUS   shift, and go to state 19
    TOK_L_CURLY_BR  shift, and go to state 20
    TOK_R_CURLY_BR  shift, and go to state 176
    TOK_L_BR        shift, and go to state 21
    TOK_L_PARENTH   shift, and go to state 22
    TOK_SEMICOLON   shift, and go to state 23
    TOK_DBL_COLON   shift, and go to state 24
    TOK_ID          shift, and go to state 25
    TOK_INT         shift, and go to state 26
    TOK_FLOAT       shift, and go to state 27
    TOK_STRING      shift, and go to state 28

    statement         go to state 154
    assignexpr        go to state 30
    expression        go to state 31
    term              go to state 32
    primary           go to state 33
    lvalue            go to state 34
    member            go to state 35
    call              go to state 36
    objectdef         go to state 37
    block             go to state 38
    funcprefix        go to state 39
    funcdef           go to state 40
    const             go to state 41
    ifprefix          go to state 42
    if_statement      go to state 43
    ifelse_statement  go to state 44
    whilestart        go to state 45
    while_statement   go to state 46
    forprefix         go to state 47
    for_statement     go to state 48
    return_statement  go to state 49


State 168

   93 ifelse_statement: ifprefix statement elseprefix statement •

    $default  reduce using rule 93 (ifelse_statement)


State 169

   95 whilecond: TOK_L_PARENTH expression TOK_R_PARENTH •

    $default  reduce using rule 95 (whilecond)


State 170

   97 N: ε •
  100 for_statement: forprefix N elist TOK_R_PARENTH • N statement N

    $default  reduce using rule 97 (N)

    N  go to state 177


State 171

   18 assignexpr: • lvalue TOK_ASSIGN expression
   19 expression: • assignexpr
   20           | • expression TOK_PLUS expression
   21           | • expression TOK_MINUS expression
   22           | • expression TOK_MULTIPLY expression
   23           | • expression TOK_DIVIDE expression
   24           | • expression TOK_MODULO expression
   25           | • expression TOK_GREATER expression
   26           | • expression TOK_LESS expression
   27           | • expression TOK_GR_EQUAL expression
   28           | • expression TOK_LS_EQUAL expression
   29           | • expression TOK_EQUAL expression
   30           | • expression TOK_N_EQUAL expression
   32           | • expression TOK_AND $@1 M expression
   34           | • expression TOK_OR $@2 M expression
   35           | • term
   36 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   37     | • TOK_MINUS expression
   38     | • TOK_NOT expression
   39     | • TOK_DBL_PLUS lvalue
   40     | • lvalue TOK_DBL_PLUS
   41     | • TOK_DBL_MINUS lvalue
   42     | • lvalue TOK_DBL_MINUS
   43     | • primary
   44 primary: • lvalue
   45        | • call
   46        | • objectdef
   47        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   48        | • const
   49 lvalue: • TOK_ID
   50       | • TOK_LOCAL TOK_ID
   51       | • TOK_DBL_COLON TOK_ID
   52       | • member
   53 member: • lvalue TOK_DOT TOK_ID
   54       | • lvalue TOK_L_BR expression TOK_R_BR
   55       | • call TOK_DOT TOK_ID
   56       | • call TOK_L_BR expression TOK_R_BR
   57 call: • call normcall
   58     | • lvalue callsuffix
   59     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   70 objectdef: • TOK_L_BR elist TOK_R_BR
   71          | • TOK_L_BR indexed TOK_R_BR
   81 const: • TOK_INT
   82      | • TOK_FLOAT
   83      | • TOK_STRING
   84      | • TOK_NIL
   85      | • TOK_TRUE
   86      | • TOK_FALSE
   99 forprefix: TOK_FOR TOK_L_PARENTH elist TOK_SEMICOLON M1 • expression TOK_SEMICOLON

    TOK_NOT        shift, and go to state 12
    TOK_LOCAL      shift, and go to state 13
    TOK_TRUE       shift, and go to state 14
    TOK_FALSE      shift, and go to state 15
    TOK_NIL        shift, and go to state 16
    TOK_MINUS      shift, and go to state 17
    TOK_DBL_PLUS   shift, and go to state 18
    TOK_DBL_MINUS  shift, and go to state 19
    TOK_L_BR       shift, and go to state 21
    TOK_L_PARENTH  shift, and go to state 22
    TOK_DBL_COLON  shift, and go to state 24
    TOK_ID         shift, and go to state 25
    TOK_INT        shift, and go to state 26
    TOK_FLOAT      shift, and go to state 27
    TOK_STRING     shift, and go to state 28

    assignexpr  go to state 30
    expression  go to state 178
    term        go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 172

   20 expression: expression • TOK_PLUS expression
   21           | expression • TOK_MINUS expression
   22           | expression • TOK_MULTIPLY expression
   23           | expression • TOK_DIVIDE expression
   24           | expression • TOK_MODULO expression
   25           | expression • TOK_GREATER expression
   26           | expression • TOK_LESS expression
   27           | expression • TOK_GR_EQUAL expression
   28           | expression • TOK_LS_EQUAL expression
   29           | expression • TOK_EQUAL expression
   30           | expression • TOK_N_EQUAL expression
   32           | expression • TOK_AND $@1 M expression
   34           | expression • TOK_OR $@2 M expression
   67 indexedelem: TOK_L_CURLY_BR expression TOK_COLON expression • TOK_R_CURLY_BR

    TOK_AND         shift, and go to state 75
    TOK_OR          shift, and go to state 76
    TOK_PLUS        shift, and go to state 77
    TOK_MINUS       shift, and go to state 78
    TOK_MULTIPLY    shift, and go to state 79
    TOK_DIVIDE      shift, and go to state 80
    TOK_MODULO      shift, and go to state 81
    TOK_EQUAL       shift, and go to state 82
    TOK_N_EQUAL     shift, and go to state 83
    TOK_GREATER     shift, and go to state 84
    TOK_LESS        shift, and go to state 85
    TOK_GR_EQUAL    shift, and go to state 86
    TOK_LS_EQUAL    shift, and go to state 87
    TOK_R_CURLY_BR  shift, and go to state 179


State 173

   20 expression: expression • TOK_PLUS expression
   21           | expression • TOK_MINUS expression
   22           | expression • TOK_MULTIPLY expression
   23           | expression • TOK_DIVIDE expression
   24           | expression • TOK_MODULO expression
   25           | expression • TOK_GREATER expression
   26           | expression • TOK_LESS expression
   27           | expression • TOK_GR_EQUAL expression
   28           | expression • TOK_LS_EQUAL expression
   29           | expression • TOK_EQUAL expression
   30           | expression • TOK_N_EQUAL expression
   32           | expression • TOK_AND $@1 M expression
   32           | expression TOK_AND $@1 M expression •  [TOK_AND, TOK_OR, TOK_R_CURLY_BR, TOK_R_BR, TOK_R_PARENTH, TOK_SEMICOLON, TOK_COMMA, TOK_COLON]
   34           | expression • TOK_OR $@2 M expression

    TOK_PLUS      shift, and go to state 77
    TOK_MINUS     shift, and go to state 78
    TOK_MULTIPLY  shift, and go to state 79
    TOK_DIVIDE    shift, and go to state 80
    TOK_MODULO    shift, and go to state 81
    TOK_EQUAL     shift, and go to state 82
    TOK_N_EQUAL   shift, and go to state 83
    TOK_GREATER   shift, and go to state 84
    TOK_LESS      shift, and go to state 85
    TOK_GR_EQUAL  shift, and go to state 86
    TOK_LS_EQUAL  shift, and go to state 87

    $default  reduce using rule 32 (expression)

    Conflict between rule 32 and token TOK_AND resolved as reduce (%left TOK_AND).
    Conflict between rule 32 and token TOK_OR resolved as reduce (TOK_OR < TOK_AND).
    Conflict between rule 32 and token TOK_PLUS resolved as shift (TOK_AND < TOK_PLUS).
    Conflict between rule 32 and token TOK_MINUS resolved as shift (TOK_AND < TOK_MINUS).
    Conflict between rule 32 and token TOK_MULTIPLY resolved as shift (TOK_AND < TOK_MULTIPLY).
    Conflict between rule 32 and token TOK_DIVIDE resolved as shift (TOK_AND < TOK_DIVIDE).
    Conflict between rule 32 and token TOK_MODULO resolved as shift (TOK_AND < TOK_MODULO).
    Conflict between rule 32 and token TOK_EQUAL resolved as shift (TOK_AND < TOK_EQUAL).
    Conflict between rule 32 and token TOK_N_EQUAL resolved as shift (TOK_AND < TOK_N_EQUAL).
    Conflict between rule 32 and token TOK_GREATER resolved as shift (TOK_AND < TOK_GREATER).
    Conflict between rule 32 and token TOK_LESS resolved as shift (TOK_AND < TOK_LESS).
    Conflict between rule 32 and token TOK_GR_EQUAL resolved as shift (TOK_AND < TOK_GR_EQUAL).
    Conflict between rule 32 and token TOK_LS_EQUAL resolved as shift (TOK_AND < TOK_LS_EQUAL).


State 174

   20 expression: expression • TOK_PLUS expression
   21           | expression • TOK_MINUS expression
   22           | expression • TOK_MULTIPLY expression
   23           | expression • TOK_DIVIDE expression
   24           | expression • TOK_MODULO expression
   25           | expression • TOK_GREATER expression
   26           | expression • TOK_LESS expression
   27           | expression • TOK_GR_EQUAL expression
   28           | expression • TOK_LS_EQUAL expression
   29           | expression • TOK_EQUAL expression
   30           | expression • TOK_N_EQUAL expression
   32           | expression • TOK_AND $@1 M expression
   34           | expression • TOK_OR $@2 M expression
   34           | expression TOK_OR $@2 M expression •  [TOK_OR, TOK_R_CURLY_BR, TOK_R_BR, TOK_R_PARENTH, TOK_SEMICOLON, TOK_COMMA, TOK_COLON]

    TOK_AND       shift, and go to state 75
    TOK_PLUS      shift, and go to state 77
    TOK_MINUS     shift, and go to state 78
    TOK_MULTIPLY  shift, and go to state 79
    TOK_DIVIDE    shift, and go to state 80
    TOK_MODULO    shift, and go to state 81
    TOK_EQUAL     shift, and go to state 82
    TOK_N_EQUAL   shift, and go to state 83
    TOK_GREATER   shift, and go to state 84
    TOK_LESS      shift, and go to state 85
    TOK_GR_EQUAL  shift, and go to state 86
    TOK_LS_EQUAL  shift, and go to state 87

    $default  reduce using rule 34 (expression)

    Conflict between rule 34 and token TOK_AND resolved as shift (TOK_OR < TOK_AND).
    Conflict between rule 34 and token TOK_OR resolved as reduce (%left TOK_OR).
    Conflict between rule 34 and token TOK_PLUS resolved as shift (TOK_OR < TOK_PLUS).
    Conflict between rule 34 and token TOK_MINUS resolved as shift (TOK_OR < TOK_MINUS).
    Conflict between rule 34 and token TOK_MULTIPLY resolved as shift (TOK_OR < TOK_MULTIPLY).
    Conflict between rule 34 and token TOK_DIVIDE resolved as shift (TOK_OR < TOK_DIVIDE).
    Conflict between rule 34 and token TOK_MODULO resolved as shift (TOK_OR < TOK_MODULO).
    Conflict between rule 34 and token TOK_EQUAL resolved as shift (TOK_OR < TOK_EQUAL).
    Conflict between rule 34 and token TOK_N_EQUAL resolved as shift (TOK_OR < TOK_N_EQUAL).
    Conflict between rule 34 and token TOK_GREATER resolved as shift (TOK_OR < TOK_GREATER).
    Conflict between rule 34 and token TOK_LESS resolved as shift (TOK_OR < TOK_LESS).
    Conflict between rule 34 and token TOK_GR_EQUAL resolved as shift (TOK_OR < TOK_GR_EQUAL).
    Conflict between rule 34 and token TOK_LS_EQUAL resolved as shift (TOK_OR < TOK_LS_EQUAL).


State 175

   88 idlist: idlist TOK_COMMA TOK_ID •

    $default  reduce using rule 88 (idlist)


State 176

   74 funcdef_block: TOK_L_CURLY_BR statements TOK_R_CURLY_BR •

    $default  reduce using rule 74 (funcdef_block)


State 177

    3 statement: • expression TOK_SEMICOLON
    4          | • if_statement
    5          | • ifelse_statement
    6          | • while_statement
    7          | • for_statement
    8          | • return_statement
    9          | • TOK_BREAK TOK_SEMICOLON
   10          | • TOK_CONTINUE TOK_SEMICOLON
   11          | • block
   12          | • funcdef
   13          | • TOK_SEMICOLON
   14          | • error TOK_SEMICOLON
   18 assignexpr: • lvalue TOK_ASSIGN expression
   19 expression: • assignexpr
   20           | • expression TOK_PLUS expression
   21           | • expression TOK_MINUS expression
   22           | • expression TOK_MULTIPLY expression
   23           | • expression TOK_DIVIDE expression
   24           | • expression TOK_MODULO expression
   25           | • expression TOK_GREATER expression
   26           | • expression TOK_LESS expression
   27           | • expression TOK_GR_EQUAL expression
   28           | • expression TOK_LS_EQUAL expression
   29           | • expression TOK_EQUAL expression
   30           | • expression TOK_N_EQUAL expression
   32           | • expression TOK_AND $@1 M expression
   34           | • expression TOK_OR $@2 M expression
   35           | • term
   36 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   37     | • TOK_MINUS expression
   38     | • TOK_NOT expression
   39     | • TOK_DBL_PLUS lvalue
   40     | • lvalue TOK_DBL_PLUS
   41     | • TOK_DBL_MINUS lvalue
   42     | • lvalue TOK_DBL_MINUS
   43     | • primary
   44 primary: • lvalue
   45        | • call
   46        | • objectdef
   47        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   48        | • const
   49 lvalue: • TOK_ID
   50       | • TOK_LOCAL TOK_ID
   51       | • TOK_DBL_COLON TOK_ID
   52       | • member
   53 member: • lvalue TOK_DOT TOK_ID
   54       | • lvalue TOK_L_BR expression TOK_R_BR
   55       | • call TOK_DOT TOK_ID
   56       | • call TOK_L_BR expression TOK_R_BR
   57 call: • call normcall
   58     | • lvalue callsuffix
   59     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   70 objectdef: • TOK_L_BR elist TOK_R_BR
   71          | • TOK_L_BR indexed TOK_R_BR
   73 block: • TOK_L_CURLY_BR $@3 statements TOK_R_CURLY_BR
   76 funcprefix: • TOK_FUNCTION funcname
   77           | • TOK_FUNCTION
   80 funcdef: • funcprefix funcargs funcbody
   81 const: • TOK_INT
   82      | • TOK_FLOAT
   83      | • TOK_STRING
   84      | • TOK_NIL
   85      | • TOK_TRUE
   86      | • TOK_FALSE
   90 ifprefix: • TOK_IF TOK_L_PARENTH expression TOK_R_PARENTH
   92 if_statement: • ifprefix statement
   93 ifelse_statement: • ifprefix statement elseprefix statement
   94 whilestart: • TOK_WHILE
   96 while_statement: • whilestart whilecond statement
   99 forprefix: • TOK_FOR TOK_L_PARENTH elist TOK_SEMICOLON M1 expression TOK_SEMICOLON
  100 for_statement: • forprefix N elist TOK_R_PARENTH N statement N
  100              | forprefix N elist TOK_R_PARENTH N • statement N
  101 return_statement: • TOK_RETURN TOK_SEMICOLON
  102                 | • TOK_RETURN expression TOK_SEMICOLON

    error           shift, and go to state 4
    TOK_IF          shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_FOR         shift, and go to state 7
    TOK_FUNCTION    shift, and go to state 8
    TOK_RETURN      shift, and go to state 9
    TOK_BREAK       shift, and go to state 10
    TOK_CONTINUE    shift, and go to state 11
    TOK_NOT         shift, and go to state 12
    TOK_LOCAL       shift, and go to state 13
    TOK_TRUE        shift, and go to state 14
    TOK_FALSE       shift, and go to state 15
    TOK_NIL         shift, and go to state 16
    TOK_MINUS       shift, and go to state 17
    TOK_DBL_PLUS    shift, and go to state 18
    TOK_DBL_MINUS   shift, and go to state 19
    TOK_L_CURLY_BR  shift, and go to state 20
    TOK_L_BR        shift, and go to state 21
    TOK_L_PARENTH   shift, and go to state 22
    TOK_SEMICOLON   shift, and go to state 23
    TOK_DBL_COLON   shift, and go to state 24
    TOK_ID          shift, and go to state 25
    TOK_INT         shift, and go to state 26
    TOK_FLOAT       shift, and go to state 27
    TOK_STRING      shift, and go to state 28

    statement         go to state 180
    assignexpr        go to state 30
    expression        go to state 31
    term              go to state 32
    primary           go to state 33
    lvalue            go to state 34
    member            go to state 35
    call              go to state 36
    objectdef         go to state 37
    block             go to state 38
    funcprefix        go to state 39
    funcdef           go to state 40
    const             go to state 41
    ifprefix          go to state 42
    if_statement      go to state 43
    ifelse_statement  go to state 44
    whilestart        go to state 45
    while_statement   go to state 46
    forprefix         go to state 47
    for_statement     go to state 48
    return_statement  go to state 49


State 178

   20 expression: expression • TOK_PLUS expression
   21           | expression • TOK_MINUS expression
   22           | expression • TOK_MULTIPLY expression
   23           | expression • TOK_DIVIDE expression
   24           | expression • TOK_MODULO expression
   25           | expression • TOK_GREATER expression
   26           | expression • TOK_LESS expression
   27           | expression • TOK_GR_EQUAL expression
   28           | expression • TOK_LS_EQUAL expression
   29           | expression • TOK_EQUAL expression
   30           | expression • TOK_N_EQUAL expression
   32           | expression • TOK_AND $@1 M expression
   34           | expression • TOK_OR $@2 M expression
   99 forprefix: TOK_FOR TOK_L_PARENTH elist TOK_SEMICOLON M1 expression • TOK_SEMICOLON

    TOK_AND        shift, and go to state 75
    TOK_OR         shift, and go to state 76
    TOK_PLUS       shift, and go to state 77
    TOK_MINUS      shift, and go to state 78
    TOK_MULTIPLY   shift, and go to state 79
    TOK_DIVIDE     shift, and go to state 80
    TOK_MODULO     shift, and go to state 81
    TOK_EQUAL      shift, and go to state 82
    TOK_N_EQUAL    shift, and go to state 83
    TOK_GREATER    shift, and go to state 84
    TOK_LESS       shift, and go to state 85
    TOK_GR_EQUAL   shift, and go to state 86
    TOK_LS_EQUAL   shift, and go to state 87
    TOK_SEMICOLON  shift, and go to state 181


State 179

   67 indexedelem: TOK_L_CURLY_BR expression TOK_COLON expression TOK_R_CURLY_BR •

    $default  reduce using rule 67 (indexedelem)


State 180

   97 N: ε •
  100 for_statement: forprefix N elist TOK_R_PARENTH N statement • N

    $default  reduce using rule 97 (N)

    N  go to state 182


State 181

   99 forprefix: TOK_FOR TOK_L_PARENTH elist TOK_SEMICOLON M1 expression TOK_SEMICOLON •

    $default  reduce using rule 99 (forprefix)


State 182

  100 for_statement: forprefix N elist TOK_R_PARENTH N statement N •

    $default  reduce using rule 100 (for_statement)
