Grammar

    0 $accept: program $end

    1 program: statements statement
    2        | ε

    3 statement: expression TOK_SEMICOLON
    4          | if_statement
    5          | while_statement
    6          | for_statement
    7          | return_statement
    8          | TOK_CONTINUE TOK_SEMICOLON
    9          | TOK_BREAK TOK_SEMICOLON
   10          | block
   11          | funcdef
   12          | TOK_SEMICOLON
   13          | error TOK_SEMICOLON

   14 statements: statements statement
   15           | ε

   16 expression: assignexpr
   17           | expression TOK_PLUS expression
   18           | expression TOK_MINUS expression
   19           | expression TOK_MULTIPLY expression
   20           | expression TOK_DIVIDE expression
   21           | expression TOK_MODULO expression
   22           | expression TOK_GREATER expression
   23           | expression TOK_LESS expression
   24           | expression TOK_GR_EQUAL expression
   25           | expression TOK_LS_EQUAL expression
   26           | expression TOK_EQUAL expression
   27           | expression TOK_N_EQUAL expression
   28           | expression TOK_AND expression
   29           | expression TOK_OR expression
   30           | term

   31 term: TOK_L_PARENTH expression TOK_R_PARENTH
   32     | TOK_MINUS expression
   33     | TOK_NOT expression
   34     | TOK_DBL_PLUS lvalue
   35     | lvalue TOK_DBL_PLUS
   36     | TOK_DBL_MINUS lvalue
   37     | lvalue TOK_DBL_MINUS
   38     | primary

   39 assignexpr: lvalue TOK_ASSIGN expression

   40 primary: lvalue
   41        | call
   42        | objectdef
   43        | TOK_L_PARENTH funcdef TOK_R_PARENTH
   44        | const

   45 lvalue: TOK_ID
   46       | TOK_LOCAL TOK_ID
   47       | TOK_DBL_COLON TOK_ID
   48       | member

   49 member: lvalue TOK_DOT TOK_ID
   50       | lvalue TOK_L_BR expression TOK_R_BR
   51       | call TOK_DOT TOK_ID
   52       | call TOK_L_BR expression TOK_R_BR

   53 call: call normcall
   54     | lvalue callsuffix
   55     | TOK_L_PARENTH funcdef TOK_R_PARENTH normcall

   56 callsuffix: normcall
   57           | methodcall

   58 normcall: TOK_L_PARENTH elist TOK_R_PARENTH

   59 methodcall: TOK_DBL_DOT TOK_ID normcall

   60 elist: elist TOK_COMMA expression
   61      | expression
   62      | ε

   63 indexed: indexedelem
   64        | indexed TOK_COMMA indexedelem

   65 objectdef: TOK_L_BR elist TOK_R_BR
   66          | TOK_L_BR indexed TOK_R_BR

   67 indexedelem: TOK_L_CURLY_BR expression TOK_COLON expression TOK_R_CURLY_BR

   68 $@1: ε

   69 block: TOK_L_CURLY_BR $@1 statements TOK_R_CURLY_BR

   70 funcdef_block: TOK_L_CURLY_BR statements TOK_R_CURLY_BR

   71 funcname: TOK_ID
   72         | ε

   73 funcprefix: TOK_FUNCTION funcname

   74 funcargs: TOK_L_PARENTH idlist TOK_R_PARENTH

   75 funcbody: funcdef_block

   76 funcdef: funcprefix funcargs funcbody

   77 const: TOK_INT
   78      | TOK_FLOAT
   79      | TOK_STRING
   80      | TOK_NIL
   81      | TOK_TRUE
   82      | TOK_FALSE

   83 idlist: TOK_ID
   84       | idlist TOK_COMMA TOK_ID
   85       | ε

   86 if_statement: TOK_IF TOK_L_PARENTH expression TOK_R_PARENTH statement
   87             | TOK_IF TOK_L_PARENTH expression TOK_R_PARENTH statement TOK_ELSE statement

   88 while_statement: TOK_WHILE TOK_L_PARENTH expression TOK_R_PARENTH statement

   89 for_statement: TOK_FOR TOK_L_PARENTH elist TOK_SEMICOLON expression TOK_SEMICOLON elist TOK_R_PARENTH statement

   90 return_statement: TOK_RETURN TOK_SEMICOLON
   91                 | TOK_RETURN expression TOK_SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256) 13
    TOK_IF (258) 86 87
    TOK_ELSE (259) 87
    TOK_WHILE (260) 88
    TOK_FOR (261) 89
    TOK_FUNCTION (262) 73
    TOK_RETURN (263) 90 91
    TOK_BREAK (264) 9
    TOK_CONTINUE (265) 8
    TOK_AND (266) 28
    TOK_NOT (267) 33
    TOK_OR (268) 29
    TOK_LOCAL (269) 46
    TOK_TRUE <intVal> (270) 81
    TOK_FALSE <intVal> (271) 82
    TOK_NIL <strVal> (272) 80
    TOK_ASSIGN (273) 39
    TOK_PLUS (274) 17
    TOK_MINUS (275) 18 32
    TOK_MULTIPLY (276) 19
    TOK_DIVIDE (277) 20
    TOK_MODULO (278) 21
    TOK_EQUAL (279) 26
    TOK_N_EQUAL (280) 27
    TOK_DBL_PLUS (281) 34 35
    TOK_DBL_MINUS (282) 36 37
    TOK_GREATER (283) 22
    TOK_LESS (284) 23
    TOK_GR_EQUAL (285) 24
    TOK_LS_EQUAL (286) 25
    TOK_L_CURLY_BR (287) 67 69 70
    TOK_R_CURLY_BR (288) 67 69 70
    TOK_L_BR (289) 50 52 65 66
    TOK_R_BR (290) 50 52 65 66
    TOK_L_PARENTH (291) 31 43 55 58 74 86 87 88 89
    TOK_R_PARENTH (292) 31 43 55 58 74 86 87 88 89
    TOK_SEMICOLON (293) 3 8 9 12 13 89 90 91
    TOK_COMMA (294) 60 64 84
    TOK_COLON (295) 67
    TOK_DBL_COLON (296) 47
    TOK_DOT (297) 49 51
    TOK_DBL_DOT (298) 59
    TOK_ID <strVal> (299) 45 46 47 49 51 59 71 83 84
    TOK_INT <intVal> (300) 77
    TOK_FLOAT <floatVal> (301) 78
    TOK_STRING <strVal> (302) 79
    TOK_UMINUS (303)


Nonterminals, with rules where they appear

    $accept (49)
        on left: 0
    program (50)
        on left: 1 2
        on right: 0
    statement (51)
        on left: 3 4 5 6 7 8 9 10 11 12 13
        on right: 1 14 86 87 88 89
    statements (52)
        on left: 14 15
        on right: 1 14 69 70
    expression <expr> (53)
        on left: 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30
        on right: 3 17 18 19 20 21 22 23 24 25 26 27 28 29 31 32 33 39 50 52 60 61 67 86 87 88 89 91
    term <expr> (54)
        on left: 31 32 33 34 35 36 37 38
        on right: 30
    assignexpr <expr> (55)
        on left: 39
        on right: 16
    primary <expr> (56)
        on left: 40 41 42 43 44
        on right: 38
    lvalue <expr> (57)
        on left: 45 46 47 48
        on right: 34 35 36 37 39 40 49 50 54
    member <expr> (58)
        on left: 49 50 51 52
        on right: 48
    call <expr> (59)
        on left: 53 54 55
        on right: 41 51 52 53
    callsuffix <call_struct> (60)
        on left: 56 57
        on right: 54
    normcall <call_struct> (61)
        on left: 58
        on right: 53 55 56 59
    methodcall <call_struct> (62)
        on left: 59
        on right: 57
    elist <expr> (63)
        on left: 60 61 62
        on right: 58 60 65 89
    indexed <expr> (64)
        on left: 63 64
        on right: 64 66
    objectdef <expr> (65)
        on left: 65 66
        on right: 42
    indexedelem <expr> (66)
        on left: 67
        on right: 63 64
    block (67)
        on left: 69
        on right: 10
    $@1 (68)
        on left: 68
        on right: 69
    funcdef_block (69)
        on left: 70
        on right: 75
    funcname <strVal> (70)
        on left: 71 72
        on right: 73
    funcprefix <symbol> (71)
        on left: 73
        on right: 76
    funcargs (72)
        on left: 74
        on right: 76
    funcbody <unsignedVal> (73)
        on left: 75
        on right: 76
    funcdef <expr> (74)
        on left: 76
        on right: 11 43 55
    const <expr> (75)
        on left: 77 78 79 80 81 82
        on right: 44
    idlist <strVal> (76)
        on left: 83 84 85
        on right: 74 84
    if_statement (77)
        on left: 86 87
        on right: 4
    while_statement (78)
        on left: 88
        on right: 5
    for_statement (79)
        on left: 89
        on right: 6
    return_statement (80)
        on left: 90 91
        on right: 7


State 0

    0 $accept: • program $end
    1 program: • statements statement
    2        | ε •  [$end]
   14 statements: • statements statement
   15           | ε •  [error, TOK_IF, TOK_WHILE, TOK_FOR, TOK_FUNCTION, TOK_RETURN, TOK_BREAK, TOK_CONTINUE, TOK_NOT, TOK_LOCAL, TOK_TRUE, TOK_FALSE, TOK_NIL, TOK_MINUS, TOK_DBL_PLUS, TOK_DBL_MINUS, TOK_L_CURLY_BR, TOK_L_BR, TOK_L_PARENTH, TOK_SEMICOLON, TOK_DBL_COLON, TOK_ID, TOK_INT, TOK_FLOAT, TOK_STRING]

    $end      reduce using rule 2 (program)
    $default  reduce using rule 15 (statements)

    program     go to state 1
    statements  go to state 2


State 1

    0 $accept: program • $end

    $end  shift, and go to state 3


State 2

    1 program: statements • statement
    3 statement: • expression TOK_SEMICOLON
    4          | • if_statement
    5          | • while_statement
    6          | • for_statement
    7          | • return_statement
    8          | • TOK_CONTINUE TOK_SEMICOLON
    9          | • TOK_BREAK TOK_SEMICOLON
   10          | • block
   11          | • funcdef
   12          | • TOK_SEMICOLON
   13          | • error TOK_SEMICOLON
   14 statements: statements • statement
   16 expression: • assignexpr
   17           | • expression TOK_PLUS expression
   18           | • expression TOK_MINUS expression
   19           | • expression TOK_MULTIPLY expression
   20           | • expression TOK_DIVIDE expression
   21           | • expression TOK_MODULO expression
   22           | • expression TOK_GREATER expression
   23           | • expression TOK_LESS expression
   24           | • expression TOK_GR_EQUAL expression
   25           | • expression TOK_LS_EQUAL expression
   26           | • expression TOK_EQUAL expression
   27           | • expression TOK_N_EQUAL expression
   28           | • expression TOK_AND expression
   29           | • expression TOK_OR expression
   30           | • term
   31 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   32     | • TOK_MINUS expression
   33     | • TOK_NOT expression
   34     | • TOK_DBL_PLUS lvalue
   35     | • lvalue TOK_DBL_PLUS
   36     | • TOK_DBL_MINUS lvalue
   37     | • lvalue TOK_DBL_MINUS
   38     | • primary
   39 assignexpr: • lvalue TOK_ASSIGN expression
   40 primary: • lvalue
   41        | • call
   42        | • objectdef
   43        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   44        | • const
   45 lvalue: • TOK_ID
   46       | • TOK_LOCAL TOK_ID
   47       | • TOK_DBL_COLON TOK_ID
   48       | • member
   49 member: • lvalue TOK_DOT TOK_ID
   50       | • lvalue TOK_L_BR expression TOK_R_BR
   51       | • call TOK_DOT TOK_ID
   52       | • call TOK_L_BR expression TOK_R_BR
   53 call: • call normcall
   54     | • lvalue callsuffix
   55     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   65 objectdef: • TOK_L_BR elist TOK_R_BR
   66          | • TOK_L_BR indexed TOK_R_BR
   69 block: • TOK_L_CURLY_BR $@1 statements TOK_R_CURLY_BR
   73 funcprefix: • TOK_FUNCTION funcname
   76 funcdef: • funcprefix funcargs funcbody
   77 const: • TOK_INT
   78      | • TOK_FLOAT
   79      | • TOK_STRING
   80      | • TOK_NIL
   81      | • TOK_TRUE
   82      | • TOK_FALSE
   86 if_statement: • TOK_IF TOK_L_PARENTH expression TOK_R_PARENTH statement
   87             | • TOK_IF TOK_L_PARENTH expression TOK_R_PARENTH statement TOK_ELSE statement
   88 while_statement: • TOK_WHILE TOK_L_PARENTH expression TOK_R_PARENTH statement
   89 for_statement: • TOK_FOR TOK_L_PARENTH elist TOK_SEMICOLON expression TOK_SEMICOLON elist TOK_R_PARENTH statement
   90 return_statement: • TOK_RETURN TOK_SEMICOLON
   91                 | • TOK_RETURN expression TOK_SEMICOLON

    error           shift, and go to state 4
    TOK_IF          shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_FOR         shift, and go to state 7
    TOK_FUNCTION    shift, and go to state 8
    TOK_RETURN      shift, and go to state 9
    TOK_BREAK       shift, and go to state 10
    TOK_CONTINUE    shift, and go to state 11
    TOK_NOT         shift, and go to state 12
    TOK_LOCAL       shift, and go to state 13
    TOK_TRUE        shift, and go to state 14
    TOK_FALSE       shift, and go to state 15
    TOK_NIL         shift, and go to state 16
    TOK_MINUS       shift, and go to state 17
    TOK_DBL_PLUS    shift, and go to state 18
    TOK_DBL_MINUS   shift, and go to state 19
    TOK_L_CURLY_BR  shift, and go to state 20
    TOK_L_BR        shift, and go to state 21
    TOK_L_PARENTH   shift, and go to state 22
    TOK_SEMICOLON   shift, and go to state 23
    TOK_DBL_COLON   shift, and go to state 24
    TOK_ID          shift, and go to state 25
    TOK_INT         shift, and go to state 26
    TOK_FLOAT       shift, and go to state 27
    TOK_STRING      shift, and go to state 28

    statement         go to state 29
    expression        go to state 30
    term              go to state 31
    assignexpr        go to state 32
    primary           go to state 33
    lvalue            go to state 34
    member            go to state 35
    call              go to state 36
    objectdef         go to state 37
    block             go to state 38
    funcprefix        go to state 39
    funcdef           go to state 40
    const             go to state 41
    if_statement      go to state 42
    while_statement   go to state 43
    for_statement     go to state 44
    return_statement  go to state 45


State 3

    0 $accept: program $end •

    $default  accept


State 4

   13 statement: error • TOK_SEMICOLON

    TOK_SEMICOLON  shift, and go to state 46


State 5

   86 if_statement: TOK_IF • TOK_L_PARENTH expression TOK_R_PARENTH statement
   87             | TOK_IF • TOK_L_PARENTH expression TOK_R_PARENTH statement TOK_ELSE statement

    TOK_L_PARENTH  shift, and go to state 47


State 6

   88 while_statement: TOK_WHILE • TOK_L_PARENTH expression TOK_R_PARENTH statement

    TOK_L_PARENTH  shift, and go to state 48


State 7

   89 for_statement: TOK_FOR • TOK_L_PARENTH elist TOK_SEMICOLON expression TOK_SEMICOLON elist TOK_R_PARENTH statement

    TOK_L_PARENTH  shift, and go to state 49


State 8

   71 funcname: • TOK_ID
   72         | ε •  [TOK_L_PARENTH]
   73 funcprefix: TOK_FUNCTION • funcname

    TOK_ID  shift, and go to state 50

    $default  reduce using rule 72 (funcname)

    funcname  go to state 51


State 9

   16 expression: • assignexpr
   17           | • expression TOK_PLUS expression
   18           | • expression TOK_MINUS expression
   19           | • expression TOK_MULTIPLY expression
   20           | • expression TOK_DIVIDE expression
   21           | • expression TOK_MODULO expression
   22           | • expression TOK_GREATER expression
   23           | • expression TOK_LESS expression
   24           | • expression TOK_GR_EQUAL expression
   25           | • expression TOK_LS_EQUAL expression
   26           | • expression TOK_EQUAL expression
   27           | • expression TOK_N_EQUAL expression
   28           | • expression TOK_AND expression
   29           | • expression TOK_OR expression
   30           | • term
   31 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   32     | • TOK_MINUS expression
   33     | • TOK_NOT expression
   34     | • TOK_DBL_PLUS lvalue
   35     | • lvalue TOK_DBL_PLUS
   36     | • TOK_DBL_MINUS lvalue
   37     | • lvalue TOK_DBL_MINUS
   38     | • primary
   39 assignexpr: • lvalue TOK_ASSIGN expression
   40 primary: • lvalue
   41        | • call
   42        | • objectdef
   43        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   44        | • const
   45 lvalue: • TOK_ID
   46       | • TOK_LOCAL TOK_ID
   47       | • TOK_DBL_COLON TOK_ID
   48       | • member
   49 member: • lvalue TOK_DOT TOK_ID
   50       | • lvalue TOK_L_BR expression TOK_R_BR
   51       | • call TOK_DOT TOK_ID
   52       | • call TOK_L_BR expression TOK_R_BR
   53 call: • call normcall
   54     | • lvalue callsuffix
   55     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   65 objectdef: • TOK_L_BR elist TOK_R_BR
   66          | • TOK_L_BR indexed TOK_R_BR
   77 const: • TOK_INT
   78      | • TOK_FLOAT
   79      | • TOK_STRING
   80      | • TOK_NIL
   81      | • TOK_TRUE
   82      | • TOK_FALSE
   90 return_statement: TOK_RETURN • TOK_SEMICOLON
   91                 | TOK_RETURN • expression TOK_SEMICOLON

    TOK_NOT        shift, and go to state 12
    TOK_LOCAL      shift, and go to state 13
    TOK_TRUE       shift, and go to state 14
    TOK_FALSE      shift, and go to state 15
    TOK_NIL        shift, and go to state 16
    TOK_MINUS      shift, and go to state 17
    TOK_DBL_PLUS   shift, and go to state 18
    TOK_DBL_MINUS  shift, and go to state 19
    TOK_L_BR       shift, and go to state 21
    TOK_L_PARENTH  shift, and go to state 22
    TOK_SEMICOLON  shift, and go to state 52
    TOK_DBL_COLON  shift, and go to state 24
    TOK_ID         shift, and go to state 25
    TOK_INT        shift, and go to state 26
    TOK_FLOAT      shift, and go to state 27
    TOK_STRING     shift, and go to state 28

    expression  go to state 53
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 10

    9 statement: TOK_BREAK • TOK_SEMICOLON

    TOK_SEMICOLON  shift, and go to state 54


State 11

    8 statement: TOK_CONTINUE • TOK_SEMICOLON

    TOK_SEMICOLON  shift, and go to state 55


State 12

   16 expression: • assignexpr
   17           | • expression TOK_PLUS expression
   18           | • expression TOK_MINUS expression
   19           | • expression TOK_MULTIPLY expression
   20           | • expression TOK_DIVIDE expression
   21           | • expression TOK_MODULO expression
   22           | • expression TOK_GREATER expression
   23           | • expression TOK_LESS expression
   24           | • expression TOK_GR_EQUAL expression
   25           | • expression TOK_LS_EQUAL expression
   26           | • expression TOK_EQUAL expression
   27           | • expression TOK_N_EQUAL expression
   28           | • expression TOK_AND expression
   29           | • expression TOK_OR expression
   30           | • term
   31 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   32     | • TOK_MINUS expression
   33     | • TOK_NOT expression
   33     | TOK_NOT • expression
   34     | • TOK_DBL_PLUS lvalue
   35     | • lvalue TOK_DBL_PLUS
   36     | • TOK_DBL_MINUS lvalue
   37     | • lvalue TOK_DBL_MINUS
   38     | • primary
   39 assignexpr: • lvalue TOK_ASSIGN expression
   40 primary: • lvalue
   41        | • call
   42        | • objectdef
   43        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   44        | • const
   45 lvalue: • TOK_ID
   46       | • TOK_LOCAL TOK_ID
   47       | • TOK_DBL_COLON TOK_ID
   48       | • member
   49 member: • lvalue TOK_DOT TOK_ID
   50       | • lvalue TOK_L_BR expression TOK_R_BR
   51       | • call TOK_DOT TOK_ID
   52       | • call TOK_L_BR expression TOK_R_BR
   53 call: • call normcall
   54     | • lvalue callsuffix
   55     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   65 objectdef: • TOK_L_BR elist TOK_R_BR
   66          | • TOK_L_BR indexed TOK_R_BR
   77 const: • TOK_INT
   78      | • TOK_FLOAT
   79      | • TOK_STRING
   80      | • TOK_NIL
   81      | • TOK_TRUE
   82      | • TOK_FALSE

    TOK_NOT        shift, and go to state 12
    TOK_LOCAL      shift, and go to state 13
    TOK_TRUE       shift, and go to state 14
    TOK_FALSE      shift, and go to state 15
    TOK_NIL        shift, and go to state 16
    TOK_MINUS      shift, and go to state 17
    TOK_DBL_PLUS   shift, and go to state 18
    TOK_DBL_MINUS  shift, and go to state 19
    TOK_L_BR       shift, and go to state 21
    TOK_L_PARENTH  shift, and go to state 22
    TOK_DBL_COLON  shift, and go to state 24
    TOK_ID         shift, and go to state 25
    TOK_INT        shift, and go to state 26
    TOK_FLOAT      shift, and go to state 27
    TOK_STRING     shift, and go to state 28

    expression  go to state 56
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 13

   46 lvalue: TOK_LOCAL • TOK_ID

    TOK_ID  shift, and go to state 57


State 14

   81 const: TOK_TRUE •

    $default  reduce using rule 81 (const)


State 15

   82 const: TOK_FALSE •

    $default  reduce using rule 82 (const)


State 16

   80 const: TOK_NIL •

    $default  reduce using rule 80 (const)


State 17

   16 expression: • assignexpr
   17           | • expression TOK_PLUS expression
   18           | • expression TOK_MINUS expression
   19           | • expression TOK_MULTIPLY expression
   20           | • expression TOK_DIVIDE expression
   21           | • expression TOK_MODULO expression
   22           | • expression TOK_GREATER expression
   23           | • expression TOK_LESS expression
   24           | • expression TOK_GR_EQUAL expression
   25           | • expression TOK_LS_EQUAL expression
   26           | • expression TOK_EQUAL expression
   27           | • expression TOK_N_EQUAL expression
   28           | • expression TOK_AND expression
   29           | • expression TOK_OR expression
   30           | • term
   31 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   32     | • TOK_MINUS expression
   32     | TOK_MINUS • expression
   33     | • TOK_NOT expression
   34     | • TOK_DBL_PLUS lvalue
   35     | • lvalue TOK_DBL_PLUS
   36     | • TOK_DBL_MINUS lvalue
   37     | • lvalue TOK_DBL_MINUS
   38     | • primary
   39 assignexpr: • lvalue TOK_ASSIGN expression
   40 primary: • lvalue
   41        | • call
   42        | • objectdef
   43        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   44        | • const
   45 lvalue: • TOK_ID
   46       | • TOK_LOCAL TOK_ID
   47       | • TOK_DBL_COLON TOK_ID
   48       | • member
   49 member: • lvalue TOK_DOT TOK_ID
   50       | • lvalue TOK_L_BR expression TOK_R_BR
   51       | • call TOK_DOT TOK_ID
   52       | • call TOK_L_BR expression TOK_R_BR
   53 call: • call normcall
   54     | • lvalue callsuffix
   55     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   65 objectdef: • TOK_L_BR elist TOK_R_BR
   66          | • TOK_L_BR indexed TOK_R_BR
   77 const: • TOK_INT
   78      | • TOK_FLOAT
   79      | • TOK_STRING
   80      | • TOK_NIL
   81      | • TOK_TRUE
   82      | • TOK_FALSE

    TOK_NOT        shift, and go to state 12
    TOK_LOCAL      shift, and go to state 13
    TOK_TRUE       shift, and go to state 14
    TOK_FALSE      shift, and go to state 15
    TOK_NIL        shift, and go to state 16
    TOK_MINUS      shift, and go to state 17
    TOK_DBL_PLUS   shift, and go to state 18
    TOK_DBL_MINUS  shift, and go to state 19
    TOK_L_BR       shift, and go to state 21
    TOK_L_PARENTH  shift, and go to state 22
    TOK_DBL_COLON  shift, and go to state 24
    TOK_ID         shift, and go to state 25
    TOK_INT        shift, and go to state 26
    TOK_FLOAT      shift, and go to state 27
    TOK_STRING     shift, and go to state 28

    expression  go to state 58
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 18

   34 term: TOK_DBL_PLUS • lvalue
   45 lvalue: • TOK_ID
   46       | • TOK_LOCAL TOK_ID
   47       | • TOK_DBL_COLON TOK_ID
   48       | • member
   49 member: • lvalue TOK_DOT TOK_ID
   50       | • lvalue TOK_L_BR expression TOK_R_BR
   51       | • call TOK_DOT TOK_ID
   52       | • call TOK_L_BR expression TOK_R_BR
   53 call: • call normcall
   54     | • lvalue callsuffix
   55     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall

    TOK_LOCAL      shift, and go to state 13
    TOK_L_PARENTH  shift, and go to state 59
    TOK_DBL_COLON  shift, and go to state 24
    TOK_ID         shift, and go to state 25

    lvalue  go to state 60
    member  go to state 35
    call    go to state 61


State 19

   36 term: TOK_DBL_MINUS • lvalue
   45 lvalue: • TOK_ID
   46       | • TOK_LOCAL TOK_ID
   47       | • TOK_DBL_COLON TOK_ID
   48       | • member
   49 member: • lvalue TOK_DOT TOK_ID
   50       | • lvalue TOK_L_BR expression TOK_R_BR
   51       | • call TOK_DOT TOK_ID
   52       | • call TOK_L_BR expression TOK_R_BR
   53 call: • call normcall
   54     | • lvalue callsuffix
   55     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall

    TOK_LOCAL      shift, and go to state 13
    TOK_L_PARENTH  shift, and go to state 59
    TOK_DBL_COLON  shift, and go to state 24
    TOK_ID         shift, and go to state 25

    lvalue  go to state 62
    member  go to state 35
    call    go to state 61


State 20

   68 $@1: ε •
   69 block: TOK_L_CURLY_BR • $@1 statements TOK_R_CURLY_BR

    $default  reduce using rule 68 ($@1)

    $@1  go to state 63


State 21

   16 expression: • assignexpr
   17           | • expression TOK_PLUS expression
   18           | • expression TOK_MINUS expression
   19           | • expression TOK_MULTIPLY expression
   20           | • expression TOK_DIVIDE expression
   21           | • expression TOK_MODULO expression
   22           | • expression TOK_GREATER expression
   23           | • expression TOK_LESS expression
   24           | • expression TOK_GR_EQUAL expression
   25           | • expression TOK_LS_EQUAL expression
   26           | • expression TOK_EQUAL expression
   27           | • expression TOK_N_EQUAL expression
   28           | • expression TOK_AND expression
   29           | • expression TOK_OR expression
   30           | • term
   31 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   32     | • TOK_MINUS expression
   33     | • TOK_NOT expression
   34     | • TOK_DBL_PLUS lvalue
   35     | • lvalue TOK_DBL_PLUS
   36     | • TOK_DBL_MINUS lvalue
   37     | • lvalue TOK_DBL_MINUS
   38     | • primary
   39 assignexpr: • lvalue TOK_ASSIGN expression
   40 primary: • lvalue
   41        | • call
   42        | • objectdef
   43        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   44        | • const
   45 lvalue: • TOK_ID
   46       | • TOK_LOCAL TOK_ID
   47       | • TOK_DBL_COLON TOK_ID
   48       | • member
   49 member: • lvalue TOK_DOT TOK_ID
   50       | • lvalue TOK_L_BR expression TOK_R_BR
   51       | • call TOK_DOT TOK_ID
   52       | • call TOK_L_BR expression TOK_R_BR
   53 call: • call normcall
   54     | • lvalue callsuffix
   55     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   60 elist: • elist TOK_COMMA expression
   61      | • expression
   62      | ε •  [TOK_R_BR, TOK_COMMA]
   63 indexed: • indexedelem
   64        | • indexed TOK_COMMA indexedelem
   65 objectdef: • TOK_L_BR elist TOK_R_BR
   65          | TOK_L_BR • elist TOK_R_BR
   66          | • TOK_L_BR indexed TOK_R_BR
   66          | TOK_L_BR • indexed TOK_R_BR
   67 indexedelem: • TOK_L_CURLY_BR expression TOK_COLON expression TOK_R_CURLY_BR
   77 const: • TOK_INT
   78      | • TOK_FLOAT
   79      | • TOK_STRING
   80      | • TOK_NIL
   81      | • TOK_TRUE
   82      | • TOK_FALSE

    TOK_NOT         shift, and go to state 12
    TOK_LOCAL       shift, and go to state 13
    TOK_TRUE        shift, and go to state 14
    TOK_FALSE       shift, and go to state 15
    TOK_NIL         shift, and go to state 16
    TOK_MINUS       shift, and go to state 17
    TOK_DBL_PLUS    shift, and go to state 18
    TOK_DBL_MINUS   shift, and go to state 19
    TOK_L_CURLY_BR  shift, and go to state 64
    TOK_L_BR        shift, and go to state 21
    TOK_L_PARENTH   shift, and go to state 22
    TOK_DBL_COLON   shift, and go to state 24
    TOK_ID          shift, and go to state 25
    TOK_INT         shift, and go to state 26
    TOK_FLOAT       shift, and go to state 27
    TOK_STRING      shift, and go to state 28

    $default  reduce using rule 62 (elist)

    expression   go to state 65
    term         go to state 31
    assignexpr   go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    elist        go to state 66
    indexed      go to state 67
    objectdef    go to state 37
    indexedelem  go to state 68
    const        go to state 41


State 22

   16 expression: • assignexpr
   17           | • expression TOK_PLUS expression
   18           | • expression TOK_MINUS expression
   19           | • expression TOK_MULTIPLY expression
   20           | • expression TOK_DIVIDE expression
   21           | • expression TOK_MODULO expression
   22           | • expression TOK_GREATER expression
   23           | • expression TOK_LESS expression
   24           | • expression TOK_GR_EQUAL expression
   25           | • expression TOK_LS_EQUAL expression
   26           | • expression TOK_EQUAL expression
   27           | • expression TOK_N_EQUAL expression
   28           | • expression TOK_AND expression
   29           | • expression TOK_OR expression
   30           | • term
   31 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   31     | TOK_L_PARENTH • expression TOK_R_PARENTH
   32     | • TOK_MINUS expression
   33     | • TOK_NOT expression
   34     | • TOK_DBL_PLUS lvalue
   35     | • lvalue TOK_DBL_PLUS
   36     | • TOK_DBL_MINUS lvalue
   37     | • lvalue TOK_DBL_MINUS
   38     | • primary
   39 assignexpr: • lvalue TOK_ASSIGN expression
   40 primary: • lvalue
   41        | • call
   42        | • objectdef
   43        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   43        | TOK_L_PARENTH • funcdef TOK_R_PARENTH
   44        | • const
   45 lvalue: • TOK_ID
   46       | • TOK_LOCAL TOK_ID
   47       | • TOK_DBL_COLON TOK_ID
   48       | • member
   49 member: • lvalue TOK_DOT TOK_ID
   50       | • lvalue TOK_L_BR expression TOK_R_BR
   51       | • call TOK_DOT TOK_ID
   52       | • call TOK_L_BR expression TOK_R_BR
   53 call: • call normcall
   54     | • lvalue callsuffix
   55     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   55     | TOK_L_PARENTH • funcdef TOK_R_PARENTH normcall
   65 objectdef: • TOK_L_BR elist TOK_R_BR
   66          | • TOK_L_BR indexed TOK_R_BR
   73 funcprefix: • TOK_FUNCTION funcname
   76 funcdef: • funcprefix funcargs funcbody
   77 const: • TOK_INT
   78      | • TOK_FLOAT
   79      | • TOK_STRING
   80      | • TOK_NIL
   81      | • TOK_TRUE
   82      | • TOK_FALSE

    TOK_FUNCTION   shift, and go to state 8
    TOK_NOT        shift, and go to state 12
    TOK_LOCAL      shift, and go to state 13
    TOK_TRUE       shift, and go to state 14
    TOK_FALSE      shift, and go to state 15
    TOK_NIL        shift, and go to state 16
    TOK_MINUS      shift, and go to state 17
    TOK_DBL_PLUS   shift, and go to state 18
    TOK_DBL_MINUS  shift, and go to state 19
    TOK_L_BR       shift, and go to state 21
    TOK_L_PARENTH  shift, and go to state 22
    TOK_DBL_COLON  shift, and go to state 24
    TOK_ID         shift, and go to state 25
    TOK_INT        shift, and go to state 26
    TOK_FLOAT      shift, and go to state 27
    TOK_STRING     shift, and go to state 28

    expression  go to state 69
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    funcprefix  go to state 39
    funcdef     go to state 70
    const       go to state 41


State 23

   12 statement: TOK_SEMICOLON •

    $default  reduce using rule 12 (statement)


State 24

   47 lvalue: TOK_DBL_COLON • TOK_ID

    TOK_ID  shift, and go to state 71


State 25

   45 lvalue: TOK_ID •

    $default  reduce using rule 45 (lvalue)


State 26

   77 const: TOK_INT •

    $default  reduce using rule 77 (const)


State 27

   78 const: TOK_FLOAT •

    $default  reduce using rule 78 (const)


State 28

   79 const: TOK_STRING •

    $default  reduce using rule 79 (const)


State 29

    1 program: statements statement •  [$end]
   14 statements: statements statement •  [error, TOK_IF, TOK_WHILE, TOK_FOR, TOK_FUNCTION, TOK_RETURN, TOK_BREAK, TOK_CONTINUE, TOK_NOT, TOK_LOCAL, TOK_TRUE, TOK_FALSE, TOK_NIL, TOK_MINUS, TOK_DBL_PLUS, TOK_DBL_MINUS, TOK_L_CURLY_BR, TOK_L_BR, TOK_L_PARENTH, TOK_SEMICOLON, TOK_DBL_COLON, TOK_ID, TOK_INT, TOK_FLOAT, TOK_STRING]

    $end      reduce using rule 1 (program)
    $default  reduce using rule 14 (statements)


State 30

    3 statement: expression • TOK_SEMICOLON
   17 expression: expression • TOK_PLUS expression
   18           | expression • TOK_MINUS expression
   19           | expression • TOK_MULTIPLY expression
   20           | expression • TOK_DIVIDE expression
   21           | expression • TOK_MODULO expression
   22           | expression • TOK_GREATER expression
   23           | expression • TOK_LESS expression
   24           | expression • TOK_GR_EQUAL expression
   25           | expression • TOK_LS_EQUAL expression
   26           | expression • TOK_EQUAL expression
   27           | expression • TOK_N_EQUAL expression
   28           | expression • TOK_AND expression
   29           | expression • TOK_OR expression

    TOK_AND        shift, and go to state 72
    TOK_OR         shift, and go to state 73
    TOK_PLUS       shift, and go to state 74
    TOK_MINUS      shift, and go to state 75
    TOK_MULTIPLY   shift, and go to state 76
    TOK_DIVIDE     shift, and go to state 77
    TOK_MODULO     shift, and go to state 78
    TOK_EQUAL      shift, and go to state 79
    TOK_N_EQUAL    shift, and go to state 80
    TOK_GREATER    shift, and go to state 81
    TOK_LESS       shift, and go to state 82
    TOK_GR_EQUAL   shift, and go to state 83
    TOK_LS_EQUAL   shift, and go to state 84
    TOK_SEMICOLON  shift, and go to state 85


State 31

   30 expression: term •

    $default  reduce using rule 30 (expression)


State 32

   16 expression: assignexpr •

    $default  reduce using rule 16 (expression)


State 33

   38 term: primary •

    $default  reduce using rule 38 (term)


State 34

   35 term: lvalue • TOK_DBL_PLUS
   37     | lvalue • TOK_DBL_MINUS
   39 assignexpr: lvalue • TOK_ASSIGN expression
   40 primary: lvalue •  [TOK_AND, TOK_OR, TOK_PLUS, TOK_MINUS, TOK_MULTIPLY, TOK_DIVIDE, TOK_MODULO, TOK_EQUAL, TOK_N_EQUAL, TOK_GREATER, TOK_LESS, TOK_GR_EQUAL, TOK_LS_EQUAL, TOK_R_CURLY_BR, TOK_R_BR, TOK_R_PARENTH, TOK_SEMICOLON, TOK_COMMA, TOK_COLON]
   49 member: lvalue • TOK_DOT TOK_ID
   50       | lvalue • TOK_L_BR expression TOK_R_BR
   54 call: lvalue • callsuffix
   56 callsuffix: • normcall
   57           | • methodcall
   58 normcall: • TOK_L_PARENTH elist TOK_R_PARENTH
   59 methodcall: • TOK_DBL_DOT TOK_ID normcall

    TOK_ASSIGN     shift, and go to state 86
    TOK_DBL_PLUS   shift, and go to state 87
    TOK_DBL_MINUS  shift, and go to state 88
    TOK_L_BR       shift, and go to state 89
    TOK_L_PARENTH  shift, and go to state 90
    TOK_DOT        shift, and go to state 91
    TOK_DBL_DOT    shift, and go to state 92

    $default  reduce using rule 40 (primary)

    callsuffix  go to state 93
    normcall    go to state 94
    methodcall  go to state 95


State 35

   48 lvalue: member •

    $default  reduce using rule 48 (lvalue)


State 36

   41 primary: call •  [TOK_AND, TOK_OR, TOK_PLUS, TOK_MINUS, TOK_MULTIPLY, TOK_DIVIDE, TOK_MODULO, TOK_EQUAL, TOK_N_EQUAL, TOK_GREATER, TOK_LESS, TOK_GR_EQUAL, TOK_LS_EQUAL, TOK_R_CURLY_BR, TOK_R_BR, TOK_R_PARENTH, TOK_SEMICOLON, TOK_COMMA, TOK_COLON]
   51 member: call • TOK_DOT TOK_ID
   52       | call • TOK_L_BR expression TOK_R_BR
   53 call: call • normcall
   58 normcall: • TOK_L_PARENTH elist TOK_R_PARENTH

    TOK_L_BR       shift, and go to state 96
    TOK_L_PARENTH  shift, and go to state 90
    TOK_DOT        shift, and go to state 97

    $default  reduce using rule 41 (primary)

    normcall  go to state 98


State 37

   42 primary: objectdef •

    $default  reduce using rule 42 (primary)


State 38

   10 statement: block •

    $default  reduce using rule 10 (statement)


State 39

   74 funcargs: • TOK_L_PARENTH idlist TOK_R_PARENTH
   76 funcdef: funcprefix • funcargs funcbody

    TOK_L_PARENTH  shift, and go to state 99

    funcargs  go to state 100


State 40

   11 statement: funcdef •

    $default  reduce using rule 11 (statement)


State 41

   44 primary: const •

    $default  reduce using rule 44 (primary)


State 42

    4 statement: if_statement •

    $default  reduce using rule 4 (statement)


State 43

    5 statement: while_statement •

    $default  reduce using rule 5 (statement)


State 44

    6 statement: for_statement •

    $default  reduce using rule 6 (statement)


State 45

    7 statement: return_statement •

    $default  reduce using rule 7 (statement)


State 46

   13 statement: error TOK_SEMICOLON •

    $default  reduce using rule 13 (statement)


State 47

   16 expression: • assignexpr
   17           | • expression TOK_PLUS expression
   18           | • expression TOK_MINUS expression
   19           | • expression TOK_MULTIPLY expression
   20           | • expression TOK_DIVIDE expression
   21           | • expression TOK_MODULO expression
   22           | • expression TOK_GREATER expression
   23           | • expression TOK_LESS expression
   24           | • expression TOK_GR_EQUAL expression
   25           | • expression TOK_LS_EQUAL expression
   26           | • expression TOK_EQUAL expression
   27           | • expression TOK_N_EQUAL expression
   28           | • expression TOK_AND expression
   29           | • expression TOK_OR expression
   30           | • term
   31 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   32     | • TOK_MINUS expression
   33     | • TOK_NOT expression
   34     | • TOK_DBL_PLUS lvalue
   35     | • lvalue TOK_DBL_PLUS
   36     | • TOK_DBL_MINUS lvalue
   37     | • lvalue TOK_DBL_MINUS
   38     | • primary
   39 assignexpr: • lvalue TOK_ASSIGN expression
   40 primary: • lvalue
   41        | • call
   42        | • objectdef
   43        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   44        | • const
   45 lvalue: • TOK_ID
   46       | • TOK_LOCAL TOK_ID
   47       | • TOK_DBL_COLON TOK_ID
   48       | • member
   49 member: • lvalue TOK_DOT TOK_ID
   50       | • lvalue TOK_L_BR expression TOK_R_BR
   51       | • call TOK_DOT TOK_ID
   52       | • call TOK_L_BR expression TOK_R_BR
   53 call: • call normcall
   54     | • lvalue callsuffix
   55     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   65 objectdef: • TOK_L_BR elist TOK_R_BR
   66          | • TOK_L_BR indexed TOK_R_BR
   77 const: • TOK_INT
   78      | • TOK_FLOAT
   79      | • TOK_STRING
   80      | • TOK_NIL
   81      | • TOK_TRUE
   82      | • TOK_FALSE
   86 if_statement: TOK_IF TOK_L_PARENTH • expression TOK_R_PARENTH statement
   87             | TOK_IF TOK_L_PARENTH • expression TOK_R_PARENTH statement TOK_ELSE statement

    TOK_NOT        shift, and go to state 12
    TOK_LOCAL      shift, and go to state 13
    TOK_TRUE       shift, and go to state 14
    TOK_FALSE      shift, and go to state 15
    TOK_NIL        shift, and go to state 16
    TOK_MINUS      shift, and go to state 17
    TOK_DBL_PLUS   shift, and go to state 18
    TOK_DBL_MINUS  shift, and go to state 19
    TOK_L_BR       shift, and go to state 21
    TOK_L_PARENTH  shift, and go to state 22
    TOK_DBL_COLON  shift, and go to state 24
    TOK_ID         shift, and go to state 25
    TOK_INT        shift, and go to state 26
    TOK_FLOAT      shift, and go to state 27
    TOK_STRING     shift, and go to state 28

    expression  go to state 101
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 48

   16 expression: • assignexpr
   17           | • expression TOK_PLUS expression
   18           | • expression TOK_MINUS expression
   19           | • expression TOK_MULTIPLY expression
   20           | • expression TOK_DIVIDE expression
   21           | • expression TOK_MODULO expression
   22           | • expression TOK_GREATER expression
   23           | • expression TOK_LESS expression
   24           | • expression TOK_GR_EQUAL expression
   25           | • expression TOK_LS_EQUAL expression
   26           | • expression TOK_EQUAL expression
   27           | • expression TOK_N_EQUAL expression
   28           | • expression TOK_AND expression
   29           | • expression TOK_OR expression
   30           | • term
   31 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   32     | • TOK_MINUS expression
   33     | • TOK_NOT expression
   34     | • TOK_DBL_PLUS lvalue
   35     | • lvalue TOK_DBL_PLUS
   36     | • TOK_DBL_MINUS lvalue
   37     | • lvalue TOK_DBL_MINUS
   38     | • primary
   39 assignexpr: • lvalue TOK_ASSIGN expression
   40 primary: • lvalue
   41        | • call
   42        | • objectdef
   43        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   44        | • const
   45 lvalue: • TOK_ID
   46       | • TOK_LOCAL TOK_ID
   47       | • TOK_DBL_COLON TOK_ID
   48       | • member
   49 member: • lvalue TOK_DOT TOK_ID
   50       | • lvalue TOK_L_BR expression TOK_R_BR
   51       | • call TOK_DOT TOK_ID
   52       | • call TOK_L_BR expression TOK_R_BR
   53 call: • call normcall
   54     | • lvalue callsuffix
   55     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   65 objectdef: • TOK_L_BR elist TOK_R_BR
   66          | • TOK_L_BR indexed TOK_R_BR
   77 const: • TOK_INT
   78      | • TOK_FLOAT
   79      | • TOK_STRING
   80      | • TOK_NIL
   81      | • TOK_TRUE
   82      | • TOK_FALSE
   88 while_statement: TOK_WHILE TOK_L_PARENTH • expression TOK_R_PARENTH statement

    TOK_NOT        shift, and go to state 12
    TOK_LOCAL      shift, and go to state 13
    TOK_TRUE       shift, and go to state 14
    TOK_FALSE      shift, and go to state 15
    TOK_NIL        shift, and go to state 16
    TOK_MINUS      shift, and go to state 17
    TOK_DBL_PLUS   shift, and go to state 18
    TOK_DBL_MINUS  shift, and go to state 19
    TOK_L_BR       shift, and go to state 21
    TOK_L_PARENTH  shift, and go to state 22
    TOK_DBL_COLON  shift, and go to state 24
    TOK_ID         shift, and go to state 25
    TOK_INT        shift, and go to state 26
    TOK_FLOAT      shift, and go to state 27
    TOK_STRING     shift, and go to state 28

    expression  go to state 102
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 49

   16 expression: • assignexpr
   17           | • expression TOK_PLUS expression
   18           | • expression TOK_MINUS expression
   19           | • expression TOK_MULTIPLY expression
   20           | • expression TOK_DIVIDE expression
   21           | • expression TOK_MODULO expression
   22           | • expression TOK_GREATER expression
   23           | • expression TOK_LESS expression
   24           | • expression TOK_GR_EQUAL expression
   25           | • expression TOK_LS_EQUAL expression
   26           | • expression TOK_EQUAL expression
   27           | • expression TOK_N_EQUAL expression
   28           | • expression TOK_AND expression
   29           | • expression TOK_OR expression
   30           | • term
   31 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   32     | • TOK_MINUS expression
   33     | • TOK_NOT expression
   34     | • TOK_DBL_PLUS lvalue
   35     | • lvalue TOK_DBL_PLUS
   36     | • TOK_DBL_MINUS lvalue
   37     | • lvalue TOK_DBL_MINUS
   38     | • primary
   39 assignexpr: • lvalue TOK_ASSIGN expression
   40 primary: • lvalue
   41        | • call
   42        | • objectdef
   43        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   44        | • const
   45 lvalue: • TOK_ID
   46       | • TOK_LOCAL TOK_ID
   47       | • TOK_DBL_COLON TOK_ID
   48       | • member
   49 member: • lvalue TOK_DOT TOK_ID
   50       | • lvalue TOK_L_BR expression TOK_R_BR
   51       | • call TOK_DOT TOK_ID
   52       | • call TOK_L_BR expression TOK_R_BR
   53 call: • call normcall
   54     | • lvalue callsuffix
   55     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   60 elist: • elist TOK_COMMA expression
   61      | • expression
   62      | ε •  [TOK_SEMICOLON, TOK_COMMA]
   65 objectdef: • TOK_L_BR elist TOK_R_BR
   66          | • TOK_L_BR indexed TOK_R_BR
   77 const: • TOK_INT
   78      | • TOK_FLOAT
   79      | • TOK_STRING
   80      | • TOK_NIL
   81      | • TOK_TRUE
   82      | • TOK_FALSE
   89 for_statement: TOK_FOR TOK_L_PARENTH • elist TOK_SEMICOLON expression TOK_SEMICOLON elist TOK_R_PARENTH statement

    TOK_NOT        shift, and go to state 12
    TOK_LOCAL      shift, and go to state 13
    TOK_TRUE       shift, and go to state 14
    TOK_FALSE      shift, and go to state 15
    TOK_NIL        shift, and go to state 16
    TOK_MINUS      shift, and go to state 17
    TOK_DBL_PLUS   shift, and go to state 18
    TOK_DBL_MINUS  shift, and go to state 19
    TOK_L_BR       shift, and go to state 21
    TOK_L_PARENTH  shift, and go to state 22
    TOK_DBL_COLON  shift, and go to state 24
    TOK_ID         shift, and go to state 25
    TOK_INT        shift, and go to state 26
    TOK_FLOAT      shift, and go to state 27
    TOK_STRING     shift, and go to state 28

    $default  reduce using rule 62 (elist)

    expression  go to state 65
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    elist       go to state 103
    objectdef   go to state 37
    const       go to state 41


State 50

   71 funcname: TOK_ID •

    $default  reduce using rule 71 (funcname)


State 51

   73 funcprefix: TOK_FUNCTION funcname •

    $default  reduce using rule 73 (funcprefix)


State 52

   90 return_statement: TOK_RETURN TOK_SEMICOLON •

    $default  reduce using rule 90 (return_statement)


State 53

   17 expression: expression • TOK_PLUS expression
   18           | expression • TOK_MINUS expression
   19           | expression • TOK_MULTIPLY expression
   20           | expression • TOK_DIVIDE expression
   21           | expression • TOK_MODULO expression
   22           | expression • TOK_GREATER expression
   23           | expression • TOK_LESS expression
   24           | expression • TOK_GR_EQUAL expression
   25           | expression • TOK_LS_EQUAL expression
   26           | expression • TOK_EQUAL expression
   27           | expression • TOK_N_EQUAL expression
   28           | expression • TOK_AND expression
   29           | expression • TOK_OR expression
   91 return_statement: TOK_RETURN expression • TOK_SEMICOLON

    TOK_AND        shift, and go to state 72
    TOK_OR         shift, and go to state 73
    TOK_PLUS       shift, and go to state 74
    TOK_MINUS      shift, and go to state 75
    TOK_MULTIPLY   shift, and go to state 76
    TOK_DIVIDE     shift, and go to state 77
    TOK_MODULO     shift, and go to state 78
    TOK_EQUAL      shift, and go to state 79
    TOK_N_EQUAL    shift, and go to state 80
    TOK_GREATER    shift, and go to state 81
    TOK_LESS       shift, and go to state 82
    TOK_GR_EQUAL   shift, and go to state 83
    TOK_LS_EQUAL   shift, and go to state 84
    TOK_SEMICOLON  shift, and go to state 104


State 54

    9 statement: TOK_BREAK TOK_SEMICOLON •

    $default  reduce using rule 9 (statement)


State 55

    8 statement: TOK_CONTINUE TOK_SEMICOLON •

    $default  reduce using rule 8 (statement)


State 56

   17 expression: expression • TOK_PLUS expression
   18           | expression • TOK_MINUS expression
   19           | expression • TOK_MULTIPLY expression
   20           | expression • TOK_DIVIDE expression
   21           | expression • TOK_MODULO expression
   22           | expression • TOK_GREATER expression
   23           | expression • TOK_LESS expression
   24           | expression • TOK_GR_EQUAL expression
   25           | expression • TOK_LS_EQUAL expression
   26           | expression • TOK_EQUAL expression
   27           | expression • TOK_N_EQUAL expression
   28           | expression • TOK_AND expression
   29           | expression • TOK_OR expression
   33 term: TOK_NOT expression •  [TOK_AND, TOK_OR, TOK_PLUS, TOK_MINUS, TOK_MULTIPLY, TOK_DIVIDE, TOK_MODULO, TOK_EQUAL, TOK_N_EQUAL, TOK_GREATER, TOK_LESS, TOK_GR_EQUAL, TOK_LS_EQUAL, TOK_R_CURLY_BR, TOK_R_BR, TOK_R_PARENTH, TOK_SEMICOLON, TOK_COMMA, TOK_COLON]

    $default  reduce using rule 33 (term)

    Conflict between rule 33 and token TOK_AND resolved as reduce (TOK_AND < TOK_NOT).
    Conflict between rule 33 and token TOK_OR resolved as reduce (TOK_OR < TOK_NOT).
    Conflict between rule 33 and token TOK_PLUS resolved as reduce (TOK_PLUS < TOK_NOT).
    Conflict between rule 33 and token TOK_MINUS resolved as reduce (TOK_MINUS < TOK_NOT).
    Conflict between rule 33 and token TOK_MULTIPLY resolved as reduce (TOK_MULTIPLY < TOK_NOT).
    Conflict between rule 33 and token TOK_DIVIDE resolved as reduce (TOK_DIVIDE < TOK_NOT).
    Conflict between rule 33 and token TOK_MODULO resolved as reduce (TOK_MODULO < TOK_NOT).
    Conflict between rule 33 and token TOK_EQUAL resolved as reduce (TOK_EQUAL < TOK_NOT).
    Conflict between rule 33 and token TOK_N_EQUAL resolved as reduce (TOK_N_EQUAL < TOK_NOT).
    Conflict between rule 33 and token TOK_GREATER resolved as reduce (TOK_GREATER < TOK_NOT).
    Conflict between rule 33 and token TOK_LESS resolved as reduce (TOK_LESS < TOK_NOT).
    Conflict between rule 33 and token TOK_GR_EQUAL resolved as reduce (TOK_GR_EQUAL < TOK_NOT).
    Conflict between rule 33 and token TOK_LS_EQUAL resolved as reduce (TOK_LS_EQUAL < TOK_NOT).


State 57

   46 lvalue: TOK_LOCAL TOK_ID •

    $default  reduce using rule 46 (lvalue)


State 58

   17 expression: expression • TOK_PLUS expression
   18           | expression • TOK_MINUS expression
   19           | expression • TOK_MULTIPLY expression
   20           | expression • TOK_DIVIDE expression
   21           | expression • TOK_MODULO expression
   22           | expression • TOK_GREATER expression
   23           | expression • TOK_LESS expression
   24           | expression • TOK_GR_EQUAL expression
   25           | expression • TOK_LS_EQUAL expression
   26           | expression • TOK_EQUAL expression
   27           | expression • TOK_N_EQUAL expression
   28           | expression • TOK_AND expression
   29           | expression • TOK_OR expression
   32 term: TOK_MINUS expression •  [TOK_AND, TOK_OR, TOK_PLUS, TOK_MINUS, TOK_MULTIPLY, TOK_DIVIDE, TOK_MODULO, TOK_EQUAL, TOK_N_EQUAL, TOK_GREATER, TOK_LESS, TOK_GR_EQUAL, TOK_LS_EQUAL, TOK_R_CURLY_BR, TOK_R_BR, TOK_R_PARENTH, TOK_SEMICOLON, TOK_COMMA, TOK_COLON]

    $default  reduce using rule 32 (term)

    Conflict between rule 32 and token TOK_AND resolved as reduce (TOK_AND < TOK_UMINUS).
    Conflict between rule 32 and token TOK_OR resolved as reduce (TOK_OR < TOK_UMINUS).
    Conflict between rule 32 and token TOK_PLUS resolved as reduce (TOK_PLUS < TOK_UMINUS).
    Conflict between rule 32 and token TOK_MINUS resolved as reduce (TOK_MINUS < TOK_UMINUS).
    Conflict between rule 32 and token TOK_MULTIPLY resolved as reduce (TOK_MULTIPLY < TOK_UMINUS).
    Conflict between rule 32 and token TOK_DIVIDE resolved as reduce (TOK_DIVIDE < TOK_UMINUS).
    Conflict between rule 32 and token TOK_MODULO resolved as reduce (TOK_MODULO < TOK_UMINUS).
    Conflict between rule 32 and token TOK_EQUAL resolved as reduce (TOK_EQUAL < TOK_UMINUS).
    Conflict between rule 32 and token TOK_N_EQUAL resolved as reduce (TOK_N_EQUAL < TOK_UMINUS).
    Conflict between rule 32 and token TOK_GREATER resolved as reduce (TOK_GREATER < TOK_UMINUS).
    Conflict between rule 32 and token TOK_LESS resolved as reduce (TOK_LESS < TOK_UMINUS).
    Conflict between rule 32 and token TOK_GR_EQUAL resolved as reduce (TOK_GR_EQUAL < TOK_UMINUS).
    Conflict between rule 32 and token TOK_LS_EQUAL resolved as reduce (TOK_LS_EQUAL < TOK_UMINUS).


State 59

   55 call: TOK_L_PARENTH • funcdef TOK_R_PARENTH normcall
   73 funcprefix: • TOK_FUNCTION funcname
   76 funcdef: • funcprefix funcargs funcbody

    TOK_FUNCTION  shift, and go to state 8

    funcprefix  go to state 39
    funcdef     go to state 105


State 60

   34 term: TOK_DBL_PLUS lvalue •  [TOK_AND, TOK_OR, TOK_PLUS, TOK_MINUS, TOK_MULTIPLY, TOK_DIVIDE, TOK_MODULO, TOK_EQUAL, TOK_N_EQUAL, TOK_GREATER, TOK_LESS, TOK_GR_EQUAL, TOK_LS_EQUAL, TOK_R_CURLY_BR, TOK_R_BR, TOK_R_PARENTH, TOK_SEMICOLON, TOK_COMMA, TOK_COLON]
   49 member: lvalue • TOK_DOT TOK_ID
   50       | lvalue • TOK_L_BR expression TOK_R_BR
   54 call: lvalue • callsuffix
   56 callsuffix: • normcall
   57           | • methodcall
   58 normcall: • TOK_L_PARENTH elist TOK_R_PARENTH
   59 methodcall: • TOK_DBL_DOT TOK_ID normcall

    TOK_L_BR       shift, and go to state 89
    TOK_L_PARENTH  shift, and go to state 90
    TOK_DOT        shift, and go to state 91
    TOK_DBL_DOT    shift, and go to state 92

    $default  reduce using rule 34 (term)

    callsuffix  go to state 93
    normcall    go to state 94
    methodcall  go to state 95


State 61

   51 member: call • TOK_DOT TOK_ID
   52       | call • TOK_L_BR expression TOK_R_BR
   53 call: call • normcall
   58 normcall: • TOK_L_PARENTH elist TOK_R_PARENTH

    TOK_L_BR       shift, and go to state 96
    TOK_L_PARENTH  shift, and go to state 90
    TOK_DOT        shift, and go to state 97

    normcall  go to state 98


State 62

   36 term: TOK_DBL_MINUS lvalue •  [TOK_AND, TOK_OR, TOK_PLUS, TOK_MINUS, TOK_MULTIPLY, TOK_DIVIDE, TOK_MODULO, TOK_EQUAL, TOK_N_EQUAL, TOK_GREATER, TOK_LESS, TOK_GR_EQUAL, TOK_LS_EQUAL, TOK_R_CURLY_BR, TOK_R_BR, TOK_R_PARENTH, TOK_SEMICOLON, TOK_COMMA, TOK_COLON]
   49 member: lvalue • TOK_DOT TOK_ID
   50       | lvalue • TOK_L_BR expression TOK_R_BR
   54 call: lvalue • callsuffix
   56 callsuffix: • normcall
   57           | • methodcall
   58 normcall: • TOK_L_PARENTH elist TOK_R_PARENTH
   59 methodcall: • TOK_DBL_DOT TOK_ID normcall

    TOK_L_BR       shift, and go to state 89
    TOK_L_PARENTH  shift, and go to state 90
    TOK_DOT        shift, and go to state 91
    TOK_DBL_DOT    shift, and go to state 92

    $default  reduce using rule 36 (term)

    callsuffix  go to state 93
    normcall    go to state 94
    methodcall  go to state 95


State 63

   14 statements: • statements statement
   15           | ε •
   69 block: TOK_L_CURLY_BR $@1 • statements TOK_R_CURLY_BR

    $default  reduce using rule 15 (statements)

    statements  go to state 106


State 64

   16 expression: • assignexpr
   17           | • expression TOK_PLUS expression
   18           | • expression TOK_MINUS expression
   19           | • expression TOK_MULTIPLY expression
   20           | • expression TOK_DIVIDE expression
   21           | • expression TOK_MODULO expression
   22           | • expression TOK_GREATER expression
   23           | • expression TOK_LESS expression
   24           | • expression TOK_GR_EQUAL expression
   25           | • expression TOK_LS_EQUAL expression
   26           | • expression TOK_EQUAL expression
   27           | • expression TOK_N_EQUAL expression
   28           | • expression TOK_AND expression
   29           | • expression TOK_OR expression
   30           | • term
   31 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   32     | • TOK_MINUS expression
   33     | • TOK_NOT expression
   34     | • TOK_DBL_PLUS lvalue
   35     | • lvalue TOK_DBL_PLUS
   36     | • TOK_DBL_MINUS lvalue
   37     | • lvalue TOK_DBL_MINUS
   38     | • primary
   39 assignexpr: • lvalue TOK_ASSIGN expression
   40 primary: • lvalue
   41        | • call
   42        | • objectdef
   43        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   44        | • const
   45 lvalue: • TOK_ID
   46       | • TOK_LOCAL TOK_ID
   47       | • TOK_DBL_COLON TOK_ID
   48       | • member
   49 member: • lvalue TOK_DOT TOK_ID
   50       | • lvalue TOK_L_BR expression TOK_R_BR
   51       | • call TOK_DOT TOK_ID
   52       | • call TOK_L_BR expression TOK_R_BR
   53 call: • call normcall
   54     | • lvalue callsuffix
   55     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   65 objectdef: • TOK_L_BR elist TOK_R_BR
   66          | • TOK_L_BR indexed TOK_R_BR
   67 indexedelem: TOK_L_CURLY_BR • expression TOK_COLON expression TOK_R_CURLY_BR
   77 const: • TOK_INT
   78      | • TOK_FLOAT
   79      | • TOK_STRING
   80      | • TOK_NIL
   81      | • TOK_TRUE
   82      | • TOK_FALSE

    TOK_NOT        shift, and go to state 12
    TOK_LOCAL      shift, and go to state 13
    TOK_TRUE       shift, and go to state 14
    TOK_FALSE      shift, and go to state 15
    TOK_NIL        shift, and go to state 16
    TOK_MINUS      shift, and go to state 17
    TOK_DBL_PLUS   shift, and go to state 18
    TOK_DBL_MINUS  shift, and go to state 19
    TOK_L_BR       shift, and go to state 21
    TOK_L_PARENTH  shift, and go to state 22
    TOK_DBL_COLON  shift, and go to state 24
    TOK_ID         shift, and go to state 25
    TOK_INT        shift, and go to state 26
    TOK_FLOAT      shift, and go to state 27
    TOK_STRING     shift, and go to state 28

    expression  go to state 107
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 65

   17 expression: expression • TOK_PLUS expression
   18           | expression • TOK_MINUS expression
   19           | expression • TOK_MULTIPLY expression
   20           | expression • TOK_DIVIDE expression
   21           | expression • TOK_MODULO expression
   22           | expression • TOK_GREATER expression
   23           | expression • TOK_LESS expression
   24           | expression • TOK_GR_EQUAL expression
   25           | expression • TOK_LS_EQUAL expression
   26           | expression • TOK_EQUAL expression
   27           | expression • TOK_N_EQUAL expression
   28           | expression • TOK_AND expression
   29           | expression • TOK_OR expression
   61 elist: expression •  [TOK_R_BR, TOK_R_PARENTH, TOK_SEMICOLON, TOK_COMMA]

    TOK_AND       shift, and go to state 72
    TOK_OR        shift, and go to state 73
    TOK_PLUS      shift, and go to state 74
    TOK_MINUS     shift, and go to state 75
    TOK_MULTIPLY  shift, and go to state 76
    TOK_DIVIDE    shift, and go to state 77
    TOK_MODULO    shift, and go to state 78
    TOK_EQUAL     shift, and go to state 79
    TOK_N_EQUAL   shift, and go to state 80
    TOK_GREATER   shift, and go to state 81
    TOK_LESS      shift, and go to state 82
    TOK_GR_EQUAL  shift, and go to state 83
    TOK_LS_EQUAL  shift, and go to state 84

    $default  reduce using rule 61 (elist)


State 66

   60 elist: elist • TOK_COMMA expression
   65 objectdef: TOK_L_BR elist • TOK_R_BR

    TOK_R_BR   shift, and go to state 108
    TOK_COMMA  shift, and go to state 109


State 67

   64 indexed: indexed • TOK_COMMA indexedelem
   66 objectdef: TOK_L_BR indexed • TOK_R_BR

    TOK_R_BR   shift, and go to state 110
    TOK_COMMA  shift, and go to state 111


State 68

   63 indexed: indexedelem •

    $default  reduce using rule 63 (indexed)


State 69

   17 expression: expression • TOK_PLUS expression
   18           | expression • TOK_MINUS expression
   19           | expression • TOK_MULTIPLY expression
   20           | expression • TOK_DIVIDE expression
   21           | expression • TOK_MODULO expression
   22           | expression • TOK_GREATER expression
   23           | expression • TOK_LESS expression
   24           | expression • TOK_GR_EQUAL expression
   25           | expression • TOK_LS_EQUAL expression
   26           | expression • TOK_EQUAL expression
   27           | expression • TOK_N_EQUAL expression
   28           | expression • TOK_AND expression
   29           | expression • TOK_OR expression
   31 term: TOK_L_PARENTH expression • TOK_R_PARENTH

    TOK_AND        shift, and go to state 72
    TOK_OR         shift, and go to state 73
    TOK_PLUS       shift, and go to state 74
    TOK_MINUS      shift, and go to state 75
    TOK_MULTIPLY   shift, and go to state 76
    TOK_DIVIDE     shift, and go to state 77
    TOK_MODULO     shift, and go to state 78
    TOK_EQUAL      shift, and go to state 79
    TOK_N_EQUAL    shift, and go to state 80
    TOK_GREATER    shift, and go to state 81
    TOK_LESS       shift, and go to state 82
    TOK_GR_EQUAL   shift, and go to state 83
    TOK_LS_EQUAL   shift, and go to state 84
    TOK_R_PARENTH  shift, and go to state 112


State 70

   43 primary: TOK_L_PARENTH funcdef • TOK_R_PARENTH
   55 call: TOK_L_PARENTH funcdef • TOK_R_PARENTH normcall

    TOK_R_PARENTH  shift, and go to state 113


State 71

   47 lvalue: TOK_DBL_COLON TOK_ID •

    $default  reduce using rule 47 (lvalue)


State 72

   16 expression: • assignexpr
   17           | • expression TOK_PLUS expression
   18           | • expression TOK_MINUS expression
   19           | • expression TOK_MULTIPLY expression
   20           | • expression TOK_DIVIDE expression
   21           | • expression TOK_MODULO expression
   22           | • expression TOK_GREATER expression
   23           | • expression TOK_LESS expression
   24           | • expression TOK_GR_EQUAL expression
   25           | • expression TOK_LS_EQUAL expression
   26           | • expression TOK_EQUAL expression
   27           | • expression TOK_N_EQUAL expression
   28           | • expression TOK_AND expression
   28           | expression TOK_AND • expression
   29           | • expression TOK_OR expression
   30           | • term
   31 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   32     | • TOK_MINUS expression
   33     | • TOK_NOT expression
   34     | • TOK_DBL_PLUS lvalue
   35     | • lvalue TOK_DBL_PLUS
   36     | • TOK_DBL_MINUS lvalue
   37     | • lvalue TOK_DBL_MINUS
   38     | • primary
   39 assignexpr: • lvalue TOK_ASSIGN expression
   40 primary: • lvalue
   41        | • call
   42        | • objectdef
   43        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   44        | • const
   45 lvalue: • TOK_ID
   46       | • TOK_LOCAL TOK_ID
   47       | • TOK_DBL_COLON TOK_ID
   48       | • member
   49 member: • lvalue TOK_DOT TOK_ID
   50       | • lvalue TOK_L_BR expression TOK_R_BR
   51       | • call TOK_DOT TOK_ID
   52       | • call TOK_L_BR expression TOK_R_BR
   53 call: • call normcall
   54     | • lvalue callsuffix
   55     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   65 objectdef: • TOK_L_BR elist TOK_R_BR
   66          | • TOK_L_BR indexed TOK_R_BR
   77 const: • TOK_INT
   78      | • TOK_FLOAT
   79      | • TOK_STRING
   80      | • TOK_NIL
   81      | • TOK_TRUE
   82      | • TOK_FALSE

    TOK_NOT        shift, and go to state 12
    TOK_LOCAL      shift, and go to state 13
    TOK_TRUE       shift, and go to state 14
    TOK_FALSE      shift, and go to state 15
    TOK_NIL        shift, and go to state 16
    TOK_MINUS      shift, and go to state 17
    TOK_DBL_PLUS   shift, and go to state 18
    TOK_DBL_MINUS  shift, and go to state 19
    TOK_L_BR       shift, and go to state 21
    TOK_L_PARENTH  shift, and go to state 22
    TOK_DBL_COLON  shift, and go to state 24
    TOK_ID         shift, and go to state 25
    TOK_INT        shift, and go to state 26
    TOK_FLOAT      shift, and go to state 27
    TOK_STRING     shift, and go to state 28

    expression  go to state 114
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 73

   16 expression: • assignexpr
   17           | • expression TOK_PLUS expression
   18           | • expression TOK_MINUS expression
   19           | • expression TOK_MULTIPLY expression
   20           | • expression TOK_DIVIDE expression
   21           | • expression TOK_MODULO expression
   22           | • expression TOK_GREATER expression
   23           | • expression TOK_LESS expression
   24           | • expression TOK_GR_EQUAL expression
   25           | • expression TOK_LS_EQUAL expression
   26           | • expression TOK_EQUAL expression
   27           | • expression TOK_N_EQUAL expression
   28           | • expression TOK_AND expression
   29           | • expression TOK_OR expression
   29           | expression TOK_OR • expression
   30           | • term
   31 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   32     | • TOK_MINUS expression
   33     | • TOK_NOT expression
   34     | • TOK_DBL_PLUS lvalue
   35     | • lvalue TOK_DBL_PLUS
   36     | • TOK_DBL_MINUS lvalue
   37     | • lvalue TOK_DBL_MINUS
   38     | • primary
   39 assignexpr: • lvalue TOK_ASSIGN expression
   40 primary: • lvalue
   41        | • call
   42        | • objectdef
   43        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   44        | • const
   45 lvalue: • TOK_ID
   46       | • TOK_LOCAL TOK_ID
   47       | • TOK_DBL_COLON TOK_ID
   48       | • member
   49 member: • lvalue TOK_DOT TOK_ID
   50       | • lvalue TOK_L_BR expression TOK_R_BR
   51       | • call TOK_DOT TOK_ID
   52       | • call TOK_L_BR expression TOK_R_BR
   53 call: • call normcall
   54     | • lvalue callsuffix
   55     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   65 objectdef: • TOK_L_BR elist TOK_R_BR
   66          | • TOK_L_BR indexed TOK_R_BR
   77 const: • TOK_INT
   78      | • TOK_FLOAT
   79      | • TOK_STRING
   80      | • TOK_NIL
   81      | • TOK_TRUE
   82      | • TOK_FALSE

    TOK_NOT        shift, and go to state 12
    TOK_LOCAL      shift, and go to state 13
    TOK_TRUE       shift, and go to state 14
    TOK_FALSE      shift, and go to state 15
    TOK_NIL        shift, and go to state 16
    TOK_MINUS      shift, and go to state 17
    TOK_DBL_PLUS   shift, and go to state 18
    TOK_DBL_MINUS  shift, and go to state 19
    TOK_L_BR       shift, and go to state 21
    TOK_L_PARENTH  shift, and go to state 22
    TOK_DBL_COLON  shift, and go to state 24
    TOK_ID         shift, and go to state 25
    TOK_INT        shift, and go to state 26
    TOK_FLOAT      shift, and go to state 27
    TOK_STRING     shift, and go to state 28

    expression  go to state 115
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 74

   16 expression: • assignexpr
   17           | • expression TOK_PLUS expression
   17           | expression TOK_PLUS • expression
   18           | • expression TOK_MINUS expression
   19           | • expression TOK_MULTIPLY expression
   20           | • expression TOK_DIVIDE expression
   21           | • expression TOK_MODULO expression
   22           | • expression TOK_GREATER expression
   23           | • expression TOK_LESS expression
   24           | • expression TOK_GR_EQUAL expression
   25           | • expression TOK_LS_EQUAL expression
   26           | • expression TOK_EQUAL expression
   27           | • expression TOK_N_EQUAL expression
   28           | • expression TOK_AND expression
   29           | • expression TOK_OR expression
   30           | • term
   31 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   32     | • TOK_MINUS expression
   33     | • TOK_NOT expression
   34     | • TOK_DBL_PLUS lvalue
   35     | • lvalue TOK_DBL_PLUS
   36     | • TOK_DBL_MINUS lvalue
   37     | • lvalue TOK_DBL_MINUS
   38     | • primary
   39 assignexpr: • lvalue TOK_ASSIGN expression
   40 primary: • lvalue
   41        | • call
   42        | • objectdef
   43        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   44        | • const
   45 lvalue: • TOK_ID
   46       | • TOK_LOCAL TOK_ID
   47       | • TOK_DBL_COLON TOK_ID
   48       | • member
   49 member: • lvalue TOK_DOT TOK_ID
   50       | • lvalue TOK_L_BR expression TOK_R_BR
   51       | • call TOK_DOT TOK_ID
   52       | • call TOK_L_BR expression TOK_R_BR
   53 call: • call normcall
   54     | • lvalue callsuffix
   55     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   65 objectdef: • TOK_L_BR elist TOK_R_BR
   66          | • TOK_L_BR indexed TOK_R_BR
   77 const: • TOK_INT
   78      | • TOK_FLOAT
   79      | • TOK_STRING
   80      | • TOK_NIL
   81      | • TOK_TRUE
   82      | • TOK_FALSE

    TOK_NOT        shift, and go to state 12
    TOK_LOCAL      shift, and go to state 13
    TOK_TRUE       shift, and go to state 14
    TOK_FALSE      shift, and go to state 15
    TOK_NIL        shift, and go to state 16
    TOK_MINUS      shift, and go to state 17
    TOK_DBL_PLUS   shift, and go to state 18
    TOK_DBL_MINUS  shift, and go to state 19
    TOK_L_BR       shift, and go to state 21
    TOK_L_PARENTH  shift, and go to state 22
    TOK_DBL_COLON  shift, and go to state 24
    TOK_ID         shift, and go to state 25
    TOK_INT        shift, and go to state 26
    TOK_FLOAT      shift, and go to state 27
    TOK_STRING     shift, and go to state 28

    expression  go to state 116
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 75

   16 expression: • assignexpr
   17           | • expression TOK_PLUS expression
   18           | • expression TOK_MINUS expression
   18           | expression TOK_MINUS • expression
   19           | • expression TOK_MULTIPLY expression
   20           | • expression TOK_DIVIDE expression
   21           | • expression TOK_MODULO expression
   22           | • expression TOK_GREATER expression
   23           | • expression TOK_LESS expression
   24           | • expression TOK_GR_EQUAL expression
   25           | • expression TOK_LS_EQUAL expression
   26           | • expression TOK_EQUAL expression
   27           | • expression TOK_N_EQUAL expression
   28           | • expression TOK_AND expression
   29           | • expression TOK_OR expression
   30           | • term
   31 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   32     | • TOK_MINUS expression
   33     | • TOK_NOT expression
   34     | • TOK_DBL_PLUS lvalue
   35     | • lvalue TOK_DBL_PLUS
   36     | • TOK_DBL_MINUS lvalue
   37     | • lvalue TOK_DBL_MINUS
   38     | • primary
   39 assignexpr: • lvalue TOK_ASSIGN expression
   40 primary: • lvalue
   41        | • call
   42        | • objectdef
   43        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   44        | • const
   45 lvalue: • TOK_ID
   46       | • TOK_LOCAL TOK_ID
   47       | • TOK_DBL_COLON TOK_ID
   48       | • member
   49 member: • lvalue TOK_DOT TOK_ID
   50       | • lvalue TOK_L_BR expression TOK_R_BR
   51       | • call TOK_DOT TOK_ID
   52       | • call TOK_L_BR expression TOK_R_BR
   53 call: • call normcall
   54     | • lvalue callsuffix
   55     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   65 objectdef: • TOK_L_BR elist TOK_R_BR
   66          | • TOK_L_BR indexed TOK_R_BR
   77 const: • TOK_INT
   78      | • TOK_FLOAT
   79      | • TOK_STRING
   80      | • TOK_NIL
   81      | • TOK_TRUE
   82      | • TOK_FALSE

    TOK_NOT        shift, and go to state 12
    TOK_LOCAL      shift, and go to state 13
    TOK_TRUE       shift, and go to state 14
    TOK_FALSE      shift, and go to state 15
    TOK_NIL        shift, and go to state 16
    TOK_MINUS      shift, and go to state 17
    TOK_DBL_PLUS   shift, and go to state 18
    TOK_DBL_MINUS  shift, and go to state 19
    TOK_L_BR       shift, and go to state 21
    TOK_L_PARENTH  shift, and go to state 22
    TOK_DBL_COLON  shift, and go to state 24
    TOK_ID         shift, and go to state 25
    TOK_INT        shift, and go to state 26
    TOK_FLOAT      shift, and go to state 27
    TOK_STRING     shift, and go to state 28

    expression  go to state 117
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 76

   16 expression: • assignexpr
   17           | • expression TOK_PLUS expression
   18           | • expression TOK_MINUS expression
   19           | • expression TOK_MULTIPLY expression
   19           | expression TOK_MULTIPLY • expression
   20           | • expression TOK_DIVIDE expression
   21           | • expression TOK_MODULO expression
   22           | • expression TOK_GREATER expression
   23           | • expression TOK_LESS expression
   24           | • expression TOK_GR_EQUAL expression
   25           | • expression TOK_LS_EQUAL expression
   26           | • expression TOK_EQUAL expression
   27           | • expression TOK_N_EQUAL expression
   28           | • expression TOK_AND expression
   29           | • expression TOK_OR expression
   30           | • term
   31 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   32     | • TOK_MINUS expression
   33     | • TOK_NOT expression
   34     | • TOK_DBL_PLUS lvalue
   35     | • lvalue TOK_DBL_PLUS
   36     | • TOK_DBL_MINUS lvalue
   37     | • lvalue TOK_DBL_MINUS
   38     | • primary
   39 assignexpr: • lvalue TOK_ASSIGN expression
   40 primary: • lvalue
   41        | • call
   42        | • objectdef
   43        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   44        | • const
   45 lvalue: • TOK_ID
   46       | • TOK_LOCAL TOK_ID
   47       | • TOK_DBL_COLON TOK_ID
   48       | • member
   49 member: • lvalue TOK_DOT TOK_ID
   50       | • lvalue TOK_L_BR expression TOK_R_BR
   51       | • call TOK_DOT TOK_ID
   52       | • call TOK_L_BR expression TOK_R_BR
   53 call: • call normcall
   54     | • lvalue callsuffix
   55     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   65 objectdef: • TOK_L_BR elist TOK_R_BR
   66          | • TOK_L_BR indexed TOK_R_BR
   77 const: • TOK_INT
   78      | • TOK_FLOAT
   79      | • TOK_STRING
   80      | • TOK_NIL
   81      | • TOK_TRUE
   82      | • TOK_FALSE

    TOK_NOT        shift, and go to state 12
    TOK_LOCAL      shift, and go to state 13
    TOK_TRUE       shift, and go to state 14
    TOK_FALSE      shift, and go to state 15
    TOK_NIL        shift, and go to state 16
    TOK_MINUS      shift, and go to state 17
    TOK_DBL_PLUS   shift, and go to state 18
    TOK_DBL_MINUS  shift, and go to state 19
    TOK_L_BR       shift, and go to state 21
    TOK_L_PARENTH  shift, and go to state 22
    TOK_DBL_COLON  shift, and go to state 24
    TOK_ID         shift, and go to state 25
    TOK_INT        shift, and go to state 26
    TOK_FLOAT      shift, and go to state 27
    TOK_STRING     shift, and go to state 28

    expression  go to state 118
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 77

   16 expression: • assignexpr
   17           | • expression TOK_PLUS expression
   18           | • expression TOK_MINUS expression
   19           | • expression TOK_MULTIPLY expression
   20           | • expression TOK_DIVIDE expression
   20           | expression TOK_DIVIDE • expression
   21           | • expression TOK_MODULO expression
   22           | • expression TOK_GREATER expression
   23           | • expression TOK_LESS expression
   24           | • expression TOK_GR_EQUAL expression
   25           | • expression TOK_LS_EQUAL expression
   26           | • expression TOK_EQUAL expression
   27           | • expression TOK_N_EQUAL expression
   28           | • expression TOK_AND expression
   29           | • expression TOK_OR expression
   30           | • term
   31 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   32     | • TOK_MINUS expression
   33     | • TOK_NOT expression
   34     | • TOK_DBL_PLUS lvalue
   35     | • lvalue TOK_DBL_PLUS
   36     | • TOK_DBL_MINUS lvalue
   37     | • lvalue TOK_DBL_MINUS
   38     | • primary
   39 assignexpr: • lvalue TOK_ASSIGN expression
   40 primary: • lvalue
   41        | • call
   42        | • objectdef
   43        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   44        | • const
   45 lvalue: • TOK_ID
   46       | • TOK_LOCAL TOK_ID
   47       | • TOK_DBL_COLON TOK_ID
   48       | • member
   49 member: • lvalue TOK_DOT TOK_ID
   50       | • lvalue TOK_L_BR expression TOK_R_BR
   51       | • call TOK_DOT TOK_ID
   52       | • call TOK_L_BR expression TOK_R_BR
   53 call: • call normcall
   54     | • lvalue callsuffix
   55     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   65 objectdef: • TOK_L_BR elist TOK_R_BR
   66          | • TOK_L_BR indexed TOK_R_BR
   77 const: • TOK_INT
   78      | • TOK_FLOAT
   79      | • TOK_STRING
   80      | • TOK_NIL
   81      | • TOK_TRUE
   82      | • TOK_FALSE

    TOK_NOT        shift, and go to state 12
    TOK_LOCAL      shift, and go to state 13
    TOK_TRUE       shift, and go to state 14
    TOK_FALSE      shift, and go to state 15
    TOK_NIL        shift, and go to state 16
    TOK_MINUS      shift, and go to state 17
    TOK_DBL_PLUS   shift, and go to state 18
    TOK_DBL_MINUS  shift, and go to state 19
    TOK_L_BR       shift, and go to state 21
    TOK_L_PARENTH  shift, and go to state 22
    TOK_DBL_COLON  shift, and go to state 24
    TOK_ID         shift, and go to state 25
    TOK_INT        shift, and go to state 26
    TOK_FLOAT      shift, and go to state 27
    TOK_STRING     shift, and go to state 28

    expression  go to state 119
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 78

   16 expression: • assignexpr
   17           | • expression TOK_PLUS expression
   18           | • expression TOK_MINUS expression
   19           | • expression TOK_MULTIPLY expression
   20           | • expression TOK_DIVIDE expression
   21           | • expression TOK_MODULO expression
   21           | expression TOK_MODULO • expression
   22           | • expression TOK_GREATER expression
   23           | • expression TOK_LESS expression
   24           | • expression TOK_GR_EQUAL expression
   25           | • expression TOK_LS_EQUAL expression
   26           | • expression TOK_EQUAL expression
   27           | • expression TOK_N_EQUAL expression
   28           | • expression TOK_AND expression
   29           | • expression TOK_OR expression
   30           | • term
   31 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   32     | • TOK_MINUS expression
   33     | • TOK_NOT expression
   34     | • TOK_DBL_PLUS lvalue
   35     | • lvalue TOK_DBL_PLUS
   36     | • TOK_DBL_MINUS lvalue
   37     | • lvalue TOK_DBL_MINUS
   38     | • primary
   39 assignexpr: • lvalue TOK_ASSIGN expression
   40 primary: • lvalue
   41        | • call
   42        | • objectdef
   43        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   44        | • const
   45 lvalue: • TOK_ID
   46       | • TOK_LOCAL TOK_ID
   47       | • TOK_DBL_COLON TOK_ID
   48       | • member
   49 member: • lvalue TOK_DOT TOK_ID
   50       | • lvalue TOK_L_BR expression TOK_R_BR
   51       | • call TOK_DOT TOK_ID
   52       | • call TOK_L_BR expression TOK_R_BR
   53 call: • call normcall
   54     | • lvalue callsuffix
   55     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   65 objectdef: • TOK_L_BR elist TOK_R_BR
   66          | • TOK_L_BR indexed TOK_R_BR
   77 const: • TOK_INT
   78      | • TOK_FLOAT
   79      | • TOK_STRING
   80      | • TOK_NIL
   81      | • TOK_TRUE
   82      | • TOK_FALSE

    TOK_NOT        shift, and go to state 12
    TOK_LOCAL      shift, and go to state 13
    TOK_TRUE       shift, and go to state 14
    TOK_FALSE      shift, and go to state 15
    TOK_NIL        shift, and go to state 16
    TOK_MINUS      shift, and go to state 17
    TOK_DBL_PLUS   shift, and go to state 18
    TOK_DBL_MINUS  shift, and go to state 19
    TOK_L_BR       shift, and go to state 21
    TOK_L_PARENTH  shift, and go to state 22
    TOK_DBL_COLON  shift, and go to state 24
    TOK_ID         shift, and go to state 25
    TOK_INT        shift, and go to state 26
    TOK_FLOAT      shift, and go to state 27
    TOK_STRING     shift, and go to state 28

    expression  go to state 120
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 79

   16 expression: • assignexpr
   17           | • expression TOK_PLUS expression
   18           | • expression TOK_MINUS expression
   19           | • expression TOK_MULTIPLY expression
   20           | • expression TOK_DIVIDE expression
   21           | • expression TOK_MODULO expression
   22           | • expression TOK_GREATER expression
   23           | • expression TOK_LESS expression
   24           | • expression TOK_GR_EQUAL expression
   25           | • expression TOK_LS_EQUAL expression
   26           | • expression TOK_EQUAL expression
   26           | expression TOK_EQUAL • expression
   27           | • expression TOK_N_EQUAL expression
   28           | • expression TOK_AND expression
   29           | • expression TOK_OR expression
   30           | • term
   31 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   32     | • TOK_MINUS expression
   33     | • TOK_NOT expression
   34     | • TOK_DBL_PLUS lvalue
   35     | • lvalue TOK_DBL_PLUS
   36     | • TOK_DBL_MINUS lvalue
   37     | • lvalue TOK_DBL_MINUS
   38     | • primary
   39 assignexpr: • lvalue TOK_ASSIGN expression
   40 primary: • lvalue
   41        | • call
   42        | • objectdef
   43        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   44        | • const
   45 lvalue: • TOK_ID
   46       | • TOK_LOCAL TOK_ID
   47       | • TOK_DBL_COLON TOK_ID
   48       | • member
   49 member: • lvalue TOK_DOT TOK_ID
   50       | • lvalue TOK_L_BR expression TOK_R_BR
   51       | • call TOK_DOT TOK_ID
   52       | • call TOK_L_BR expression TOK_R_BR
   53 call: • call normcall
   54     | • lvalue callsuffix
   55     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   65 objectdef: • TOK_L_BR elist TOK_R_BR
   66          | • TOK_L_BR indexed TOK_R_BR
   77 const: • TOK_INT
   78      | • TOK_FLOAT
   79      | • TOK_STRING
   80      | • TOK_NIL
   81      | • TOK_TRUE
   82      | • TOK_FALSE

    TOK_NOT        shift, and go to state 12
    TOK_LOCAL      shift, and go to state 13
    TOK_TRUE       shift, and go to state 14
    TOK_FALSE      shift, and go to state 15
    TOK_NIL        shift, and go to state 16
    TOK_MINUS      shift, and go to state 17
    TOK_DBL_PLUS   shift, and go to state 18
    TOK_DBL_MINUS  shift, and go to state 19
    TOK_L_BR       shift, and go to state 21
    TOK_L_PARENTH  shift, and go to state 22
    TOK_DBL_COLON  shift, and go to state 24
    TOK_ID         shift, and go to state 25
    TOK_INT        shift, and go to state 26
    TOK_FLOAT      shift, and go to state 27
    TOK_STRING     shift, and go to state 28

    expression  go to state 121
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 80

   16 expression: • assignexpr
   17           | • expression TOK_PLUS expression
   18           | • expression TOK_MINUS expression
   19           | • expression TOK_MULTIPLY expression
   20           | • expression TOK_DIVIDE expression
   21           | • expression TOK_MODULO expression
   22           | • expression TOK_GREATER expression
   23           | • expression TOK_LESS expression
   24           | • expression TOK_GR_EQUAL expression
   25           | • expression TOK_LS_EQUAL expression
   26           | • expression TOK_EQUAL expression
   27           | • expression TOK_N_EQUAL expression
   27           | expression TOK_N_EQUAL • expression
   28           | • expression TOK_AND expression
   29           | • expression TOK_OR expression
   30           | • term
   31 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   32     | • TOK_MINUS expression
   33     | • TOK_NOT expression
   34     | • TOK_DBL_PLUS lvalue
   35     | • lvalue TOK_DBL_PLUS
   36     | • TOK_DBL_MINUS lvalue
   37     | • lvalue TOK_DBL_MINUS
   38     | • primary
   39 assignexpr: • lvalue TOK_ASSIGN expression
   40 primary: • lvalue
   41        | • call
   42        | • objectdef
   43        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   44        | • const
   45 lvalue: • TOK_ID
   46       | • TOK_LOCAL TOK_ID
   47       | • TOK_DBL_COLON TOK_ID
   48       | • member
   49 member: • lvalue TOK_DOT TOK_ID
   50       | • lvalue TOK_L_BR expression TOK_R_BR
   51       | • call TOK_DOT TOK_ID
   52       | • call TOK_L_BR expression TOK_R_BR
   53 call: • call normcall
   54     | • lvalue callsuffix
   55     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   65 objectdef: • TOK_L_BR elist TOK_R_BR
   66          | • TOK_L_BR indexed TOK_R_BR
   77 const: • TOK_INT
   78      | • TOK_FLOAT
   79      | • TOK_STRING
   80      | • TOK_NIL
   81      | • TOK_TRUE
   82      | • TOK_FALSE

    TOK_NOT        shift, and go to state 12
    TOK_LOCAL      shift, and go to state 13
    TOK_TRUE       shift, and go to state 14
    TOK_FALSE      shift, and go to state 15
    TOK_NIL        shift, and go to state 16
    TOK_MINUS      shift, and go to state 17
    TOK_DBL_PLUS   shift, and go to state 18
    TOK_DBL_MINUS  shift, and go to state 19
    TOK_L_BR       shift, and go to state 21
    TOK_L_PARENTH  shift, and go to state 22
    TOK_DBL_COLON  shift, and go to state 24
    TOK_ID         shift, and go to state 25
    TOK_INT        shift, and go to state 26
    TOK_FLOAT      shift, and go to state 27
    TOK_STRING     shift, and go to state 28

    expression  go to state 122
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 81

   16 expression: • assignexpr
   17           | • expression TOK_PLUS expression
   18           | • expression TOK_MINUS expression
   19           | • expression TOK_MULTIPLY expression
   20           | • expression TOK_DIVIDE expression
   21           | • expression TOK_MODULO expression
   22           | • expression TOK_GREATER expression
   22           | expression TOK_GREATER • expression
   23           | • expression TOK_LESS expression
   24           | • expression TOK_GR_EQUAL expression
   25           | • expression TOK_LS_EQUAL expression
   26           | • expression TOK_EQUAL expression
   27           | • expression TOK_N_EQUAL expression
   28           | • expression TOK_AND expression
   29           | • expression TOK_OR expression
   30           | • term
   31 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   32     | • TOK_MINUS expression
   33     | • TOK_NOT expression
   34     | • TOK_DBL_PLUS lvalue
   35     | • lvalue TOK_DBL_PLUS
   36     | • TOK_DBL_MINUS lvalue
   37     | • lvalue TOK_DBL_MINUS
   38     | • primary
   39 assignexpr: • lvalue TOK_ASSIGN expression
   40 primary: • lvalue
   41        | • call
   42        | • objectdef
   43        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   44        | • const
   45 lvalue: • TOK_ID
   46       | • TOK_LOCAL TOK_ID
   47       | • TOK_DBL_COLON TOK_ID
   48       | • member
   49 member: • lvalue TOK_DOT TOK_ID
   50       | • lvalue TOK_L_BR expression TOK_R_BR
   51       | • call TOK_DOT TOK_ID
   52       | • call TOK_L_BR expression TOK_R_BR
   53 call: • call normcall
   54     | • lvalue callsuffix
   55     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   65 objectdef: • TOK_L_BR elist TOK_R_BR
   66          | • TOK_L_BR indexed TOK_R_BR
   77 const: • TOK_INT
   78      | • TOK_FLOAT
   79      | • TOK_STRING
   80      | • TOK_NIL
   81      | • TOK_TRUE
   82      | • TOK_FALSE

    TOK_NOT        shift, and go to state 12
    TOK_LOCAL      shift, and go to state 13
    TOK_TRUE       shift, and go to state 14
    TOK_FALSE      shift, and go to state 15
    TOK_NIL        shift, and go to state 16
    TOK_MINUS      shift, and go to state 17
    TOK_DBL_PLUS   shift, and go to state 18
    TOK_DBL_MINUS  shift, and go to state 19
    TOK_L_BR       shift, and go to state 21
    TOK_L_PARENTH  shift, and go to state 22
    TOK_DBL_COLON  shift, and go to state 24
    TOK_ID         shift, and go to state 25
    TOK_INT        shift, and go to state 26
    TOK_FLOAT      shift, and go to state 27
    TOK_STRING     shift, and go to state 28

    expression  go to state 123
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 82

   16 expression: • assignexpr
   17           | • expression TOK_PLUS expression
   18           | • expression TOK_MINUS expression
   19           | • expression TOK_MULTIPLY expression
   20           | • expression TOK_DIVIDE expression
   21           | • expression TOK_MODULO expression
   22           | • expression TOK_GREATER expression
   23           | • expression TOK_LESS expression
   23           | expression TOK_LESS • expression
   24           | • expression TOK_GR_EQUAL expression
   25           | • expression TOK_LS_EQUAL expression
   26           | • expression TOK_EQUAL expression
   27           | • expression TOK_N_EQUAL expression
   28           | • expression TOK_AND expression
   29           | • expression TOK_OR expression
   30           | • term
   31 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   32     | • TOK_MINUS expression
   33     | • TOK_NOT expression
   34     | • TOK_DBL_PLUS lvalue
   35     | • lvalue TOK_DBL_PLUS
   36     | • TOK_DBL_MINUS lvalue
   37     | • lvalue TOK_DBL_MINUS
   38     | • primary
   39 assignexpr: • lvalue TOK_ASSIGN expression
   40 primary: • lvalue
   41        | • call
   42        | • objectdef
   43        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   44        | • const
   45 lvalue: • TOK_ID
   46       | • TOK_LOCAL TOK_ID
   47       | • TOK_DBL_COLON TOK_ID
   48       | • member
   49 member: • lvalue TOK_DOT TOK_ID
   50       | • lvalue TOK_L_BR expression TOK_R_BR
   51       | • call TOK_DOT TOK_ID
   52       | • call TOK_L_BR expression TOK_R_BR
   53 call: • call normcall
   54     | • lvalue callsuffix
   55     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   65 objectdef: • TOK_L_BR elist TOK_R_BR
   66          | • TOK_L_BR indexed TOK_R_BR
   77 const: • TOK_INT
   78      | • TOK_FLOAT
   79      | • TOK_STRING
   80      | • TOK_NIL
   81      | • TOK_TRUE
   82      | • TOK_FALSE

    TOK_NOT        shift, and go to state 12
    TOK_LOCAL      shift, and go to state 13
    TOK_TRUE       shift, and go to state 14
    TOK_FALSE      shift, and go to state 15
    TOK_NIL        shift, and go to state 16
    TOK_MINUS      shift, and go to state 17
    TOK_DBL_PLUS   shift, and go to state 18
    TOK_DBL_MINUS  shift, and go to state 19
    TOK_L_BR       shift, and go to state 21
    TOK_L_PARENTH  shift, and go to state 22
    TOK_DBL_COLON  shift, and go to state 24
    TOK_ID         shift, and go to state 25
    TOK_INT        shift, and go to state 26
    TOK_FLOAT      shift, and go to state 27
    TOK_STRING     shift, and go to state 28

    expression  go to state 124
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 83

   16 expression: • assignexpr
   17           | • expression TOK_PLUS expression
   18           | • expression TOK_MINUS expression
   19           | • expression TOK_MULTIPLY expression
   20           | • expression TOK_DIVIDE expression
   21           | • expression TOK_MODULO expression
   22           | • expression TOK_GREATER expression
   23           | • expression TOK_LESS expression
   24           | • expression TOK_GR_EQUAL expression
   24           | expression TOK_GR_EQUAL • expression
   25           | • expression TOK_LS_EQUAL expression
   26           | • expression TOK_EQUAL expression
   27           | • expression TOK_N_EQUAL expression
   28           | • expression TOK_AND expression
   29           | • expression TOK_OR expression
   30           | • term
   31 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   32     | • TOK_MINUS expression
   33     | • TOK_NOT expression
   34     | • TOK_DBL_PLUS lvalue
   35     | • lvalue TOK_DBL_PLUS
   36     | • TOK_DBL_MINUS lvalue
   37     | • lvalue TOK_DBL_MINUS
   38     | • primary
   39 assignexpr: • lvalue TOK_ASSIGN expression
   40 primary: • lvalue
   41        | • call
   42        | • objectdef
   43        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   44        | • const
   45 lvalue: • TOK_ID
   46       | • TOK_LOCAL TOK_ID
   47       | • TOK_DBL_COLON TOK_ID
   48       | • member
   49 member: • lvalue TOK_DOT TOK_ID
   50       | • lvalue TOK_L_BR expression TOK_R_BR
   51       | • call TOK_DOT TOK_ID
   52       | • call TOK_L_BR expression TOK_R_BR
   53 call: • call normcall
   54     | • lvalue callsuffix
   55     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   65 objectdef: • TOK_L_BR elist TOK_R_BR
   66          | • TOK_L_BR indexed TOK_R_BR
   77 const: • TOK_INT
   78      | • TOK_FLOAT
   79      | • TOK_STRING
   80      | • TOK_NIL
   81      | • TOK_TRUE
   82      | • TOK_FALSE

    TOK_NOT        shift, and go to state 12
    TOK_LOCAL      shift, and go to state 13
    TOK_TRUE       shift, and go to state 14
    TOK_FALSE      shift, and go to state 15
    TOK_NIL        shift, and go to state 16
    TOK_MINUS      shift, and go to state 17
    TOK_DBL_PLUS   shift, and go to state 18
    TOK_DBL_MINUS  shift, and go to state 19
    TOK_L_BR       shift, and go to state 21
    TOK_L_PARENTH  shift, and go to state 22
    TOK_DBL_COLON  shift, and go to state 24
    TOK_ID         shift, and go to state 25
    TOK_INT        shift, and go to state 26
    TOK_FLOAT      shift, and go to state 27
    TOK_STRING     shift, and go to state 28

    expression  go to state 125
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 84

   16 expression: • assignexpr
   17           | • expression TOK_PLUS expression
   18           | • expression TOK_MINUS expression
   19           | • expression TOK_MULTIPLY expression
   20           | • expression TOK_DIVIDE expression
   21           | • expression TOK_MODULO expression
   22           | • expression TOK_GREATER expression
   23           | • expression TOK_LESS expression
   24           | • expression TOK_GR_EQUAL expression
   25           | • expression TOK_LS_EQUAL expression
   25           | expression TOK_LS_EQUAL • expression
   26           | • expression TOK_EQUAL expression
   27           | • expression TOK_N_EQUAL expression
   28           | • expression TOK_AND expression
   29           | • expression TOK_OR expression
   30           | • term
   31 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   32     | • TOK_MINUS expression
   33     | • TOK_NOT expression
   34     | • TOK_DBL_PLUS lvalue
   35     | • lvalue TOK_DBL_PLUS
   36     | • TOK_DBL_MINUS lvalue
   37     | • lvalue TOK_DBL_MINUS
   38     | • primary
   39 assignexpr: • lvalue TOK_ASSIGN expression
   40 primary: • lvalue
   41        | • call
   42        | • objectdef
   43        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   44        | • const
   45 lvalue: • TOK_ID
   46       | • TOK_LOCAL TOK_ID
   47       | • TOK_DBL_COLON TOK_ID
   48       | • member
   49 member: • lvalue TOK_DOT TOK_ID
   50       | • lvalue TOK_L_BR expression TOK_R_BR
   51       | • call TOK_DOT TOK_ID
   52       | • call TOK_L_BR expression TOK_R_BR
   53 call: • call normcall
   54     | • lvalue callsuffix
   55     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   65 objectdef: • TOK_L_BR elist TOK_R_BR
   66          | • TOK_L_BR indexed TOK_R_BR
   77 const: • TOK_INT
   78      | • TOK_FLOAT
   79      | • TOK_STRING
   80      | • TOK_NIL
   81      | • TOK_TRUE
   82      | • TOK_FALSE

    TOK_NOT        shift, and go to state 12
    TOK_LOCAL      shift, and go to state 13
    TOK_TRUE       shift, and go to state 14
    TOK_FALSE      shift, and go to state 15
    TOK_NIL        shift, and go to state 16
    TOK_MINUS      shift, and go to state 17
    TOK_DBL_PLUS   shift, and go to state 18
    TOK_DBL_MINUS  shift, and go to state 19
    TOK_L_BR       shift, and go to state 21
    TOK_L_PARENTH  shift, and go to state 22
    TOK_DBL_COLON  shift, and go to state 24
    TOK_ID         shift, and go to state 25
    TOK_INT        shift, and go to state 26
    TOK_FLOAT      shift, and go to state 27
    TOK_STRING     shift, and go to state 28

    expression  go to state 126
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 85

    3 statement: expression TOK_SEMICOLON •

    $default  reduce using rule 3 (statement)


State 86

   16 expression: • assignexpr
   17           | • expression TOK_PLUS expression
   18           | • expression TOK_MINUS expression
   19           | • expression TOK_MULTIPLY expression
   20           | • expression TOK_DIVIDE expression
   21           | • expression TOK_MODULO expression
   22           | • expression TOK_GREATER expression
   23           | • expression TOK_LESS expression
   24           | • expression TOK_GR_EQUAL expression
   25           | • expression TOK_LS_EQUAL expression
   26           | • expression TOK_EQUAL expression
   27           | • expression TOK_N_EQUAL expression
   28           | • expression TOK_AND expression
   29           | • expression TOK_OR expression
   30           | • term
   31 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   32     | • TOK_MINUS expression
   33     | • TOK_NOT expression
   34     | • TOK_DBL_PLUS lvalue
   35     | • lvalue TOK_DBL_PLUS
   36     | • TOK_DBL_MINUS lvalue
   37     | • lvalue TOK_DBL_MINUS
   38     | • primary
   39 assignexpr: • lvalue TOK_ASSIGN expression
   39           | lvalue TOK_ASSIGN • expression
   40 primary: • lvalue
   41        | • call
   42        | • objectdef
   43        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   44        | • const
   45 lvalue: • TOK_ID
   46       | • TOK_LOCAL TOK_ID
   47       | • TOK_DBL_COLON TOK_ID
   48       | • member
   49 member: • lvalue TOK_DOT TOK_ID
   50       | • lvalue TOK_L_BR expression TOK_R_BR
   51       | • call TOK_DOT TOK_ID
   52       | • call TOK_L_BR expression TOK_R_BR
   53 call: • call normcall
   54     | • lvalue callsuffix
   55     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   65 objectdef: • TOK_L_BR elist TOK_R_BR
   66          | • TOK_L_BR indexed TOK_R_BR
   77 const: • TOK_INT
   78      | • TOK_FLOAT
   79      | • TOK_STRING
   80      | • TOK_NIL
   81      | • TOK_TRUE
   82      | • TOK_FALSE

    TOK_NOT        shift, and go to state 12
    TOK_LOCAL      shift, and go to state 13
    TOK_TRUE       shift, and go to state 14
    TOK_FALSE      shift, and go to state 15
    TOK_NIL        shift, and go to state 16
    TOK_MINUS      shift, and go to state 17
    TOK_DBL_PLUS   shift, and go to state 18
    TOK_DBL_MINUS  shift, and go to state 19
    TOK_L_BR       shift, and go to state 21
    TOK_L_PARENTH  shift, and go to state 22
    TOK_DBL_COLON  shift, and go to state 24
    TOK_ID         shift, and go to state 25
    TOK_INT        shift, and go to state 26
    TOK_FLOAT      shift, and go to state 27
    TOK_STRING     shift, and go to state 28

    expression  go to state 127
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 87

   35 term: lvalue TOK_DBL_PLUS •

    $default  reduce using rule 35 (term)


State 88

   37 term: lvalue TOK_DBL_MINUS •

    $default  reduce using rule 37 (term)


State 89

   16 expression: • assignexpr
   17           | • expression TOK_PLUS expression
   18           | • expression TOK_MINUS expression
   19           | • expression TOK_MULTIPLY expression
   20           | • expression TOK_DIVIDE expression
   21           | • expression TOK_MODULO expression
   22           | • expression TOK_GREATER expression
   23           | • expression TOK_LESS expression
   24           | • expression TOK_GR_EQUAL expression
   25           | • expression TOK_LS_EQUAL expression
   26           | • expression TOK_EQUAL expression
   27           | • expression TOK_N_EQUAL expression
   28           | • expression TOK_AND expression
   29           | • expression TOK_OR expression
   30           | • term
   31 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   32     | • TOK_MINUS expression
   33     | • TOK_NOT expression
   34     | • TOK_DBL_PLUS lvalue
   35     | • lvalue TOK_DBL_PLUS
   36     | • TOK_DBL_MINUS lvalue
   37     | • lvalue TOK_DBL_MINUS
   38     | • primary
   39 assignexpr: • lvalue TOK_ASSIGN expression
   40 primary: • lvalue
   41        | • call
   42        | • objectdef
   43        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   44        | • const
   45 lvalue: • TOK_ID
   46       | • TOK_LOCAL TOK_ID
   47       | • TOK_DBL_COLON TOK_ID
   48       | • member
   49 member: • lvalue TOK_DOT TOK_ID
   50       | • lvalue TOK_L_BR expression TOK_R_BR
   50       | lvalue TOK_L_BR • expression TOK_R_BR
   51       | • call TOK_DOT TOK_ID
   52       | • call TOK_L_BR expression TOK_R_BR
   53 call: • call normcall
   54     | • lvalue callsuffix
   55     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   65 objectdef: • TOK_L_BR elist TOK_R_BR
   66          | • TOK_L_BR indexed TOK_R_BR
   77 const: • TOK_INT
   78      | • TOK_FLOAT
   79      | • TOK_STRING
   80      | • TOK_NIL
   81      | • TOK_TRUE
   82      | • TOK_FALSE

    TOK_NOT        shift, and go to state 12
    TOK_LOCAL      shift, and go to state 13
    TOK_TRUE       shift, and go to state 14
    TOK_FALSE      shift, and go to state 15
    TOK_NIL        shift, and go to state 16
    TOK_MINUS      shift, and go to state 17
    TOK_DBL_PLUS   shift, and go to state 18
    TOK_DBL_MINUS  shift, and go to state 19
    TOK_L_BR       shift, and go to state 21
    TOK_L_PARENTH  shift, and go to state 22
    TOK_DBL_COLON  shift, and go to state 24
    TOK_ID         shift, and go to state 25
    TOK_INT        shift, and go to state 26
    TOK_FLOAT      shift, and go to state 27
    TOK_STRING     shift, and go to state 28

    expression  go to state 128
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 90

   16 expression: • assignexpr
   17           | • expression TOK_PLUS expression
   18           | • expression TOK_MINUS expression
   19           | • expression TOK_MULTIPLY expression
   20           | • expression TOK_DIVIDE expression
   21           | • expression TOK_MODULO expression
   22           | • expression TOK_GREATER expression
   23           | • expression TOK_LESS expression
   24           | • expression TOK_GR_EQUAL expression
   25           | • expression TOK_LS_EQUAL expression
   26           | • expression TOK_EQUAL expression
   27           | • expression TOK_N_EQUAL expression
   28           | • expression TOK_AND expression
   29           | • expression TOK_OR expression
   30           | • term
   31 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   32     | • TOK_MINUS expression
   33     | • TOK_NOT expression
   34     | • TOK_DBL_PLUS lvalue
   35     | • lvalue TOK_DBL_PLUS
   36     | • TOK_DBL_MINUS lvalue
   37     | • lvalue TOK_DBL_MINUS
   38     | • primary
   39 assignexpr: • lvalue TOK_ASSIGN expression
   40 primary: • lvalue
   41        | • call
   42        | • objectdef
   43        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   44        | • const
   45 lvalue: • TOK_ID
   46       | • TOK_LOCAL TOK_ID
   47       | • TOK_DBL_COLON TOK_ID
   48       | • member
   49 member: • lvalue TOK_DOT TOK_ID
   50       | • lvalue TOK_L_BR expression TOK_R_BR
   51       | • call TOK_DOT TOK_ID
   52       | • call TOK_L_BR expression TOK_R_BR
   53 call: • call normcall
   54     | • lvalue callsuffix
   55     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   58 normcall: TOK_L_PARENTH • elist TOK_R_PARENTH
   60 elist: • elist TOK_COMMA expression
   61      | • expression
   62      | ε •  [TOK_R_PARENTH, TOK_COMMA]
   65 objectdef: • TOK_L_BR elist TOK_R_BR
   66          | • TOK_L_BR indexed TOK_R_BR
   77 const: • TOK_INT
   78      | • TOK_FLOAT
   79      | • TOK_STRING
   80      | • TOK_NIL
   81      | • TOK_TRUE
   82      | • TOK_FALSE

    TOK_NOT        shift, and go to state 12
    TOK_LOCAL      shift, and go to state 13
    TOK_TRUE       shift, and go to state 14
    TOK_FALSE      shift, and go to state 15
    TOK_NIL        shift, and go to state 16
    TOK_MINUS      shift, and go to state 17
    TOK_DBL_PLUS   shift, and go to state 18
    TOK_DBL_MINUS  shift, and go to state 19
    TOK_L_BR       shift, and go to state 21
    TOK_L_PARENTH  shift, and go to state 22
    TOK_DBL_COLON  shift, and go to state 24
    TOK_ID         shift, and go to state 25
    TOK_INT        shift, and go to state 26
    TOK_FLOAT      shift, and go to state 27
    TOK_STRING     shift, and go to state 28

    $default  reduce using rule 62 (elist)

    expression  go to state 65
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    elist       go to state 129
    objectdef   go to state 37
    const       go to state 41


State 91

   49 member: lvalue TOK_DOT • TOK_ID

    TOK_ID  shift, and go to state 130


State 92

   59 methodcall: TOK_DBL_DOT • TOK_ID normcall

    TOK_ID  shift, and go to state 131


State 93

   54 call: lvalue callsuffix •

    $default  reduce using rule 54 (call)


State 94

   56 callsuffix: normcall •

    $default  reduce using rule 56 (callsuffix)


State 95

   57 callsuffix: methodcall •

    $default  reduce using rule 57 (callsuffix)


State 96

   16 expression: • assignexpr
   17           | • expression TOK_PLUS expression
   18           | • expression TOK_MINUS expression
   19           | • expression TOK_MULTIPLY expression
   20           | • expression TOK_DIVIDE expression
   21           | • expression TOK_MODULO expression
   22           | • expression TOK_GREATER expression
   23           | • expression TOK_LESS expression
   24           | • expression TOK_GR_EQUAL expression
   25           | • expression TOK_LS_EQUAL expression
   26           | • expression TOK_EQUAL expression
   27           | • expression TOK_N_EQUAL expression
   28           | • expression TOK_AND expression
   29           | • expression TOK_OR expression
   30           | • term
   31 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   32     | • TOK_MINUS expression
   33     | • TOK_NOT expression
   34     | • TOK_DBL_PLUS lvalue
   35     | • lvalue TOK_DBL_PLUS
   36     | • TOK_DBL_MINUS lvalue
   37     | • lvalue TOK_DBL_MINUS
   38     | • primary
   39 assignexpr: • lvalue TOK_ASSIGN expression
   40 primary: • lvalue
   41        | • call
   42        | • objectdef
   43        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   44        | • const
   45 lvalue: • TOK_ID
   46       | • TOK_LOCAL TOK_ID
   47       | • TOK_DBL_COLON TOK_ID
   48       | • member
   49 member: • lvalue TOK_DOT TOK_ID
   50       | • lvalue TOK_L_BR expression TOK_R_BR
   51       | • call TOK_DOT TOK_ID
   52       | • call TOK_L_BR expression TOK_R_BR
   52       | call TOK_L_BR • expression TOK_R_BR
   53 call: • call normcall
   54     | • lvalue callsuffix
   55     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   65 objectdef: • TOK_L_BR elist TOK_R_BR
   66          | • TOK_L_BR indexed TOK_R_BR
   77 const: • TOK_INT
   78      | • TOK_FLOAT
   79      | • TOK_STRING
   80      | • TOK_NIL
   81      | • TOK_TRUE
   82      | • TOK_FALSE

    TOK_NOT        shift, and go to state 12
    TOK_LOCAL      shift, and go to state 13
    TOK_TRUE       shift, and go to state 14
    TOK_FALSE      shift, and go to state 15
    TOK_NIL        shift, and go to state 16
    TOK_MINUS      shift, and go to state 17
    TOK_DBL_PLUS   shift, and go to state 18
    TOK_DBL_MINUS  shift, and go to state 19
    TOK_L_BR       shift, and go to state 21
    TOK_L_PARENTH  shift, and go to state 22
    TOK_DBL_COLON  shift, and go to state 24
    TOK_ID         shift, and go to state 25
    TOK_INT        shift, and go to state 26
    TOK_FLOAT      shift, and go to state 27
    TOK_STRING     shift, and go to state 28

    expression  go to state 132
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 97

   51 member: call TOK_DOT • TOK_ID

    TOK_ID  shift, and go to state 133


State 98

   53 call: call normcall •

    $default  reduce using rule 53 (call)


State 99

   74 funcargs: TOK_L_PARENTH • idlist TOK_R_PARENTH
   83 idlist: • TOK_ID
   84       | • idlist TOK_COMMA TOK_ID
   85       | ε •  [TOK_R_PARENTH, TOK_COMMA]

    TOK_ID  shift, and go to state 134

    $default  reduce using rule 85 (idlist)

    idlist  go to state 135


State 100

   70 funcdef_block: • TOK_L_CURLY_BR statements TOK_R_CURLY_BR
   75 funcbody: • funcdef_block
   76 funcdef: funcprefix funcargs • funcbody

    TOK_L_CURLY_BR  shift, and go to state 136

    funcdef_block  go to state 137
    funcbody       go to state 138


State 101

   17 expression: expression • TOK_PLUS expression
   18           | expression • TOK_MINUS expression
   19           | expression • TOK_MULTIPLY expression
   20           | expression • TOK_DIVIDE expression
   21           | expression • TOK_MODULO expression
   22           | expression • TOK_GREATER expression
   23           | expression • TOK_LESS expression
   24           | expression • TOK_GR_EQUAL expression
   25           | expression • TOK_LS_EQUAL expression
   26           | expression • TOK_EQUAL expression
   27           | expression • TOK_N_EQUAL expression
   28           | expression • TOK_AND expression
   29           | expression • TOK_OR expression
   86 if_statement: TOK_IF TOK_L_PARENTH expression • TOK_R_PARENTH statement
   87             | TOK_IF TOK_L_PARENTH expression • TOK_R_PARENTH statement TOK_ELSE statement

    TOK_AND        shift, and go to state 72
    TOK_OR         shift, and go to state 73
    TOK_PLUS       shift, and go to state 74
    TOK_MINUS      shift, and go to state 75
    TOK_MULTIPLY   shift, and go to state 76
    TOK_DIVIDE     shift, and go to state 77
    TOK_MODULO     shift, and go to state 78
    TOK_EQUAL      shift, and go to state 79
    TOK_N_EQUAL    shift, and go to state 80
    TOK_GREATER    shift, and go to state 81
    TOK_LESS       shift, and go to state 82
    TOK_GR_EQUAL   shift, and go to state 83
    TOK_LS_EQUAL   shift, and go to state 84
    TOK_R_PARENTH  shift, and go to state 139


State 102

   17 expression: expression • TOK_PLUS expression
   18           | expression • TOK_MINUS expression
   19           | expression • TOK_MULTIPLY expression
   20           | expression • TOK_DIVIDE expression
   21           | expression • TOK_MODULO expression
   22           | expression • TOK_GREATER expression
   23           | expression • TOK_LESS expression
   24           | expression • TOK_GR_EQUAL expression
   25           | expression • TOK_LS_EQUAL expression
   26           | expression • TOK_EQUAL expression
   27           | expression • TOK_N_EQUAL expression
   28           | expression • TOK_AND expression
   29           | expression • TOK_OR expression
   88 while_statement: TOK_WHILE TOK_L_PARENTH expression • TOK_R_PARENTH statement

    TOK_AND        shift, and go to state 72
    TOK_OR         shift, and go to state 73
    TOK_PLUS       shift, and go to state 74
    TOK_MINUS      shift, and go to state 75
    TOK_MULTIPLY   shift, and go to state 76
    TOK_DIVIDE     shift, and go to state 77
    TOK_MODULO     shift, and go to state 78
    TOK_EQUAL      shift, and go to state 79
    TOK_N_EQUAL    shift, and go to state 80
    TOK_GREATER    shift, and go to state 81
    TOK_LESS       shift, and go to state 82
    TOK_GR_EQUAL   shift, and go to state 83
    TOK_LS_EQUAL   shift, and go to state 84
    TOK_R_PARENTH  shift, and go to state 140


State 103

   60 elist: elist • TOK_COMMA expression
   89 for_statement: TOK_FOR TOK_L_PARENTH elist • TOK_SEMICOLON expression TOK_SEMICOLON elist TOK_R_PARENTH statement

    TOK_SEMICOLON  shift, and go to state 141
    TOK_COMMA      shift, and go to state 109


State 104

   91 return_statement: TOK_RETURN expression TOK_SEMICOLON •

    $default  reduce using rule 91 (return_statement)


State 105

   55 call: TOK_L_PARENTH funcdef • TOK_R_PARENTH normcall

    TOK_R_PARENTH  shift, and go to state 142


State 106

    3 statement: • expression TOK_SEMICOLON
    4          | • if_statement
    5          | • while_statement
    6          | • for_statement
    7          | • return_statement
    8          | • TOK_CONTINUE TOK_SEMICOLON
    9          | • TOK_BREAK TOK_SEMICOLON
   10          | • block
   11          | • funcdef
   12          | • TOK_SEMICOLON
   13          | • error TOK_SEMICOLON
   14 statements: statements • statement
   16 expression: • assignexpr
   17           | • expression TOK_PLUS expression
   18           | • expression TOK_MINUS expression
   19           | • expression TOK_MULTIPLY expression
   20           | • expression TOK_DIVIDE expression
   21           | • expression TOK_MODULO expression
   22           | • expression TOK_GREATER expression
   23           | • expression TOK_LESS expression
   24           | • expression TOK_GR_EQUAL expression
   25           | • expression TOK_LS_EQUAL expression
   26           | • expression TOK_EQUAL expression
   27           | • expression TOK_N_EQUAL expression
   28           | • expression TOK_AND expression
   29           | • expression TOK_OR expression
   30           | • term
   31 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   32     | • TOK_MINUS expression
   33     | • TOK_NOT expression
   34     | • TOK_DBL_PLUS lvalue
   35     | • lvalue TOK_DBL_PLUS
   36     | • TOK_DBL_MINUS lvalue
   37     | • lvalue TOK_DBL_MINUS
   38     | • primary
   39 assignexpr: • lvalue TOK_ASSIGN expression
   40 primary: • lvalue
   41        | • call
   42        | • objectdef
   43        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   44        | • const
   45 lvalue: • TOK_ID
   46       | • TOK_LOCAL TOK_ID
   47       | • TOK_DBL_COLON TOK_ID
   48       | • member
   49 member: • lvalue TOK_DOT TOK_ID
   50       | • lvalue TOK_L_BR expression TOK_R_BR
   51       | • call TOK_DOT TOK_ID
   52       | • call TOK_L_BR expression TOK_R_BR
   53 call: • call normcall
   54     | • lvalue callsuffix
   55     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   65 objectdef: • TOK_L_BR elist TOK_R_BR
   66          | • TOK_L_BR indexed TOK_R_BR
   69 block: • TOK_L_CURLY_BR $@1 statements TOK_R_CURLY_BR
   69      | TOK_L_CURLY_BR $@1 statements • TOK_R_CURLY_BR
   73 funcprefix: • TOK_FUNCTION funcname
   76 funcdef: • funcprefix funcargs funcbody
   77 const: • TOK_INT
   78      | • TOK_FLOAT
   79      | • TOK_STRING
   80      | • TOK_NIL
   81      | • TOK_TRUE
   82      | • TOK_FALSE
   86 if_statement: • TOK_IF TOK_L_PARENTH expression TOK_R_PARENTH statement
   87             | • TOK_IF TOK_L_PARENTH expression TOK_R_PARENTH statement TOK_ELSE statement
   88 while_statement: • TOK_WHILE TOK_L_PARENTH expression TOK_R_PARENTH statement
   89 for_statement: • TOK_FOR TOK_L_PARENTH elist TOK_SEMICOLON expression TOK_SEMICOLON elist TOK_R_PARENTH statement
   90 return_statement: • TOK_RETURN TOK_SEMICOLON
   91                 | • TOK_RETURN expression TOK_SEMICOLON

    error           shift, and go to state 4
    TOK_IF          shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_FOR         shift, and go to state 7
    TOK_FUNCTION    shift, and go to state 8
    TOK_RETURN      shift, and go to state 9
    TOK_BREAK       shift, and go to state 10
    TOK_CONTINUE    shift, and go to state 11
    TOK_NOT         shift, and go to state 12
    TOK_LOCAL       shift, and go to state 13
    TOK_TRUE        shift, and go to state 14
    TOK_FALSE       shift, and go to state 15
    TOK_NIL         shift, and go to state 16
    TOK_MINUS       shift, and go to state 17
    TOK_DBL_PLUS    shift, and go to state 18
    TOK_DBL_MINUS   shift, and go to state 19
    TOK_L_CURLY_BR  shift, and go to state 20
    TOK_R_CURLY_BR  shift, and go to state 143
    TOK_L_BR        shift, and go to state 21
    TOK_L_PARENTH   shift, and go to state 22
    TOK_SEMICOLON   shift, and go to state 23
    TOK_DBL_COLON   shift, and go to state 24
    TOK_ID          shift, and go to state 25
    TOK_INT         shift, and go to state 26
    TOK_FLOAT       shift, and go to state 27
    TOK_STRING      shift, and go to state 28

    statement         go to state 144
    expression        go to state 30
    term              go to state 31
    assignexpr        go to state 32
    primary           go to state 33
    lvalue            go to state 34
    member            go to state 35
    call              go to state 36
    objectdef         go to state 37
    block             go to state 38
    funcprefix        go to state 39
    funcdef           go to state 40
    const             go to state 41
    if_statement      go to state 42
    while_statement   go to state 43
    for_statement     go to state 44
    return_statement  go to state 45


State 107

   17 expression: expression • TOK_PLUS expression
   18           | expression • TOK_MINUS expression
   19           | expression • TOK_MULTIPLY expression
   20           | expression • TOK_DIVIDE expression
   21           | expression • TOK_MODULO expression
   22           | expression • TOK_GREATER expression
   23           | expression • TOK_LESS expression
   24           | expression • TOK_GR_EQUAL expression
   25           | expression • TOK_LS_EQUAL expression
   26           | expression • TOK_EQUAL expression
   27           | expression • TOK_N_EQUAL expression
   28           | expression • TOK_AND expression
   29           | expression • TOK_OR expression
   67 indexedelem: TOK_L_CURLY_BR expression • TOK_COLON expression TOK_R_CURLY_BR

    TOK_AND       shift, and go to state 72
    TOK_OR        shift, and go to state 73
    TOK_PLUS      shift, and go to state 74
    TOK_MINUS     shift, and go to state 75
    TOK_MULTIPLY  shift, and go to state 76
    TOK_DIVIDE    shift, and go to state 77
    TOK_MODULO    shift, and go to state 78
    TOK_EQUAL     shift, and go to state 79
    TOK_N_EQUAL   shift, and go to state 80
    TOK_GREATER   shift, and go to state 81
    TOK_LESS      shift, and go to state 82
    TOK_GR_EQUAL  shift, and go to state 83
    TOK_LS_EQUAL  shift, and go to state 84
    TOK_COLON     shift, and go to state 145


State 108

   65 objectdef: TOK_L_BR elist TOK_R_BR •

    $default  reduce using rule 65 (objectdef)


State 109

   16 expression: • assignexpr
   17           | • expression TOK_PLUS expression
   18           | • expression TOK_MINUS expression
   19           | • expression TOK_MULTIPLY expression
   20           | • expression TOK_DIVIDE expression
   21           | • expression TOK_MODULO expression
   22           | • expression TOK_GREATER expression
   23           | • expression TOK_LESS expression
   24           | • expression TOK_GR_EQUAL expression
   25           | • expression TOK_LS_EQUAL expression
   26           | • expression TOK_EQUAL expression
   27           | • expression TOK_N_EQUAL expression
   28           | • expression TOK_AND expression
   29           | • expression TOK_OR expression
   30           | • term
   31 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   32     | • TOK_MINUS expression
   33     | • TOK_NOT expression
   34     | • TOK_DBL_PLUS lvalue
   35     | • lvalue TOK_DBL_PLUS
   36     | • TOK_DBL_MINUS lvalue
   37     | • lvalue TOK_DBL_MINUS
   38     | • primary
   39 assignexpr: • lvalue TOK_ASSIGN expression
   40 primary: • lvalue
   41        | • call
   42        | • objectdef
   43        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   44        | • const
   45 lvalue: • TOK_ID
   46       | • TOK_LOCAL TOK_ID
   47       | • TOK_DBL_COLON TOK_ID
   48       | • member
   49 member: • lvalue TOK_DOT TOK_ID
   50       | • lvalue TOK_L_BR expression TOK_R_BR
   51       | • call TOK_DOT TOK_ID
   52       | • call TOK_L_BR expression TOK_R_BR
   53 call: • call normcall
   54     | • lvalue callsuffix
   55     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   60 elist: elist TOK_COMMA • expression
   65 objectdef: • TOK_L_BR elist TOK_R_BR
   66          | • TOK_L_BR indexed TOK_R_BR
   77 const: • TOK_INT
   78      | • TOK_FLOAT
   79      | • TOK_STRING
   80      | • TOK_NIL
   81      | • TOK_TRUE
   82      | • TOK_FALSE

    TOK_NOT        shift, and go to state 12
    TOK_LOCAL      shift, and go to state 13
    TOK_TRUE       shift, and go to state 14
    TOK_FALSE      shift, and go to state 15
    TOK_NIL        shift, and go to state 16
    TOK_MINUS      shift, and go to state 17
    TOK_DBL_PLUS   shift, and go to state 18
    TOK_DBL_MINUS  shift, and go to state 19
    TOK_L_BR       shift, and go to state 21
    TOK_L_PARENTH  shift, and go to state 22
    TOK_DBL_COLON  shift, and go to state 24
    TOK_ID         shift, and go to state 25
    TOK_INT        shift, and go to state 26
    TOK_FLOAT      shift, and go to state 27
    TOK_STRING     shift, and go to state 28

    expression  go to state 146
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 110

   66 objectdef: TOK_L_BR indexed TOK_R_BR •

    $default  reduce using rule 66 (objectdef)


State 111

   64 indexed: indexed TOK_COMMA • indexedelem
   67 indexedelem: • TOK_L_CURLY_BR expression TOK_COLON expression TOK_R_CURLY_BR

    TOK_L_CURLY_BR  shift, and go to state 64

    indexedelem  go to state 147


State 112

   31 term: TOK_L_PARENTH expression TOK_R_PARENTH •

    $default  reduce using rule 31 (term)


State 113

   43 primary: TOK_L_PARENTH funcdef TOK_R_PARENTH •  [TOK_AND, TOK_OR, TOK_PLUS, TOK_MINUS, TOK_MULTIPLY, TOK_DIVIDE, TOK_MODULO, TOK_EQUAL, TOK_N_EQUAL, TOK_GREATER, TOK_LESS, TOK_GR_EQUAL, TOK_LS_EQUAL, TOK_R_CURLY_BR, TOK_R_BR, TOK_R_PARENTH, TOK_SEMICOLON, TOK_COMMA, TOK_COLON]
   55 call: TOK_L_PARENTH funcdef TOK_R_PARENTH • normcall
   58 normcall: • TOK_L_PARENTH elist TOK_R_PARENTH

    TOK_L_PARENTH  shift, and go to state 90

    $default  reduce using rule 43 (primary)

    normcall  go to state 148


State 114

   17 expression: expression • TOK_PLUS expression
   18           | expression • TOK_MINUS expression
   19           | expression • TOK_MULTIPLY expression
   20           | expression • TOK_DIVIDE expression
   21           | expression • TOK_MODULO expression
   22           | expression • TOK_GREATER expression
   23           | expression • TOK_LESS expression
   24           | expression • TOK_GR_EQUAL expression
   25           | expression • TOK_LS_EQUAL expression
   26           | expression • TOK_EQUAL expression
   27           | expression • TOK_N_EQUAL expression
   28           | expression • TOK_AND expression
   28           | expression TOK_AND expression •  [TOK_AND, TOK_OR, TOK_R_CURLY_BR, TOK_R_BR, TOK_R_PARENTH, TOK_SEMICOLON, TOK_COMMA, TOK_COLON]
   29           | expression • TOK_OR expression

    TOK_PLUS      shift, and go to state 74
    TOK_MINUS     shift, and go to state 75
    TOK_MULTIPLY  shift, and go to state 76
    TOK_DIVIDE    shift, and go to state 77
    TOK_MODULO    shift, and go to state 78
    TOK_EQUAL     shift, and go to state 79
    TOK_N_EQUAL   shift, and go to state 80
    TOK_GREATER   shift, and go to state 81
    TOK_LESS      shift, and go to state 82
    TOK_GR_EQUAL  shift, and go to state 83
    TOK_LS_EQUAL  shift, and go to state 84

    $default  reduce using rule 28 (expression)

    Conflict between rule 28 and token TOK_AND resolved as reduce (%left TOK_AND).
    Conflict between rule 28 and token TOK_OR resolved as reduce (TOK_OR < TOK_AND).
    Conflict between rule 28 and token TOK_PLUS resolved as shift (TOK_AND < TOK_PLUS).
    Conflict between rule 28 and token TOK_MINUS resolved as shift (TOK_AND < TOK_MINUS).
    Conflict between rule 28 and token TOK_MULTIPLY resolved as shift (TOK_AND < TOK_MULTIPLY).
    Conflict between rule 28 and token TOK_DIVIDE resolved as shift (TOK_AND < TOK_DIVIDE).
    Conflict between rule 28 and token TOK_MODULO resolved as shift (TOK_AND < TOK_MODULO).
    Conflict between rule 28 and token TOK_EQUAL resolved as shift (TOK_AND < TOK_EQUAL).
    Conflict between rule 28 and token TOK_N_EQUAL resolved as shift (TOK_AND < TOK_N_EQUAL).
    Conflict between rule 28 and token TOK_GREATER resolved as shift (TOK_AND < TOK_GREATER).
    Conflict between rule 28 and token TOK_LESS resolved as shift (TOK_AND < TOK_LESS).
    Conflict between rule 28 and token TOK_GR_EQUAL resolved as shift (TOK_AND < TOK_GR_EQUAL).
    Conflict between rule 28 and token TOK_LS_EQUAL resolved as shift (TOK_AND < TOK_LS_EQUAL).


State 115

   17 expression: expression • TOK_PLUS expression
   18           | expression • TOK_MINUS expression
   19           | expression • TOK_MULTIPLY expression
   20           | expression • TOK_DIVIDE expression
   21           | expression • TOK_MODULO expression
   22           | expression • TOK_GREATER expression
   23           | expression • TOK_LESS expression
   24           | expression • TOK_GR_EQUAL expression
   25           | expression • TOK_LS_EQUAL expression
   26           | expression • TOK_EQUAL expression
   27           | expression • TOK_N_EQUAL expression
   28           | expression • TOK_AND expression
   29           | expression • TOK_OR expression
   29           | expression TOK_OR expression •  [TOK_OR, TOK_R_CURLY_BR, TOK_R_BR, TOK_R_PARENTH, TOK_SEMICOLON, TOK_COMMA, TOK_COLON]

    TOK_AND       shift, and go to state 72
    TOK_PLUS      shift, and go to state 74
    TOK_MINUS     shift, and go to state 75
    TOK_MULTIPLY  shift, and go to state 76
    TOK_DIVIDE    shift, and go to state 77
    TOK_MODULO    shift, and go to state 78
    TOK_EQUAL     shift, and go to state 79
    TOK_N_EQUAL   shift, and go to state 80
    TOK_GREATER   shift, and go to state 81
    TOK_LESS      shift, and go to state 82
    TOK_GR_EQUAL  shift, and go to state 83
    TOK_LS_EQUAL  shift, and go to state 84

    $default  reduce using rule 29 (expression)

    Conflict between rule 29 and token TOK_AND resolved as shift (TOK_OR < TOK_AND).
    Conflict between rule 29 and token TOK_OR resolved as reduce (%left TOK_OR).
    Conflict between rule 29 and token TOK_PLUS resolved as shift (TOK_OR < TOK_PLUS).
    Conflict between rule 29 and token TOK_MINUS resolved as shift (TOK_OR < TOK_MINUS).
    Conflict between rule 29 and token TOK_MULTIPLY resolved as shift (TOK_OR < TOK_MULTIPLY).
    Conflict between rule 29 and token TOK_DIVIDE resolved as shift (TOK_OR < TOK_DIVIDE).
    Conflict between rule 29 and token TOK_MODULO resolved as shift (TOK_OR < TOK_MODULO).
    Conflict between rule 29 and token TOK_EQUAL resolved as shift (TOK_OR < TOK_EQUAL).
    Conflict between rule 29 and token TOK_N_EQUAL resolved as shift (TOK_OR < TOK_N_EQUAL).
    Conflict between rule 29 and token TOK_GREATER resolved as shift (TOK_OR < TOK_GREATER).
    Conflict between rule 29 and token TOK_LESS resolved as shift (TOK_OR < TOK_LESS).
    Conflict between rule 29 and token TOK_GR_EQUAL resolved as shift (TOK_OR < TOK_GR_EQUAL).
    Conflict between rule 29 and token TOK_LS_EQUAL resolved as shift (TOK_OR < TOK_LS_EQUAL).


State 116

   17 expression: expression • TOK_PLUS expression
   17           | expression TOK_PLUS expression •  [TOK_AND, TOK_OR, TOK_PLUS, TOK_MINUS, TOK_EQUAL, TOK_N_EQUAL, TOK_GREATER, TOK_LESS, TOK_GR_EQUAL, TOK_LS_EQUAL, TOK_R_CURLY_BR, TOK_R_BR, TOK_R_PARENTH, TOK_SEMICOLON, TOK_COMMA, TOK_COLON]
   18           | expression • TOK_MINUS expression
   19           | expression • TOK_MULTIPLY expression
   20           | expression • TOK_DIVIDE expression
   21           | expression • TOK_MODULO expression
   22           | expression • TOK_GREATER expression
   23           | expression • TOK_LESS expression
   24           | expression • TOK_GR_EQUAL expression
   25           | expression • TOK_LS_EQUAL expression
   26           | expression • TOK_EQUAL expression
   27           | expression • TOK_N_EQUAL expression
   28           | expression • TOK_AND expression
   29           | expression • TOK_OR expression

    TOK_MULTIPLY  shift, and go to state 76
    TOK_DIVIDE    shift, and go to state 77
    TOK_MODULO    shift, and go to state 78

    $default  reduce using rule 17 (expression)

    Conflict between rule 17 and token TOK_AND resolved as reduce (TOK_AND < TOK_PLUS).
    Conflict between rule 17 and token TOK_OR resolved as reduce (TOK_OR < TOK_PLUS).
    Conflict between rule 17 and token TOK_PLUS resolved as reduce (%left TOK_PLUS).
    Conflict between rule 17 and token TOK_MINUS resolved as reduce (%left TOK_MINUS).
    Conflict between rule 17 and token TOK_MULTIPLY resolved as shift (TOK_PLUS < TOK_MULTIPLY).
    Conflict between rule 17 and token TOK_DIVIDE resolved as shift (TOK_PLUS < TOK_DIVIDE).
    Conflict between rule 17 and token TOK_MODULO resolved as shift (TOK_PLUS < TOK_MODULO).
    Conflict between rule 17 and token TOK_EQUAL resolved as reduce (TOK_EQUAL < TOK_PLUS).
    Conflict between rule 17 and token TOK_N_EQUAL resolved as reduce (TOK_N_EQUAL < TOK_PLUS).
    Conflict between rule 17 and token TOK_GREATER resolved as reduce (TOK_GREATER < TOK_PLUS).
    Conflict between rule 17 and token TOK_LESS resolved as reduce (TOK_LESS < TOK_PLUS).
    Conflict between rule 17 and token TOK_GR_EQUAL resolved as reduce (TOK_GR_EQUAL < TOK_PLUS).
    Conflict between rule 17 and token TOK_LS_EQUAL resolved as reduce (TOK_LS_EQUAL < TOK_PLUS).


State 117

   17 expression: expression • TOK_PLUS expression
   18           | expression • TOK_MINUS expression
   18           | expression TOK_MINUS expression •  [TOK_AND, TOK_OR, TOK_PLUS, TOK_MINUS, TOK_EQUAL, TOK_N_EQUAL, TOK_GREATER, TOK_LESS, TOK_GR_EQUAL, TOK_LS_EQUAL, TOK_R_CURLY_BR, TOK_R_BR, TOK_R_PARENTH, TOK_SEMICOLON, TOK_COMMA, TOK_COLON]
   19           | expression • TOK_MULTIPLY expression
   20           | expression • TOK_DIVIDE expression
   21           | expression • TOK_MODULO expression
   22           | expression • TOK_GREATER expression
   23           | expression • TOK_LESS expression
   24           | expression • TOK_GR_EQUAL expression
   25           | expression • TOK_LS_EQUAL expression
   26           | expression • TOK_EQUAL expression
   27           | expression • TOK_N_EQUAL expression
   28           | expression • TOK_AND expression
   29           | expression • TOK_OR expression

    TOK_MULTIPLY  shift, and go to state 76
    TOK_DIVIDE    shift, and go to state 77
    TOK_MODULO    shift, and go to state 78

    $default  reduce using rule 18 (expression)

    Conflict between rule 18 and token TOK_AND resolved as reduce (TOK_AND < TOK_MINUS).
    Conflict between rule 18 and token TOK_OR resolved as reduce (TOK_OR < TOK_MINUS).
    Conflict between rule 18 and token TOK_PLUS resolved as reduce (%left TOK_PLUS).
    Conflict between rule 18 and token TOK_MINUS resolved as reduce (%left TOK_MINUS).
    Conflict between rule 18 and token TOK_MULTIPLY resolved as shift (TOK_MINUS < TOK_MULTIPLY).
    Conflict between rule 18 and token TOK_DIVIDE resolved as shift (TOK_MINUS < TOK_DIVIDE).
    Conflict between rule 18 and token TOK_MODULO resolved as shift (TOK_MINUS < TOK_MODULO).
    Conflict between rule 18 and token TOK_EQUAL resolved as reduce (TOK_EQUAL < TOK_MINUS).
    Conflict between rule 18 and token TOK_N_EQUAL resolved as reduce (TOK_N_EQUAL < TOK_MINUS).
    Conflict between rule 18 and token TOK_GREATER resolved as reduce (TOK_GREATER < TOK_MINUS).
    Conflict between rule 18 and token TOK_LESS resolved as reduce (TOK_LESS < TOK_MINUS).
    Conflict between rule 18 and token TOK_GR_EQUAL resolved as reduce (TOK_GR_EQUAL < TOK_MINUS).
    Conflict between rule 18 and token TOK_LS_EQUAL resolved as reduce (TOK_LS_EQUAL < TOK_MINUS).


State 118

   17 expression: expression • TOK_PLUS expression
   18           | expression • TOK_MINUS expression
   19           | expression • TOK_MULTIPLY expression
   19           | expression TOK_MULTIPLY expression •  [TOK_AND, TOK_OR, TOK_PLUS, TOK_MINUS, TOK_MULTIPLY, TOK_DIVIDE, TOK_MODULO, TOK_EQUAL, TOK_N_EQUAL, TOK_GREATER, TOK_LESS, TOK_GR_EQUAL, TOK_LS_EQUAL, TOK_R_CURLY_BR, TOK_R_BR, TOK_R_PARENTH, TOK_SEMICOLON, TOK_COMMA, TOK_COLON]
   20           | expression • TOK_DIVIDE expression
   21           | expression • TOK_MODULO expression
   22           | expression • TOK_GREATER expression
   23           | expression • TOK_LESS expression
   24           | expression • TOK_GR_EQUAL expression
   25           | expression • TOK_LS_EQUAL expression
   26           | expression • TOK_EQUAL expression
   27           | expression • TOK_N_EQUAL expression
   28           | expression • TOK_AND expression
   29           | expression • TOK_OR expression

    $default  reduce using rule 19 (expression)

    Conflict between rule 19 and token TOK_AND resolved as reduce (TOK_AND < TOK_MULTIPLY).
    Conflict between rule 19 and token TOK_OR resolved as reduce (TOK_OR < TOK_MULTIPLY).
    Conflict between rule 19 and token TOK_PLUS resolved as reduce (TOK_PLUS < TOK_MULTIPLY).
    Conflict between rule 19 and token TOK_MINUS resolved as reduce (TOK_MINUS < TOK_MULTIPLY).
    Conflict between rule 19 and token TOK_MULTIPLY resolved as reduce (%left TOK_MULTIPLY).
    Conflict between rule 19 and token TOK_DIVIDE resolved as reduce (%left TOK_DIVIDE).
    Conflict between rule 19 and token TOK_MODULO resolved as reduce (%left TOK_MODULO).
    Conflict between rule 19 and token TOK_EQUAL resolved as reduce (TOK_EQUAL < TOK_MULTIPLY).
    Conflict between rule 19 and token TOK_N_EQUAL resolved as reduce (TOK_N_EQUAL < TOK_MULTIPLY).
    Conflict between rule 19 and token TOK_GREATER resolved as reduce (TOK_GREATER < TOK_MULTIPLY).
    Conflict between rule 19 and token TOK_LESS resolved as reduce (TOK_LESS < TOK_MULTIPLY).
    Conflict between rule 19 and token TOK_GR_EQUAL resolved as reduce (TOK_GR_EQUAL < TOK_MULTIPLY).
    Conflict between rule 19 and token TOK_LS_EQUAL resolved as reduce (TOK_LS_EQUAL < TOK_MULTIPLY).


State 119

   17 expression: expression • TOK_PLUS expression
   18           | expression • TOK_MINUS expression
   19           | expression • TOK_MULTIPLY expression
   20           | expression • TOK_DIVIDE expression
   20           | expression TOK_DIVIDE expression •  [TOK_AND, TOK_OR, TOK_PLUS, TOK_MINUS, TOK_MULTIPLY, TOK_DIVIDE, TOK_MODULO, TOK_EQUAL, TOK_N_EQUAL, TOK_GREATER, TOK_LESS, TOK_GR_EQUAL, TOK_LS_EQUAL, TOK_R_CURLY_BR, TOK_R_BR, TOK_R_PARENTH, TOK_SEMICOLON, TOK_COMMA, TOK_COLON]
   21           | expression • TOK_MODULO expression
   22           | expression • TOK_GREATER expression
   23           | expression • TOK_LESS expression
   24           | expression • TOK_GR_EQUAL expression
   25           | expression • TOK_LS_EQUAL expression
   26           | expression • TOK_EQUAL expression
   27           | expression • TOK_N_EQUAL expression
   28           | expression • TOK_AND expression
   29           | expression • TOK_OR expression

    $default  reduce using rule 20 (expression)

    Conflict between rule 20 and token TOK_AND resolved as reduce (TOK_AND < TOK_DIVIDE).
    Conflict between rule 20 and token TOK_OR resolved as reduce (TOK_OR < TOK_DIVIDE).
    Conflict between rule 20 and token TOK_PLUS resolved as reduce (TOK_PLUS < TOK_DIVIDE).
    Conflict between rule 20 and token TOK_MINUS resolved as reduce (TOK_MINUS < TOK_DIVIDE).
    Conflict between rule 20 and token TOK_MULTIPLY resolved as reduce (%left TOK_MULTIPLY).
    Conflict between rule 20 and token TOK_DIVIDE resolved as reduce (%left TOK_DIVIDE).
    Conflict between rule 20 and token TOK_MODULO resolved as reduce (%left TOK_MODULO).
    Conflict between rule 20 and token TOK_EQUAL resolved as reduce (TOK_EQUAL < TOK_DIVIDE).
    Conflict between rule 20 and token TOK_N_EQUAL resolved as reduce (TOK_N_EQUAL < TOK_DIVIDE).
    Conflict between rule 20 and token TOK_GREATER resolved as reduce (TOK_GREATER < TOK_DIVIDE).
    Conflict between rule 20 and token TOK_LESS resolved as reduce (TOK_LESS < TOK_DIVIDE).
    Conflict between rule 20 and token TOK_GR_EQUAL resolved as reduce (TOK_GR_EQUAL < TOK_DIVIDE).
    Conflict between rule 20 and token TOK_LS_EQUAL resolved as reduce (TOK_LS_EQUAL < TOK_DIVIDE).


State 120

   17 expression: expression • TOK_PLUS expression
   18           | expression • TOK_MINUS expression
   19           | expression • TOK_MULTIPLY expression
   20           | expression • TOK_DIVIDE expression
   21           | expression • TOK_MODULO expression
   21           | expression TOK_MODULO expression •  [TOK_AND, TOK_OR, TOK_PLUS, TOK_MINUS, TOK_MULTIPLY, TOK_DIVIDE, TOK_MODULO, TOK_EQUAL, TOK_N_EQUAL, TOK_GREATER, TOK_LESS, TOK_GR_EQUAL, TOK_LS_EQUAL, TOK_R_CURLY_BR, TOK_R_BR, TOK_R_PARENTH, TOK_SEMICOLON, TOK_COMMA, TOK_COLON]
   22           | expression • TOK_GREATER expression
   23           | expression • TOK_LESS expression
   24           | expression • TOK_GR_EQUAL expression
   25           | expression • TOK_LS_EQUAL expression
   26           | expression • TOK_EQUAL expression
   27           | expression • TOK_N_EQUAL expression
   28           | expression • TOK_AND expression
   29           | expression • TOK_OR expression

    $default  reduce using rule 21 (expression)

    Conflict between rule 21 and token TOK_AND resolved as reduce (TOK_AND < TOK_MODULO).
    Conflict between rule 21 and token TOK_OR resolved as reduce (TOK_OR < TOK_MODULO).
    Conflict between rule 21 and token TOK_PLUS resolved as reduce (TOK_PLUS < TOK_MODULO).
    Conflict between rule 21 and token TOK_MINUS resolved as reduce (TOK_MINUS < TOK_MODULO).
    Conflict between rule 21 and token TOK_MULTIPLY resolved as reduce (%left TOK_MULTIPLY).
    Conflict between rule 21 and token TOK_DIVIDE resolved as reduce (%left TOK_DIVIDE).
    Conflict between rule 21 and token TOK_MODULO resolved as reduce (%left TOK_MODULO).
    Conflict between rule 21 and token TOK_EQUAL resolved as reduce (TOK_EQUAL < TOK_MODULO).
    Conflict between rule 21 and token TOK_N_EQUAL resolved as reduce (TOK_N_EQUAL < TOK_MODULO).
    Conflict between rule 21 and token TOK_GREATER resolved as reduce (TOK_GREATER < TOK_MODULO).
    Conflict between rule 21 and token TOK_LESS resolved as reduce (TOK_LESS < TOK_MODULO).
    Conflict between rule 21 and token TOK_GR_EQUAL resolved as reduce (TOK_GR_EQUAL < TOK_MODULO).
    Conflict between rule 21 and token TOK_LS_EQUAL resolved as reduce (TOK_LS_EQUAL < TOK_MODULO).


State 121

   17 expression: expression • TOK_PLUS expression
   18           | expression • TOK_MINUS expression
   19           | expression • TOK_MULTIPLY expression
   20           | expression • TOK_DIVIDE expression
   21           | expression • TOK_MODULO expression
   22           | expression • TOK_GREATER expression
   23           | expression • TOK_LESS expression
   24           | expression • TOK_GR_EQUAL expression
   25           | expression • TOK_LS_EQUAL expression
   26           | expression • TOK_EQUAL expression
   26           | expression TOK_EQUAL expression •  [TOK_AND, TOK_OR, TOK_R_CURLY_BR, TOK_R_BR, TOK_R_PARENTH, TOK_SEMICOLON, TOK_COMMA, TOK_COLON]
   27           | expression • TOK_N_EQUAL expression
   28           | expression • TOK_AND expression
   29           | expression • TOK_OR expression

    TOK_PLUS      shift, and go to state 74
    TOK_MINUS     shift, and go to state 75
    TOK_MULTIPLY  shift, and go to state 76
    TOK_DIVIDE    shift, and go to state 77
    TOK_MODULO    shift, and go to state 78
    TOK_GREATER   shift, and go to state 81
    TOK_LESS      shift, and go to state 82
    TOK_GR_EQUAL  shift, and go to state 83
    TOK_LS_EQUAL  shift, and go to state 84

    TOK_EQUAL    error (nonassociative)
    TOK_N_EQUAL  error (nonassociative)

    $default  reduce using rule 26 (expression)

    Conflict between rule 26 and token TOK_AND resolved as reduce (TOK_AND < TOK_EQUAL).
    Conflict between rule 26 and token TOK_OR resolved as reduce (TOK_OR < TOK_EQUAL).
    Conflict between rule 26 and token TOK_PLUS resolved as shift (TOK_EQUAL < TOK_PLUS).
    Conflict between rule 26 and token TOK_MINUS resolved as shift (TOK_EQUAL < TOK_MINUS).
    Conflict between rule 26 and token TOK_MULTIPLY resolved as shift (TOK_EQUAL < TOK_MULTIPLY).
    Conflict between rule 26 and token TOK_DIVIDE resolved as shift (TOK_EQUAL < TOK_DIVIDE).
    Conflict between rule 26 and token TOK_MODULO resolved as shift (TOK_EQUAL < TOK_MODULO).
    Conflict between rule 26 and token TOK_EQUAL resolved as an error (%nonassoc TOK_EQUAL).
    Conflict between rule 26 and token TOK_N_EQUAL resolved as an error (%nonassoc TOK_N_EQUAL).
    Conflict between rule 26 and token TOK_GREATER resolved as shift (TOK_EQUAL < TOK_GREATER).
    Conflict between rule 26 and token TOK_LESS resolved as shift (TOK_EQUAL < TOK_LESS).
    Conflict between rule 26 and token TOK_GR_EQUAL resolved as shift (TOK_EQUAL < TOK_GR_EQUAL).
    Conflict between rule 26 and token TOK_LS_EQUAL resolved as shift (TOK_EQUAL < TOK_LS_EQUAL).


State 122

   17 expression: expression • TOK_PLUS expression
   18           | expression • TOK_MINUS expression
   19           | expression • TOK_MULTIPLY expression
   20           | expression • TOK_DIVIDE expression
   21           | expression • TOK_MODULO expression
   22           | expression • TOK_GREATER expression
   23           | expression • TOK_LESS expression
   24           | expression • TOK_GR_EQUAL expression
   25           | expression • TOK_LS_EQUAL expression
   26           | expression • TOK_EQUAL expression
   27           | expression • TOK_N_EQUAL expression
   27           | expression TOK_N_EQUAL expression •  [TOK_AND, TOK_OR, TOK_R_CURLY_BR, TOK_R_BR, TOK_R_PARENTH, TOK_SEMICOLON, TOK_COMMA, TOK_COLON]
   28           | expression • TOK_AND expression
   29           | expression • TOK_OR expression

    TOK_PLUS      shift, and go to state 74
    TOK_MINUS     shift, and go to state 75
    TOK_MULTIPLY  shift, and go to state 76
    TOK_DIVIDE    shift, and go to state 77
    TOK_MODULO    shift, and go to state 78
    TOK_GREATER   shift, and go to state 81
    TOK_LESS      shift, and go to state 82
    TOK_GR_EQUAL  shift, and go to state 83
    TOK_LS_EQUAL  shift, and go to state 84

    TOK_EQUAL    error (nonassociative)
    TOK_N_EQUAL  error (nonassociative)

    $default  reduce using rule 27 (expression)

    Conflict between rule 27 and token TOK_AND resolved as reduce (TOK_AND < TOK_N_EQUAL).
    Conflict between rule 27 and token TOK_OR resolved as reduce (TOK_OR < TOK_N_EQUAL).
    Conflict between rule 27 and token TOK_PLUS resolved as shift (TOK_N_EQUAL < TOK_PLUS).
    Conflict between rule 27 and token TOK_MINUS resolved as shift (TOK_N_EQUAL < TOK_MINUS).
    Conflict between rule 27 and token TOK_MULTIPLY resolved as shift (TOK_N_EQUAL < TOK_MULTIPLY).
    Conflict between rule 27 and token TOK_DIVIDE resolved as shift (TOK_N_EQUAL < TOK_DIVIDE).
    Conflict between rule 27 and token TOK_MODULO resolved as shift (TOK_N_EQUAL < TOK_MODULO).
    Conflict between rule 27 and token TOK_EQUAL resolved as an error (%nonassoc TOK_EQUAL).
    Conflict between rule 27 and token TOK_N_EQUAL resolved as an error (%nonassoc TOK_N_EQUAL).
    Conflict between rule 27 and token TOK_GREATER resolved as shift (TOK_N_EQUAL < TOK_GREATER).
    Conflict between rule 27 and token TOK_LESS resolved as shift (TOK_N_EQUAL < TOK_LESS).
    Conflict between rule 27 and token TOK_GR_EQUAL resolved as shift (TOK_N_EQUAL < TOK_GR_EQUAL).
    Conflict between rule 27 and token TOK_LS_EQUAL resolved as shift (TOK_N_EQUAL < TOK_LS_EQUAL).


State 123

   17 expression: expression • TOK_PLUS expression
   18           | expression • TOK_MINUS expression
   19           | expression • TOK_MULTIPLY expression
   20           | expression • TOK_DIVIDE expression
   21           | expression • TOK_MODULO expression
   22           | expression • TOK_GREATER expression
   22           | expression TOK_GREATER expression •  [TOK_AND, TOK_OR, TOK_EQUAL, TOK_N_EQUAL, TOK_R_CURLY_BR, TOK_R_BR, TOK_R_PARENTH, TOK_SEMICOLON, TOK_COMMA, TOK_COLON]
   23           | expression • TOK_LESS expression
   24           | expression • TOK_GR_EQUAL expression
   25           | expression • TOK_LS_EQUAL expression
   26           | expression • TOK_EQUAL expression
   27           | expression • TOK_N_EQUAL expression
   28           | expression • TOK_AND expression
   29           | expression • TOK_OR expression

    TOK_PLUS      shift, and go to state 74
    TOK_MINUS     shift, and go to state 75
    TOK_MULTIPLY  shift, and go to state 76
    TOK_DIVIDE    shift, and go to state 77
    TOK_MODULO    shift, and go to state 78

    TOK_GREATER   error (nonassociative)
    TOK_LESS      error (nonassociative)
    TOK_GR_EQUAL  error (nonassociative)
    TOK_LS_EQUAL  error (nonassociative)

    $default  reduce using rule 22 (expression)

    Conflict between rule 22 and token TOK_AND resolved as reduce (TOK_AND < TOK_GREATER).
    Conflict between rule 22 and token TOK_OR resolved as reduce (TOK_OR < TOK_GREATER).
    Conflict between rule 22 and token TOK_PLUS resolved as shift (TOK_GREATER < TOK_PLUS).
    Conflict between rule 22 and token TOK_MINUS resolved as shift (TOK_GREATER < TOK_MINUS).
    Conflict between rule 22 and token TOK_MULTIPLY resolved as shift (TOK_GREATER < TOK_MULTIPLY).
    Conflict between rule 22 and token TOK_DIVIDE resolved as shift (TOK_GREATER < TOK_DIVIDE).
    Conflict between rule 22 and token TOK_MODULO resolved as shift (TOK_GREATER < TOK_MODULO).
    Conflict between rule 22 and token TOK_EQUAL resolved as reduce (TOK_EQUAL < TOK_GREATER).
    Conflict between rule 22 and token TOK_N_EQUAL resolved as reduce (TOK_N_EQUAL < TOK_GREATER).
    Conflict between rule 22 and token TOK_GREATER resolved as an error (%nonassoc TOK_GREATER).
    Conflict between rule 22 and token TOK_LESS resolved as an error (%nonassoc TOK_LESS).
    Conflict between rule 22 and token TOK_GR_EQUAL resolved as an error (%nonassoc TOK_GR_EQUAL).
    Conflict between rule 22 and token TOK_LS_EQUAL resolved as an error (%nonassoc TOK_LS_EQUAL).


State 124

   17 expression: expression • TOK_PLUS expression
   18           | expression • TOK_MINUS expression
   19           | expression • TOK_MULTIPLY expression
   20           | expression • TOK_DIVIDE expression
   21           | expression • TOK_MODULO expression
   22           | expression • TOK_GREATER expression
   23           | expression • TOK_LESS expression
   23           | expression TOK_LESS expression •  [TOK_AND, TOK_OR, TOK_EQUAL, TOK_N_EQUAL, TOK_R_CURLY_BR, TOK_R_BR, TOK_R_PARENTH, TOK_SEMICOLON, TOK_COMMA, TOK_COLON]
   24           | expression • TOK_GR_EQUAL expression
   25           | expression • TOK_LS_EQUAL expression
   26           | expression • TOK_EQUAL expression
   27           | expression • TOK_N_EQUAL expression
   28           | expression • TOK_AND expression
   29           | expression • TOK_OR expression

    TOK_PLUS      shift, and go to state 74
    TOK_MINUS     shift, and go to state 75
    TOK_MULTIPLY  shift, and go to state 76
    TOK_DIVIDE    shift, and go to state 77
    TOK_MODULO    shift, and go to state 78

    TOK_GREATER   error (nonassociative)
    TOK_LESS      error (nonassociative)
    TOK_GR_EQUAL  error (nonassociative)
    TOK_LS_EQUAL  error (nonassociative)

    $default  reduce using rule 23 (expression)

    Conflict between rule 23 and token TOK_AND resolved as reduce (TOK_AND < TOK_LESS).
    Conflict between rule 23 and token TOK_OR resolved as reduce (TOK_OR < TOK_LESS).
    Conflict between rule 23 and token TOK_PLUS resolved as shift (TOK_LESS < TOK_PLUS).
    Conflict between rule 23 and token TOK_MINUS resolved as shift (TOK_LESS < TOK_MINUS).
    Conflict between rule 23 and token TOK_MULTIPLY resolved as shift (TOK_LESS < TOK_MULTIPLY).
    Conflict between rule 23 and token TOK_DIVIDE resolved as shift (TOK_LESS < TOK_DIVIDE).
    Conflict between rule 23 and token TOK_MODULO resolved as shift (TOK_LESS < TOK_MODULO).
    Conflict between rule 23 and token TOK_EQUAL resolved as reduce (TOK_EQUAL < TOK_LESS).
    Conflict between rule 23 and token TOK_N_EQUAL resolved as reduce (TOK_N_EQUAL < TOK_LESS).
    Conflict between rule 23 and token TOK_GREATER resolved as an error (%nonassoc TOK_GREATER).
    Conflict between rule 23 and token TOK_LESS resolved as an error (%nonassoc TOK_LESS).
    Conflict between rule 23 and token TOK_GR_EQUAL resolved as an error (%nonassoc TOK_GR_EQUAL).
    Conflict between rule 23 and token TOK_LS_EQUAL resolved as an error (%nonassoc TOK_LS_EQUAL).


State 125

   17 expression: expression • TOK_PLUS expression
   18           | expression • TOK_MINUS expression
   19           | expression • TOK_MULTIPLY expression
   20           | expression • TOK_DIVIDE expression
   21           | expression • TOK_MODULO expression
   22           | expression • TOK_GREATER expression
   23           | expression • TOK_LESS expression
   24           | expression • TOK_GR_EQUAL expression
   24           | expression TOK_GR_EQUAL expression •  [TOK_AND, TOK_OR, TOK_EQUAL, TOK_N_EQUAL, TOK_R_CURLY_BR, TOK_R_BR, TOK_R_PARENTH, TOK_SEMICOLON, TOK_COMMA, TOK_COLON]
   25           | expression • TOK_LS_EQUAL expression
   26           | expression • TOK_EQUAL expression
   27           | expression • TOK_N_EQUAL expression
   28           | expression • TOK_AND expression
   29           | expression • TOK_OR expression

    TOK_PLUS      shift, and go to state 74
    TOK_MINUS     shift, and go to state 75
    TOK_MULTIPLY  shift, and go to state 76
    TOK_DIVIDE    shift, and go to state 77
    TOK_MODULO    shift, and go to state 78

    TOK_GREATER   error (nonassociative)
    TOK_LESS      error (nonassociative)
    TOK_GR_EQUAL  error (nonassociative)
    TOK_LS_EQUAL  error (nonassociative)

    $default  reduce using rule 24 (expression)

    Conflict between rule 24 and token TOK_AND resolved as reduce (TOK_AND < TOK_GR_EQUAL).
    Conflict between rule 24 and token TOK_OR resolved as reduce (TOK_OR < TOK_GR_EQUAL).
    Conflict between rule 24 and token TOK_PLUS resolved as shift (TOK_GR_EQUAL < TOK_PLUS).
    Conflict between rule 24 and token TOK_MINUS resolved as shift (TOK_GR_EQUAL < TOK_MINUS).
    Conflict between rule 24 and token TOK_MULTIPLY resolved as shift (TOK_GR_EQUAL < TOK_MULTIPLY).
    Conflict between rule 24 and token TOK_DIVIDE resolved as shift (TOK_GR_EQUAL < TOK_DIVIDE).
    Conflict between rule 24 and token TOK_MODULO resolved as shift (TOK_GR_EQUAL < TOK_MODULO).
    Conflict between rule 24 and token TOK_EQUAL resolved as reduce (TOK_EQUAL < TOK_GR_EQUAL).
    Conflict between rule 24 and token TOK_N_EQUAL resolved as reduce (TOK_N_EQUAL < TOK_GR_EQUAL).
    Conflict between rule 24 and token TOK_GREATER resolved as an error (%nonassoc TOK_GREATER).
    Conflict between rule 24 and token TOK_LESS resolved as an error (%nonassoc TOK_LESS).
    Conflict between rule 24 and token TOK_GR_EQUAL resolved as an error (%nonassoc TOK_GR_EQUAL).
    Conflict between rule 24 and token TOK_LS_EQUAL resolved as an error (%nonassoc TOK_LS_EQUAL).


State 126

   17 expression: expression • TOK_PLUS expression
   18           | expression • TOK_MINUS expression
   19           | expression • TOK_MULTIPLY expression
   20           | expression • TOK_DIVIDE expression
   21           | expression • TOK_MODULO expression
   22           | expression • TOK_GREATER expression
   23           | expression • TOK_LESS expression
   24           | expression • TOK_GR_EQUAL expression
   25           | expression • TOK_LS_EQUAL expression
   25           | expression TOK_LS_EQUAL expression •  [TOK_AND, TOK_OR, TOK_EQUAL, TOK_N_EQUAL, TOK_R_CURLY_BR, TOK_R_BR, TOK_R_PARENTH, TOK_SEMICOLON, TOK_COMMA, TOK_COLON]
   26           | expression • TOK_EQUAL expression
   27           | expression • TOK_N_EQUAL expression
   28           | expression • TOK_AND expression
   29           | expression • TOK_OR expression

    TOK_PLUS      shift, and go to state 74
    TOK_MINUS     shift, and go to state 75
    TOK_MULTIPLY  shift, and go to state 76
    TOK_DIVIDE    shift, and go to state 77
    TOK_MODULO    shift, and go to state 78

    TOK_GREATER   error (nonassociative)
    TOK_LESS      error (nonassociative)
    TOK_GR_EQUAL  error (nonassociative)
    TOK_LS_EQUAL  error (nonassociative)

    $default  reduce using rule 25 (expression)

    Conflict between rule 25 and token TOK_AND resolved as reduce (TOK_AND < TOK_LS_EQUAL).
    Conflict between rule 25 and token TOK_OR resolved as reduce (TOK_OR < TOK_LS_EQUAL).
    Conflict between rule 25 and token TOK_PLUS resolved as shift (TOK_LS_EQUAL < TOK_PLUS).
    Conflict between rule 25 and token TOK_MINUS resolved as shift (TOK_LS_EQUAL < TOK_MINUS).
    Conflict between rule 25 and token TOK_MULTIPLY resolved as shift (TOK_LS_EQUAL < TOK_MULTIPLY).
    Conflict between rule 25 and token TOK_DIVIDE resolved as shift (TOK_LS_EQUAL < TOK_DIVIDE).
    Conflict between rule 25 and token TOK_MODULO resolved as shift (TOK_LS_EQUAL < TOK_MODULO).
    Conflict between rule 25 and token TOK_EQUAL resolved as reduce (TOK_EQUAL < TOK_LS_EQUAL).
    Conflict between rule 25 and token TOK_N_EQUAL resolved as reduce (TOK_N_EQUAL < TOK_LS_EQUAL).
    Conflict between rule 25 and token TOK_GREATER resolved as an error (%nonassoc TOK_GREATER).
    Conflict between rule 25 and token TOK_LESS resolved as an error (%nonassoc TOK_LESS).
    Conflict between rule 25 and token TOK_GR_EQUAL resolved as an error (%nonassoc TOK_GR_EQUAL).
    Conflict between rule 25 and token TOK_LS_EQUAL resolved as an error (%nonassoc TOK_LS_EQUAL).


State 127

   17 expression: expression • TOK_PLUS expression
   18           | expression • TOK_MINUS expression
   19           | expression • TOK_MULTIPLY expression
   20           | expression • TOK_DIVIDE expression
   21           | expression • TOK_MODULO expression
   22           | expression • TOK_GREATER expression
   23           | expression • TOK_LESS expression
   24           | expression • TOK_GR_EQUAL expression
   25           | expression • TOK_LS_EQUAL expression
   26           | expression • TOK_EQUAL expression
   27           | expression • TOK_N_EQUAL expression
   28           | expression • TOK_AND expression
   29           | expression • TOK_OR expression
   39 assignexpr: lvalue TOK_ASSIGN expression •  [TOK_R_CURLY_BR, TOK_R_BR, TOK_R_PARENTH, TOK_SEMICOLON, TOK_COMMA, TOK_COLON]

    TOK_AND       shift, and go to state 72
    TOK_OR        shift, and go to state 73
    TOK_PLUS      shift, and go to state 74
    TOK_MINUS     shift, and go to state 75
    TOK_MULTIPLY  shift, and go to state 76
    TOK_DIVIDE    shift, and go to state 77
    TOK_MODULO    shift, and go to state 78
    TOK_EQUAL     shift, and go to state 79
    TOK_N_EQUAL   shift, and go to state 80
    TOK_GREATER   shift, and go to state 81
    TOK_LESS      shift, and go to state 82
    TOK_GR_EQUAL  shift, and go to state 83
    TOK_LS_EQUAL  shift, and go to state 84

    $default  reduce using rule 39 (assignexpr)

    Conflict between rule 39 and token TOK_AND resolved as shift (TOK_ASSIGN < TOK_AND).
    Conflict between rule 39 and token TOK_OR resolved as shift (TOK_ASSIGN < TOK_OR).
    Conflict between rule 39 and token TOK_PLUS resolved as shift (TOK_ASSIGN < TOK_PLUS).
    Conflict between rule 39 and token TOK_MINUS resolved as shift (TOK_ASSIGN < TOK_MINUS).
    Conflict between rule 39 and token TOK_MULTIPLY resolved as shift (TOK_ASSIGN < TOK_MULTIPLY).
    Conflict between rule 39 and token TOK_DIVIDE resolved as shift (TOK_ASSIGN < TOK_DIVIDE).
    Conflict between rule 39 and token TOK_MODULO resolved as shift (TOK_ASSIGN < TOK_MODULO).
    Conflict between rule 39 and token TOK_EQUAL resolved as shift (TOK_ASSIGN < TOK_EQUAL).
    Conflict between rule 39 and token TOK_N_EQUAL resolved as shift (TOK_ASSIGN < TOK_N_EQUAL).
    Conflict between rule 39 and token TOK_GREATER resolved as shift (TOK_ASSIGN < TOK_GREATER).
    Conflict between rule 39 and token TOK_LESS resolved as shift (TOK_ASSIGN < TOK_LESS).
    Conflict between rule 39 and token TOK_GR_EQUAL resolved as shift (TOK_ASSIGN < TOK_GR_EQUAL).
    Conflict between rule 39 and token TOK_LS_EQUAL resolved as shift (TOK_ASSIGN < TOK_LS_EQUAL).


State 128

   17 expression: expression • TOK_PLUS expression
   18           | expression • TOK_MINUS expression
   19           | expression • TOK_MULTIPLY expression
   20           | expression • TOK_DIVIDE expression
   21           | expression • TOK_MODULO expression
   22           | expression • TOK_GREATER expression
   23           | expression • TOK_LESS expression
   24           | expression • TOK_GR_EQUAL expression
   25           | expression • TOK_LS_EQUAL expression
   26           | expression • TOK_EQUAL expression
   27           | expression • TOK_N_EQUAL expression
   28           | expression • TOK_AND expression
   29           | expression • TOK_OR expression
   50 member: lvalue TOK_L_BR expression • TOK_R_BR

    TOK_AND       shift, and go to state 72
    TOK_OR        shift, and go to state 73
    TOK_PLUS      shift, and go to state 74
    TOK_MINUS     shift, and go to state 75
    TOK_MULTIPLY  shift, and go to state 76
    TOK_DIVIDE    shift, and go to state 77
    TOK_MODULO    shift, and go to state 78
    TOK_EQUAL     shift, and go to state 79
    TOK_N_EQUAL   shift, and go to state 80
    TOK_GREATER   shift, and go to state 81
    TOK_LESS      shift, and go to state 82
    TOK_GR_EQUAL  shift, and go to state 83
    TOK_LS_EQUAL  shift, and go to state 84
    TOK_R_BR      shift, and go to state 149


State 129

   58 normcall: TOK_L_PARENTH elist • TOK_R_PARENTH
   60 elist: elist • TOK_COMMA expression

    TOK_R_PARENTH  shift, and go to state 150
    TOK_COMMA      shift, and go to state 109


State 130

   49 member: lvalue TOK_DOT TOK_ID •

    $default  reduce using rule 49 (member)


State 131

   58 normcall: • TOK_L_PARENTH elist TOK_R_PARENTH
   59 methodcall: TOK_DBL_DOT TOK_ID • normcall

    TOK_L_PARENTH  shift, and go to state 90

    normcall  go to state 151


State 132

   17 expression: expression • TOK_PLUS expression
   18           | expression • TOK_MINUS expression
   19           | expression • TOK_MULTIPLY expression
   20           | expression • TOK_DIVIDE expression
   21           | expression • TOK_MODULO expression
   22           | expression • TOK_GREATER expression
   23           | expression • TOK_LESS expression
   24           | expression • TOK_GR_EQUAL expression
   25           | expression • TOK_LS_EQUAL expression
   26           | expression • TOK_EQUAL expression
   27           | expression • TOK_N_EQUAL expression
   28           | expression • TOK_AND expression
   29           | expression • TOK_OR expression
   52 member: call TOK_L_BR expression • TOK_R_BR

    TOK_AND       shift, and go to state 72
    TOK_OR        shift, and go to state 73
    TOK_PLUS      shift, and go to state 74
    TOK_MINUS     shift, and go to state 75
    TOK_MULTIPLY  shift, and go to state 76
    TOK_DIVIDE    shift, and go to state 77
    TOK_MODULO    shift, and go to state 78
    TOK_EQUAL     shift, and go to state 79
    TOK_N_EQUAL   shift, and go to state 80
    TOK_GREATER   shift, and go to state 81
    TOK_LESS      shift, and go to state 82
    TOK_GR_EQUAL  shift, and go to state 83
    TOK_LS_EQUAL  shift, and go to state 84
    TOK_R_BR      shift, and go to state 152


State 133

   51 member: call TOK_DOT TOK_ID •

    $default  reduce using rule 51 (member)


State 134

   83 idlist: TOK_ID •

    $default  reduce using rule 83 (idlist)


State 135

   74 funcargs: TOK_L_PARENTH idlist • TOK_R_PARENTH
   84 idlist: idlist • TOK_COMMA TOK_ID

    TOK_R_PARENTH  shift, and go to state 153
    TOK_COMMA      shift, and go to state 154


State 136

   14 statements: • statements statement
   15           | ε •
   70 funcdef_block: TOK_L_CURLY_BR • statements TOK_R_CURLY_BR

    $default  reduce using rule 15 (statements)

    statements  go to state 155


State 137

   75 funcbody: funcdef_block •

    $default  reduce using rule 75 (funcbody)


State 138

   76 funcdef: funcprefix funcargs funcbody •

    $default  reduce using rule 76 (funcdef)


State 139

    3 statement: • expression TOK_SEMICOLON
    4          | • if_statement
    5          | • while_statement
    6          | • for_statement
    7          | • return_statement
    8          | • TOK_CONTINUE TOK_SEMICOLON
    9          | • TOK_BREAK TOK_SEMICOLON
   10          | • block
   11          | • funcdef
   12          | • TOK_SEMICOLON
   13          | • error TOK_SEMICOLON
   16 expression: • assignexpr
   17           | • expression TOK_PLUS expression
   18           | • expression TOK_MINUS expression
   19           | • expression TOK_MULTIPLY expression
   20           | • expression TOK_DIVIDE expression
   21           | • expression TOK_MODULO expression
   22           | • expression TOK_GREATER expression
   23           | • expression TOK_LESS expression
   24           | • expression TOK_GR_EQUAL expression
   25           | • expression TOK_LS_EQUAL expression
   26           | • expression TOK_EQUAL expression
   27           | • expression TOK_N_EQUAL expression
   28           | • expression TOK_AND expression
   29           | • expression TOK_OR expression
   30           | • term
   31 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   32     | • TOK_MINUS expression
   33     | • TOK_NOT expression
   34     | • TOK_DBL_PLUS lvalue
   35     | • lvalue TOK_DBL_PLUS
   36     | • TOK_DBL_MINUS lvalue
   37     | • lvalue TOK_DBL_MINUS
   38     | • primary
   39 assignexpr: • lvalue TOK_ASSIGN expression
   40 primary: • lvalue
   41        | • call
   42        | • objectdef
   43        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   44        | • const
   45 lvalue: • TOK_ID
   46       | • TOK_LOCAL TOK_ID
   47       | • TOK_DBL_COLON TOK_ID
   48       | • member
   49 member: • lvalue TOK_DOT TOK_ID
   50       | • lvalue TOK_L_BR expression TOK_R_BR
   51       | • call TOK_DOT TOK_ID
   52       | • call TOK_L_BR expression TOK_R_BR
   53 call: • call normcall
   54     | • lvalue callsuffix
   55     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   65 objectdef: • TOK_L_BR elist TOK_R_BR
   66          | • TOK_L_BR indexed TOK_R_BR
   69 block: • TOK_L_CURLY_BR $@1 statements TOK_R_CURLY_BR
   73 funcprefix: • TOK_FUNCTION funcname
   76 funcdef: • funcprefix funcargs funcbody
   77 const: • TOK_INT
   78      | • TOK_FLOAT
   79      | • TOK_STRING
   80      | • TOK_NIL
   81      | • TOK_TRUE
   82      | • TOK_FALSE
   86 if_statement: • TOK_IF TOK_L_PARENTH expression TOK_R_PARENTH statement
   86             | TOK_IF TOK_L_PARENTH expression TOK_R_PARENTH • statement
   87             | • TOK_IF TOK_L_PARENTH expression TOK_R_PARENTH statement TOK_ELSE statement
   87             | TOK_IF TOK_L_PARENTH expression TOK_R_PARENTH • statement TOK_ELSE statement
   88 while_statement: • TOK_WHILE TOK_L_PARENTH expression TOK_R_PARENTH statement
   89 for_statement: • TOK_FOR TOK_L_PARENTH elist TOK_SEMICOLON expression TOK_SEMICOLON elist TOK_R_PARENTH statement
   90 return_statement: • TOK_RETURN TOK_SEMICOLON
   91                 | • TOK_RETURN expression TOK_SEMICOLON

    error           shift, and go to state 4
    TOK_IF          shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_FOR         shift, and go to state 7
    TOK_FUNCTION    shift, and go to state 8
    TOK_RETURN      shift, and go to state 9
    TOK_BREAK       shift, and go to state 10
    TOK_CONTINUE    shift, and go to state 11
    TOK_NOT         shift, and go to state 12
    TOK_LOCAL       shift, and go to state 13
    TOK_TRUE        shift, and go to state 14
    TOK_FALSE       shift, and go to state 15
    TOK_NIL         shift, and go to state 16
    TOK_MINUS       shift, and go to state 17
    TOK_DBL_PLUS    shift, and go to state 18
    TOK_DBL_MINUS   shift, and go to state 19
    TOK_L_CURLY_BR  shift, and go to state 20
    TOK_L_BR        shift, and go to state 21
    TOK_L_PARENTH   shift, and go to state 22
    TOK_SEMICOLON   shift, and go to state 23
    TOK_DBL_COLON   shift, and go to state 24
    TOK_ID          shift, and go to state 25
    TOK_INT         shift, and go to state 26
    TOK_FLOAT       shift, and go to state 27
    TOK_STRING      shift, and go to state 28

    statement         go to state 156
    expression        go to state 30
    term              go to state 31
    assignexpr        go to state 32
    primary           go to state 33
    lvalue            go to state 34
    member            go to state 35
    call              go to state 36
    objectdef         go to state 37
    block             go to state 38
    funcprefix        go to state 39
    funcdef           go to state 40
    const             go to state 41
    if_statement      go to state 42
    while_statement   go to state 43
    for_statement     go to state 44
    return_statement  go to state 45


State 140

    3 statement: • expression TOK_SEMICOLON
    4          | • if_statement
    5          | • while_statement
    6          | • for_statement
    7          | • return_statement
    8          | • TOK_CONTINUE TOK_SEMICOLON
    9          | • TOK_BREAK TOK_SEMICOLON
   10          | • block
   11          | • funcdef
   12          | • TOK_SEMICOLON
   13          | • error TOK_SEMICOLON
   16 expression: • assignexpr
   17           | • expression TOK_PLUS expression
   18           | • expression TOK_MINUS expression
   19           | • expression TOK_MULTIPLY expression
   20           | • expression TOK_DIVIDE expression
   21           | • expression TOK_MODULO expression
   22           | • expression TOK_GREATER expression
   23           | • expression TOK_LESS expression
   24           | • expression TOK_GR_EQUAL expression
   25           | • expression TOK_LS_EQUAL expression
   26           | • expression TOK_EQUAL expression
   27           | • expression TOK_N_EQUAL expression
   28           | • expression TOK_AND expression
   29           | • expression TOK_OR expression
   30           | • term
   31 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   32     | • TOK_MINUS expression
   33     | • TOK_NOT expression
   34     | • TOK_DBL_PLUS lvalue
   35     | • lvalue TOK_DBL_PLUS
   36     | • TOK_DBL_MINUS lvalue
   37     | • lvalue TOK_DBL_MINUS
   38     | • primary
   39 assignexpr: • lvalue TOK_ASSIGN expression
   40 primary: • lvalue
   41        | • call
   42        | • objectdef
   43        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   44        | • const
   45 lvalue: • TOK_ID
   46       | • TOK_LOCAL TOK_ID
   47       | • TOK_DBL_COLON TOK_ID
   48       | • member
   49 member: • lvalue TOK_DOT TOK_ID
   50       | • lvalue TOK_L_BR expression TOK_R_BR
   51       | • call TOK_DOT TOK_ID
   52       | • call TOK_L_BR expression TOK_R_BR
   53 call: • call normcall
   54     | • lvalue callsuffix
   55     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   65 objectdef: • TOK_L_BR elist TOK_R_BR
   66          | • TOK_L_BR indexed TOK_R_BR
   69 block: • TOK_L_CURLY_BR $@1 statements TOK_R_CURLY_BR
   73 funcprefix: • TOK_FUNCTION funcname
   76 funcdef: • funcprefix funcargs funcbody
   77 const: • TOK_INT
   78      | • TOK_FLOAT
   79      | • TOK_STRING
   80      | • TOK_NIL
   81      | • TOK_TRUE
   82      | • TOK_FALSE
   86 if_statement: • TOK_IF TOK_L_PARENTH expression TOK_R_PARENTH statement
   87             | • TOK_IF TOK_L_PARENTH expression TOK_R_PARENTH statement TOK_ELSE statement
   88 while_statement: • TOK_WHILE TOK_L_PARENTH expression TOK_R_PARENTH statement
   88                | TOK_WHILE TOK_L_PARENTH expression TOK_R_PARENTH • statement
   89 for_statement: • TOK_FOR TOK_L_PARENTH elist TOK_SEMICOLON expression TOK_SEMICOLON elist TOK_R_PARENTH statement
   90 return_statement: • TOK_RETURN TOK_SEMICOLON
   91                 | • TOK_RETURN expression TOK_SEMICOLON

    error           shift, and go to state 4
    TOK_IF          shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_FOR         shift, and go to state 7
    TOK_FUNCTION    shift, and go to state 8
    TOK_RETURN      shift, and go to state 9
    TOK_BREAK       shift, and go to state 10
    TOK_CONTINUE    shift, and go to state 11
    TOK_NOT         shift, and go to state 12
    TOK_LOCAL       shift, and go to state 13
    TOK_TRUE        shift, and go to state 14
    TOK_FALSE       shift, and go to state 15
    TOK_NIL         shift, and go to state 16
    TOK_MINUS       shift, and go to state 17
    TOK_DBL_PLUS    shift, and go to state 18
    TOK_DBL_MINUS   shift, and go to state 19
    TOK_L_CURLY_BR  shift, and go to state 20
    TOK_L_BR        shift, and go to state 21
    TOK_L_PARENTH   shift, and go to state 22
    TOK_SEMICOLON   shift, and go to state 23
    TOK_DBL_COLON   shift, and go to state 24
    TOK_ID          shift, and go to state 25
    TOK_INT         shift, and go to state 26
    TOK_FLOAT       shift, and go to state 27
    TOK_STRING      shift, and go to state 28

    statement         go to state 157
    expression        go to state 30
    term              go to state 31
    assignexpr        go to state 32
    primary           go to state 33
    lvalue            go to state 34
    member            go to state 35
    call              go to state 36
    objectdef         go to state 37
    block             go to state 38
    funcprefix        go to state 39
    funcdef           go to state 40
    const             go to state 41
    if_statement      go to state 42
    while_statement   go to state 43
    for_statement     go to state 44
    return_statement  go to state 45


State 141

   16 expression: • assignexpr
   17           | • expression TOK_PLUS expression
   18           | • expression TOK_MINUS expression
   19           | • expression TOK_MULTIPLY expression
   20           | • expression TOK_DIVIDE expression
   21           | • expression TOK_MODULO expression
   22           | • expression TOK_GREATER expression
   23           | • expression TOK_LESS expression
   24           | • expression TOK_GR_EQUAL expression
   25           | • expression TOK_LS_EQUAL expression
   26           | • expression TOK_EQUAL expression
   27           | • expression TOK_N_EQUAL expression
   28           | • expression TOK_AND expression
   29           | • expression TOK_OR expression
   30           | • term
   31 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   32     | • TOK_MINUS expression
   33     | • TOK_NOT expression
   34     | • TOK_DBL_PLUS lvalue
   35     | • lvalue TOK_DBL_PLUS
   36     | • TOK_DBL_MINUS lvalue
   37     | • lvalue TOK_DBL_MINUS
   38     | • primary
   39 assignexpr: • lvalue TOK_ASSIGN expression
   40 primary: • lvalue
   41        | • call
   42        | • objectdef
   43        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   44        | • const
   45 lvalue: • TOK_ID
   46       | • TOK_LOCAL TOK_ID
   47       | • TOK_DBL_COLON TOK_ID
   48       | • member
   49 member: • lvalue TOK_DOT TOK_ID
   50       | • lvalue TOK_L_BR expression TOK_R_BR
   51       | • call TOK_DOT TOK_ID
   52       | • call TOK_L_BR expression TOK_R_BR
   53 call: • call normcall
   54     | • lvalue callsuffix
   55     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   65 objectdef: • TOK_L_BR elist TOK_R_BR
   66          | • TOK_L_BR indexed TOK_R_BR
   77 const: • TOK_INT
   78      | • TOK_FLOAT
   79      | • TOK_STRING
   80      | • TOK_NIL
   81      | • TOK_TRUE
   82      | • TOK_FALSE
   89 for_statement: TOK_FOR TOK_L_PARENTH elist TOK_SEMICOLON • expression TOK_SEMICOLON elist TOK_R_PARENTH statement

    TOK_NOT        shift, and go to state 12
    TOK_LOCAL      shift, and go to state 13
    TOK_TRUE       shift, and go to state 14
    TOK_FALSE      shift, and go to state 15
    TOK_NIL        shift, and go to state 16
    TOK_MINUS      shift, and go to state 17
    TOK_DBL_PLUS   shift, and go to state 18
    TOK_DBL_MINUS  shift, and go to state 19
    TOK_L_BR       shift, and go to state 21
    TOK_L_PARENTH  shift, and go to state 22
    TOK_DBL_COLON  shift, and go to state 24
    TOK_ID         shift, and go to state 25
    TOK_INT        shift, and go to state 26
    TOK_FLOAT      shift, and go to state 27
    TOK_STRING     shift, and go to state 28

    expression  go to state 158
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 142

   55 call: TOK_L_PARENTH funcdef TOK_R_PARENTH • normcall
   58 normcall: • TOK_L_PARENTH elist TOK_R_PARENTH

    TOK_L_PARENTH  shift, and go to state 90

    normcall  go to state 148


State 143

   69 block: TOK_L_CURLY_BR $@1 statements TOK_R_CURLY_BR •

    $default  reduce using rule 69 (block)


State 144

   14 statements: statements statement •

    $default  reduce using rule 14 (statements)


State 145

   16 expression: • assignexpr
   17           | • expression TOK_PLUS expression
   18           | • expression TOK_MINUS expression
   19           | • expression TOK_MULTIPLY expression
   20           | • expression TOK_DIVIDE expression
   21           | • expression TOK_MODULO expression
   22           | • expression TOK_GREATER expression
   23           | • expression TOK_LESS expression
   24           | • expression TOK_GR_EQUAL expression
   25           | • expression TOK_LS_EQUAL expression
   26           | • expression TOK_EQUAL expression
   27           | • expression TOK_N_EQUAL expression
   28           | • expression TOK_AND expression
   29           | • expression TOK_OR expression
   30           | • term
   31 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   32     | • TOK_MINUS expression
   33     | • TOK_NOT expression
   34     | • TOK_DBL_PLUS lvalue
   35     | • lvalue TOK_DBL_PLUS
   36     | • TOK_DBL_MINUS lvalue
   37     | • lvalue TOK_DBL_MINUS
   38     | • primary
   39 assignexpr: • lvalue TOK_ASSIGN expression
   40 primary: • lvalue
   41        | • call
   42        | • objectdef
   43        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   44        | • const
   45 lvalue: • TOK_ID
   46       | • TOK_LOCAL TOK_ID
   47       | • TOK_DBL_COLON TOK_ID
   48       | • member
   49 member: • lvalue TOK_DOT TOK_ID
   50       | • lvalue TOK_L_BR expression TOK_R_BR
   51       | • call TOK_DOT TOK_ID
   52       | • call TOK_L_BR expression TOK_R_BR
   53 call: • call normcall
   54     | • lvalue callsuffix
   55     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   65 objectdef: • TOK_L_BR elist TOK_R_BR
   66          | • TOK_L_BR indexed TOK_R_BR
   67 indexedelem: TOK_L_CURLY_BR expression TOK_COLON • expression TOK_R_CURLY_BR
   77 const: • TOK_INT
   78      | • TOK_FLOAT
   79      | • TOK_STRING
   80      | • TOK_NIL
   81      | • TOK_TRUE
   82      | • TOK_FALSE

    TOK_NOT        shift, and go to state 12
    TOK_LOCAL      shift, and go to state 13
    TOK_TRUE       shift, and go to state 14
    TOK_FALSE      shift, and go to state 15
    TOK_NIL        shift, and go to state 16
    TOK_MINUS      shift, and go to state 17
    TOK_DBL_PLUS   shift, and go to state 18
    TOK_DBL_MINUS  shift, and go to state 19
    TOK_L_BR       shift, and go to state 21
    TOK_L_PARENTH  shift, and go to state 22
    TOK_DBL_COLON  shift, and go to state 24
    TOK_ID         shift, and go to state 25
    TOK_INT        shift, and go to state 26
    TOK_FLOAT      shift, and go to state 27
    TOK_STRING     shift, and go to state 28

    expression  go to state 159
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 146

   17 expression: expression • TOK_PLUS expression
   18           | expression • TOK_MINUS expression
   19           | expression • TOK_MULTIPLY expression
   20           | expression • TOK_DIVIDE expression
   21           | expression • TOK_MODULO expression
   22           | expression • TOK_GREATER expression
   23           | expression • TOK_LESS expression
   24           | expression • TOK_GR_EQUAL expression
   25           | expression • TOK_LS_EQUAL expression
   26           | expression • TOK_EQUAL expression
   27           | expression • TOK_N_EQUAL expression
   28           | expression • TOK_AND expression
   29           | expression • TOK_OR expression
   60 elist: elist TOK_COMMA expression •  [TOK_R_BR, TOK_R_PARENTH, TOK_SEMICOLON, TOK_COMMA]

    TOK_AND       shift, and go to state 72
    TOK_OR        shift, and go to state 73
    TOK_PLUS      shift, and go to state 74
    TOK_MINUS     shift, and go to state 75
    TOK_MULTIPLY  shift, and go to state 76
    TOK_DIVIDE    shift, and go to state 77
    TOK_MODULO    shift, and go to state 78
    TOK_EQUAL     shift, and go to state 79
    TOK_N_EQUAL   shift, and go to state 80
    TOK_GREATER   shift, and go to state 81
    TOK_LESS      shift, and go to state 82
    TOK_GR_EQUAL  shift, and go to state 83
    TOK_LS_EQUAL  shift, and go to state 84

    $default  reduce using rule 60 (elist)


State 147

   64 indexed: indexed TOK_COMMA indexedelem •

    $default  reduce using rule 64 (indexed)


State 148

   55 call: TOK_L_PARENTH funcdef TOK_R_PARENTH normcall •

    $default  reduce using rule 55 (call)


State 149

   50 member: lvalue TOK_L_BR expression TOK_R_BR •

    $default  reduce using rule 50 (member)


State 150

   58 normcall: TOK_L_PARENTH elist TOK_R_PARENTH •

    $default  reduce using rule 58 (normcall)


State 151

   59 methodcall: TOK_DBL_DOT TOK_ID normcall •

    $default  reduce using rule 59 (methodcall)


State 152

   52 member: call TOK_L_BR expression TOK_R_BR •

    $default  reduce using rule 52 (member)


State 153

   74 funcargs: TOK_L_PARENTH idlist TOK_R_PARENTH •

    $default  reduce using rule 74 (funcargs)


State 154

   84 idlist: idlist TOK_COMMA • TOK_ID

    TOK_ID  shift, and go to state 160


State 155

    3 statement: • expression TOK_SEMICOLON
    4          | • if_statement
    5          | • while_statement
    6          | • for_statement
    7          | • return_statement
    8          | • TOK_CONTINUE TOK_SEMICOLON
    9          | • TOK_BREAK TOK_SEMICOLON
   10          | • block
   11          | • funcdef
   12          | • TOK_SEMICOLON
   13          | • error TOK_SEMICOLON
   14 statements: statements • statement
   16 expression: • assignexpr
   17           | • expression TOK_PLUS expression
   18           | • expression TOK_MINUS expression
   19           | • expression TOK_MULTIPLY expression
   20           | • expression TOK_DIVIDE expression
   21           | • expression TOK_MODULO expression
   22           | • expression TOK_GREATER expression
   23           | • expression TOK_LESS expression
   24           | • expression TOK_GR_EQUAL expression
   25           | • expression TOK_LS_EQUAL expression
   26           | • expression TOK_EQUAL expression
   27           | • expression TOK_N_EQUAL expression
   28           | • expression TOK_AND expression
   29           | • expression TOK_OR expression
   30           | • term
   31 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   32     | • TOK_MINUS expression
   33     | • TOK_NOT expression
   34     | • TOK_DBL_PLUS lvalue
   35     | • lvalue TOK_DBL_PLUS
   36     | • TOK_DBL_MINUS lvalue
   37     | • lvalue TOK_DBL_MINUS
   38     | • primary
   39 assignexpr: • lvalue TOK_ASSIGN expression
   40 primary: • lvalue
   41        | • call
   42        | • objectdef
   43        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   44        | • const
   45 lvalue: • TOK_ID
   46       | • TOK_LOCAL TOK_ID
   47       | • TOK_DBL_COLON TOK_ID
   48       | • member
   49 member: • lvalue TOK_DOT TOK_ID
   50       | • lvalue TOK_L_BR expression TOK_R_BR
   51       | • call TOK_DOT TOK_ID
   52       | • call TOK_L_BR expression TOK_R_BR
   53 call: • call normcall
   54     | • lvalue callsuffix
   55     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   65 objectdef: • TOK_L_BR elist TOK_R_BR
   66          | • TOK_L_BR indexed TOK_R_BR
   69 block: • TOK_L_CURLY_BR $@1 statements TOK_R_CURLY_BR
   70 funcdef_block: TOK_L_CURLY_BR statements • TOK_R_CURLY_BR
   73 funcprefix: • TOK_FUNCTION funcname
   76 funcdef: • funcprefix funcargs funcbody
   77 const: • TOK_INT
   78      | • TOK_FLOAT
   79      | • TOK_STRING
   80      | • TOK_NIL
   81      | • TOK_TRUE
   82      | • TOK_FALSE
   86 if_statement: • TOK_IF TOK_L_PARENTH expression TOK_R_PARENTH statement
   87             | • TOK_IF TOK_L_PARENTH expression TOK_R_PARENTH statement TOK_ELSE statement
   88 while_statement: • TOK_WHILE TOK_L_PARENTH expression TOK_R_PARENTH statement
   89 for_statement: • TOK_FOR TOK_L_PARENTH elist TOK_SEMICOLON expression TOK_SEMICOLON elist TOK_R_PARENTH statement
   90 return_statement: • TOK_RETURN TOK_SEMICOLON
   91                 | • TOK_RETURN expression TOK_SEMICOLON

    error           shift, and go to state 4
    TOK_IF          shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_FOR         shift, and go to state 7
    TOK_FUNCTION    shift, and go to state 8
    TOK_RETURN      shift, and go to state 9
    TOK_BREAK       shift, and go to state 10
    TOK_CONTINUE    shift, and go to state 11
    TOK_NOT         shift, and go to state 12
    TOK_LOCAL       shift, and go to state 13
    TOK_TRUE        shift, and go to state 14
    TOK_FALSE       shift, and go to state 15
    TOK_NIL         shift, and go to state 16
    TOK_MINUS       shift, and go to state 17
    TOK_DBL_PLUS    shift, and go to state 18
    TOK_DBL_MINUS   shift, and go to state 19
    TOK_L_CURLY_BR  shift, and go to state 20
    TOK_R_CURLY_BR  shift, and go to state 161
    TOK_L_BR        shift, and go to state 21
    TOK_L_PARENTH   shift, and go to state 22
    TOK_SEMICOLON   shift, and go to state 23
    TOK_DBL_COLON   shift, and go to state 24
    TOK_ID          shift, and go to state 25
    TOK_INT         shift, and go to state 26
    TOK_FLOAT       shift, and go to state 27
    TOK_STRING      shift, and go to state 28

    statement         go to state 144
    expression        go to state 30
    term              go to state 31
    assignexpr        go to state 32
    primary           go to state 33
    lvalue            go to state 34
    member            go to state 35
    call              go to state 36
    objectdef         go to state 37
    block             go to state 38
    funcprefix        go to state 39
    funcdef           go to state 40
    const             go to state 41
    if_statement      go to state 42
    while_statement   go to state 43
    for_statement     go to state 44
    return_statement  go to state 45


State 156

   86 if_statement: TOK_IF TOK_L_PARENTH expression TOK_R_PARENTH statement •  [$end, error, TOK_IF, TOK_WHILE, TOK_FOR, TOK_FUNCTION, TOK_RETURN, TOK_BREAK, TOK_CONTINUE, TOK_NOT, TOK_LOCAL, TOK_TRUE, TOK_FALSE, TOK_NIL, TOK_MINUS, TOK_DBL_PLUS, TOK_DBL_MINUS, TOK_L_CURLY_BR, TOK_R_CURLY_BR, TOK_L_BR, TOK_L_PARENTH, TOK_SEMICOLON, TOK_DBL_COLON, TOK_ID, TOK_INT, TOK_FLOAT, TOK_STRING]
   87             | TOK_IF TOK_L_PARENTH expression TOK_R_PARENTH statement • TOK_ELSE statement

    TOK_ELSE  shift, and go to state 162

    $default  reduce using rule 86 (if_statement)

    Conflict between rule 86 and token TOK_ELSE resolved as shift (TOK_R_PARENTH < TOK_ELSE).


State 157

   88 while_statement: TOK_WHILE TOK_L_PARENTH expression TOK_R_PARENTH statement •

    $default  reduce using rule 88 (while_statement)


State 158

   17 expression: expression • TOK_PLUS expression
   18           | expression • TOK_MINUS expression
   19           | expression • TOK_MULTIPLY expression
   20           | expression • TOK_DIVIDE expression
   21           | expression • TOK_MODULO expression
   22           | expression • TOK_GREATER expression
   23           | expression • TOK_LESS expression
   24           | expression • TOK_GR_EQUAL expression
   25           | expression • TOK_LS_EQUAL expression
   26           | expression • TOK_EQUAL expression
   27           | expression • TOK_N_EQUAL expression
   28           | expression • TOK_AND expression
   29           | expression • TOK_OR expression
   89 for_statement: TOK_FOR TOK_L_PARENTH elist TOK_SEMICOLON expression • TOK_SEMICOLON elist TOK_R_PARENTH statement

    TOK_AND        shift, and go to state 72
    TOK_OR         shift, and go to state 73
    TOK_PLUS       shift, and go to state 74
    TOK_MINUS      shift, and go to state 75
    TOK_MULTIPLY   shift, and go to state 76
    TOK_DIVIDE     shift, and go to state 77
    TOK_MODULO     shift, and go to state 78
    TOK_EQUAL      shift, and go to state 79
    TOK_N_EQUAL    shift, and go to state 80
    TOK_GREATER    shift, and go to state 81
    TOK_LESS       shift, and go to state 82
    TOK_GR_EQUAL   shift, and go to state 83
    TOK_LS_EQUAL   shift, and go to state 84
    TOK_SEMICOLON  shift, and go to state 163


State 159

   17 expression: expression • TOK_PLUS expression
   18           | expression • TOK_MINUS expression
   19           | expression • TOK_MULTIPLY expression
   20           | expression • TOK_DIVIDE expression
   21           | expression • TOK_MODULO expression
   22           | expression • TOK_GREATER expression
   23           | expression • TOK_LESS expression
   24           | expression • TOK_GR_EQUAL expression
   25           | expression • TOK_LS_EQUAL expression
   26           | expression • TOK_EQUAL expression
   27           | expression • TOK_N_EQUAL expression
   28           | expression • TOK_AND expression
   29           | expression • TOK_OR expression
   67 indexedelem: TOK_L_CURLY_BR expression TOK_COLON expression • TOK_R_CURLY_BR

    TOK_AND         shift, and go to state 72
    TOK_OR          shift, and go to state 73
    TOK_PLUS        shift, and go to state 74
    TOK_MINUS       shift, and go to state 75
    TOK_MULTIPLY    shift, and go to state 76
    TOK_DIVIDE      shift, and go to state 77
    TOK_MODULO      shift, and go to state 78
    TOK_EQUAL       shift, and go to state 79
    TOK_N_EQUAL     shift, and go to state 80
    TOK_GREATER     shift, and go to state 81
    TOK_LESS        shift, and go to state 82
    TOK_GR_EQUAL    shift, and go to state 83
    TOK_LS_EQUAL    shift, and go to state 84
    TOK_R_CURLY_BR  shift, and go to state 164


State 160

   84 idlist: idlist TOK_COMMA TOK_ID •

    $default  reduce using rule 84 (idlist)


State 161

   70 funcdef_block: TOK_L_CURLY_BR statements TOK_R_CURLY_BR •

    $default  reduce using rule 70 (funcdef_block)


State 162

    3 statement: • expression TOK_SEMICOLON
    4          | • if_statement
    5          | • while_statement
    6          | • for_statement
    7          | • return_statement
    8          | • TOK_CONTINUE TOK_SEMICOLON
    9          | • TOK_BREAK TOK_SEMICOLON
   10          | • block
   11          | • funcdef
   12          | • TOK_SEMICOLON
   13          | • error TOK_SEMICOLON
   16 expression: • assignexpr
   17           | • expression TOK_PLUS expression
   18           | • expression TOK_MINUS expression
   19           | • expression TOK_MULTIPLY expression
   20           | • expression TOK_DIVIDE expression
   21           | • expression TOK_MODULO expression
   22           | • expression TOK_GREATER expression
   23           | • expression TOK_LESS expression
   24           | • expression TOK_GR_EQUAL expression
   25           | • expression TOK_LS_EQUAL expression
   26           | • expression TOK_EQUAL expression
   27           | • expression TOK_N_EQUAL expression
   28           | • expression TOK_AND expression
   29           | • expression TOK_OR expression
   30           | • term
   31 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   32     | • TOK_MINUS expression
   33     | • TOK_NOT expression
   34     | • TOK_DBL_PLUS lvalue
   35     | • lvalue TOK_DBL_PLUS
   36     | • TOK_DBL_MINUS lvalue
   37     | • lvalue TOK_DBL_MINUS
   38     | • primary
   39 assignexpr: • lvalue TOK_ASSIGN expression
   40 primary: • lvalue
   41        | • call
   42        | • objectdef
   43        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   44        | • const
   45 lvalue: • TOK_ID
   46       | • TOK_LOCAL TOK_ID
   47       | • TOK_DBL_COLON TOK_ID
   48       | • member
   49 member: • lvalue TOK_DOT TOK_ID
   50       | • lvalue TOK_L_BR expression TOK_R_BR
   51       | • call TOK_DOT TOK_ID
   52       | • call TOK_L_BR expression TOK_R_BR
   53 call: • call normcall
   54     | • lvalue callsuffix
   55     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   65 objectdef: • TOK_L_BR elist TOK_R_BR
   66          | • TOK_L_BR indexed TOK_R_BR
   69 block: • TOK_L_CURLY_BR $@1 statements TOK_R_CURLY_BR
   73 funcprefix: • TOK_FUNCTION funcname
   76 funcdef: • funcprefix funcargs funcbody
   77 const: • TOK_INT
   78      | • TOK_FLOAT
   79      | • TOK_STRING
   80      | • TOK_NIL
   81      | • TOK_TRUE
   82      | • TOK_FALSE
   86 if_statement: • TOK_IF TOK_L_PARENTH expression TOK_R_PARENTH statement
   87             | • TOK_IF TOK_L_PARENTH expression TOK_R_PARENTH statement TOK_ELSE statement
   87             | TOK_IF TOK_L_PARENTH expression TOK_R_PARENTH statement TOK_ELSE • statement
   88 while_statement: • TOK_WHILE TOK_L_PARENTH expression TOK_R_PARENTH statement
   89 for_statement: • TOK_FOR TOK_L_PARENTH elist TOK_SEMICOLON expression TOK_SEMICOLON elist TOK_R_PARENTH statement
   90 return_statement: • TOK_RETURN TOK_SEMICOLON
   91                 | • TOK_RETURN expression TOK_SEMICOLON

    error           shift, and go to state 4
    TOK_IF          shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_FOR         shift, and go to state 7
    TOK_FUNCTION    shift, and go to state 8
    TOK_RETURN      shift, and go to state 9
    TOK_BREAK       shift, and go to state 10
    TOK_CONTINUE    shift, and go to state 11
    TOK_NOT         shift, and go to state 12
    TOK_LOCAL       shift, and go to state 13
    TOK_TRUE        shift, and go to state 14
    TOK_FALSE       shift, and go to state 15
    TOK_NIL         shift, and go to state 16
    TOK_MINUS       shift, and go to state 17
    TOK_DBL_PLUS    shift, and go to state 18
    TOK_DBL_MINUS   shift, and go to state 19
    TOK_L_CURLY_BR  shift, and go to state 20
    TOK_L_BR        shift, and go to state 21
    TOK_L_PARENTH   shift, and go to state 22
    TOK_SEMICOLON   shift, and go to state 23
    TOK_DBL_COLON   shift, and go to state 24
    TOK_ID          shift, and go to state 25
    TOK_INT         shift, and go to state 26
    TOK_FLOAT       shift, and go to state 27
    TOK_STRING      shift, and go to state 28

    statement         go to state 165
    expression        go to state 30
    term              go to state 31
    assignexpr        go to state 32
    primary           go to state 33
    lvalue            go to state 34
    member            go to state 35
    call              go to state 36
    objectdef         go to state 37
    block             go to state 38
    funcprefix        go to state 39
    funcdef           go to state 40
    const             go to state 41
    if_statement      go to state 42
    while_statement   go to state 43
    for_statement     go to state 44
    return_statement  go to state 45


State 163

   16 expression: • assignexpr
   17           | • expression TOK_PLUS expression
   18           | • expression TOK_MINUS expression
   19           | • expression TOK_MULTIPLY expression
   20           | • expression TOK_DIVIDE expression
   21           | • expression TOK_MODULO expression
   22           | • expression TOK_GREATER expression
   23           | • expression TOK_LESS expression
   24           | • expression TOK_GR_EQUAL expression
   25           | • expression TOK_LS_EQUAL expression
   26           | • expression TOK_EQUAL expression
   27           | • expression TOK_N_EQUAL expression
   28           | • expression TOK_AND expression
   29           | • expression TOK_OR expression
   30           | • term
   31 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   32     | • TOK_MINUS expression
   33     | • TOK_NOT expression
   34     | • TOK_DBL_PLUS lvalue
   35     | • lvalue TOK_DBL_PLUS
   36     | • TOK_DBL_MINUS lvalue
   37     | • lvalue TOK_DBL_MINUS
   38     | • primary
   39 assignexpr: • lvalue TOK_ASSIGN expression
   40 primary: • lvalue
   41        | • call
   42        | • objectdef
   43        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   44        | • const
   45 lvalue: • TOK_ID
   46       | • TOK_LOCAL TOK_ID
   47       | • TOK_DBL_COLON TOK_ID
   48       | • member
   49 member: • lvalue TOK_DOT TOK_ID
   50       | • lvalue TOK_L_BR expression TOK_R_BR
   51       | • call TOK_DOT TOK_ID
   52       | • call TOK_L_BR expression TOK_R_BR
   53 call: • call normcall
   54     | • lvalue callsuffix
   55     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   60 elist: • elist TOK_COMMA expression
   61      | • expression
   62      | ε •  [TOK_R_PARENTH, TOK_COMMA]
   65 objectdef: • TOK_L_BR elist TOK_R_BR
   66          | • TOK_L_BR indexed TOK_R_BR
   77 const: • TOK_INT
   78      | • TOK_FLOAT
   79      | • TOK_STRING
   80      | • TOK_NIL
   81      | • TOK_TRUE
   82      | • TOK_FALSE
   89 for_statement: TOK_FOR TOK_L_PARENTH elist TOK_SEMICOLON expression TOK_SEMICOLON • elist TOK_R_PARENTH statement

    TOK_NOT        shift, and go to state 12
    TOK_LOCAL      shift, and go to state 13
    TOK_TRUE       shift, and go to state 14
    TOK_FALSE      shift, and go to state 15
    TOK_NIL        shift, and go to state 16
    TOK_MINUS      shift, and go to state 17
    TOK_DBL_PLUS   shift, and go to state 18
    TOK_DBL_MINUS  shift, and go to state 19
    TOK_L_BR       shift, and go to state 21
    TOK_L_PARENTH  shift, and go to state 22
    TOK_DBL_COLON  shift, and go to state 24
    TOK_ID         shift, and go to state 25
    TOK_INT        shift, and go to state 26
    TOK_FLOAT      shift, and go to state 27
    TOK_STRING     shift, and go to state 28

    $default  reduce using rule 62 (elist)

    expression  go to state 65
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    elist       go to state 166
    objectdef   go to state 37
    const       go to state 41


State 164

   67 indexedelem: TOK_L_CURLY_BR expression TOK_COLON expression TOK_R_CURLY_BR •

    $default  reduce using rule 67 (indexedelem)


State 165

   87 if_statement: TOK_IF TOK_L_PARENTH expression TOK_R_PARENTH statement TOK_ELSE statement •

    $default  reduce using rule 87 (if_statement)


State 166

   60 elist: elist • TOK_COMMA expression
   89 for_statement: TOK_FOR TOK_L_PARENTH elist TOK_SEMICOLON expression TOK_SEMICOLON elist • TOK_R_PARENTH statement

    TOK_R_PARENTH  shift, and go to state 167
    TOK_COMMA      shift, and go to state 109


State 167

    3 statement: • expression TOK_SEMICOLON
    4          | • if_statement
    5          | • while_statement
    6          | • for_statement
    7          | • return_statement
    8          | • TOK_CONTINUE TOK_SEMICOLON
    9          | • TOK_BREAK TOK_SEMICOLON
   10          | • block
   11          | • funcdef
   12          | • TOK_SEMICOLON
   13          | • error TOK_SEMICOLON
   16 expression: • assignexpr
   17           | • expression TOK_PLUS expression
   18           | • expression TOK_MINUS expression
   19           | • expression TOK_MULTIPLY expression
   20           | • expression TOK_DIVIDE expression
   21           | • expression TOK_MODULO expression
   22           | • expression TOK_GREATER expression
   23           | • expression TOK_LESS expression
   24           | • expression TOK_GR_EQUAL expression
   25           | • expression TOK_LS_EQUAL expression
   26           | • expression TOK_EQUAL expression
   27           | • expression TOK_N_EQUAL expression
   28           | • expression TOK_AND expression
   29           | • expression TOK_OR expression
   30           | • term
   31 term: • TOK_L_PARENTH expression TOK_R_PARENTH
   32     | • TOK_MINUS expression
   33     | • TOK_NOT expression
   34     | • TOK_DBL_PLUS lvalue
   35     | • lvalue TOK_DBL_PLUS
   36     | • TOK_DBL_MINUS lvalue
   37     | • lvalue TOK_DBL_MINUS
   38     | • primary
   39 assignexpr: • lvalue TOK_ASSIGN expression
   40 primary: • lvalue
   41        | • call
   42        | • objectdef
   43        | • TOK_L_PARENTH funcdef TOK_R_PARENTH
   44        | • const
   45 lvalue: • TOK_ID
   46       | • TOK_LOCAL TOK_ID
   47       | • TOK_DBL_COLON TOK_ID
   48       | • member
   49 member: • lvalue TOK_DOT TOK_ID
   50       | • lvalue TOK_L_BR expression TOK_R_BR
   51       | • call TOK_DOT TOK_ID
   52       | • call TOK_L_BR expression TOK_R_BR
   53 call: • call normcall
   54     | • lvalue callsuffix
   55     | • TOK_L_PARENTH funcdef TOK_R_PARENTH normcall
   65 objectdef: • TOK_L_BR elist TOK_R_BR
   66          | • TOK_L_BR indexed TOK_R_BR
   69 block: • TOK_L_CURLY_BR $@1 statements TOK_R_CURLY_BR
   73 funcprefix: • TOK_FUNCTION funcname
   76 funcdef: • funcprefix funcargs funcbody
   77 const: • TOK_INT
   78      | • TOK_FLOAT
   79      | • TOK_STRING
   80      | • TOK_NIL
   81      | • TOK_TRUE
   82      | • TOK_FALSE
   86 if_statement: • TOK_IF TOK_L_PARENTH expression TOK_R_PARENTH statement
   87             | • TOK_IF TOK_L_PARENTH expression TOK_R_PARENTH statement TOK_ELSE statement
   88 while_statement: • TOK_WHILE TOK_L_PARENTH expression TOK_R_PARENTH statement
   89 for_statement: • TOK_FOR TOK_L_PARENTH elist TOK_SEMICOLON expression TOK_SEMICOLON elist TOK_R_PARENTH statement
   89              | TOK_FOR TOK_L_PARENTH elist TOK_SEMICOLON expression TOK_SEMICOLON elist TOK_R_PARENTH • statement
   90 return_statement: • TOK_RETURN TOK_SEMICOLON
   91                 | • TOK_RETURN expression TOK_SEMICOLON

    error           shift, and go to state 4
    TOK_IF          shift, and go to state 5
    TOK_WHILE       shift, and go to state 6
    TOK_FOR         shift, and go to state 7
    TOK_FUNCTION    shift, and go to state 8
    TOK_RETURN      shift, and go to state 9
    TOK_BREAK       shift, and go to state 10
    TOK_CONTINUE    shift, and go to state 11
    TOK_NOT         shift, and go to state 12
    TOK_LOCAL       shift, and go to state 13
    TOK_TRUE        shift, and go to state 14
    TOK_FALSE       shift, and go to state 15
    TOK_NIL         shift, and go to state 16
    TOK_MINUS       shift, and go to state 17
    TOK_DBL_PLUS    shift, and go to state 18
    TOK_DBL_MINUS   shift, and go to state 19
    TOK_L_CURLY_BR  shift, and go to state 20
    TOK_L_BR        shift, and go to state 21
    TOK_L_PARENTH   shift, and go to state 22
    TOK_SEMICOLON   shift, and go to state 23
    TOK_DBL_COLON   shift, and go to state 24
    TOK_ID          shift, and go to state 25
    TOK_INT         shift, and go to state 26
    TOK_FLOAT       shift, and go to state 27
    TOK_STRING      shift, and go to state 28

    statement         go to state 168
    expression        go to state 30
    term              go to state 31
    assignexpr        go to state 32
    primary           go to state 33
    lvalue            go to state 34
    member            go to state 35
    call              go to state 36
    objectdef         go to state 37
    block             go to state 38
    funcprefix        go to state 39
    funcdef           go to state 40
    const             go to state 41
    if_statement      go to state 42
    while_statement   go to state 43
    for_statement     go to state 44
    return_statement  go to state 45


State 168

   89 for_statement: TOK_FOR TOK_L_PARENTH elist TOK_SEMICOLON expression TOK_SEMICOLON elist TOK_R_PARENTH statement •

    $default  reduce using rule 89 (for_statement)
